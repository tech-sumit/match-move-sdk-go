openapi: 3.0.0
info:
  title: Core Payments
  description: "# API Reference\nThe MatchMove API is organized around REST. Our API\
    \ has predictable resource-oriented URLs, accepts form-encoded request bodies,\
    \ returns JSON-encoded responses, and uses standard HTTP response codes, authentication,\
    \ and verbs.\nYou can use the MatchMove API in test mode, which does not affect\
    \ your live data or interact with the banking networks. The API key you use to\
    \ authenticate the request determines whether the request is live mode or test\
    \ mode.\nThe MatchMove API differs for every account as we release new versions\
    \ and tailor functionality. Log in to see docs customized to your version of the\
    \ API, with your test key and data.\n"
  termsOfService: https://www.matchmove.com/terms
  contact:
    name: MatchMove Pay Pte Ltd.
    url: https://www.matchmove.com/contact
    email: code@matchmove.com
  version: 1.18.0
servers:
- url: "https://beta-api.mmvpay.com/{product}/v1"
  description: Sandbox Environment. Interfaces with sandbox data
  variables:
    product:
      description: Product code generated for you by MatchMove
      default: sgmdemo
      enum:
      - sgmdemo
      - indemo
      - vndemo
- url: "https://api.mmvpay.com/{product}/v1"
  description: Production Environment. Interfaces with live Data
  variables:
    product:
      description: Product code generated for you by MatchMove
      default: invisa
security:
- basicAuth: []
tags:
- name: Oauth-Utilities
  description: |
    Oauth utilities are set of helper endpoints provided to API consumers to augment their utilization of the  platform by consuming these endpoints which generally expose data at a program level rather than at a user level.
- name: Users
  description: "A User refers to any consumer who uses the Virtual Wallet platform.\
    \ \n"
- name: User Addresses
- name: User Risk
- name: Users Identity Authentications
- name: Wallets
  description: |
    Wallet is the root payment account that is created in the system linked to a user. One user can have one wallet.
- name: Cards
  description: |
    Cards is the supplementary payment instrument created in the system
- name: Cards Transactional Limits
- name: Cards Fund Categories
- name: Cards Fund Categories Limits
- name: Cards Count Limits
- name: Remittances
  description: |
    Endpoints dealing with all remittance transactions in the system
- name: Funds
  description: |
    Endpoints dealing with all closed loop transactions in the system
- name: Funds Categories
  description: |
    The Fund Category feature allows you to control how a balance or "fund" is spent. Every time a cat
- name: Transactions
- name: Transaction Rules
- name: Virtual Accounts
  description: |
    Webhooks resource collection allows consumers to receive updates and programmatically manage updates in their system based on events a consumer chooses to subscribe.
- name: Webhooks
  description: |
    Webhooks resource collection allows consumers to receive updates and programmatically manage updates in their system based on events a consumer chooses to  subscribe.
- name: Enumerations
- name: Enumerations Users
- name: Oauth Utilities Reporting
- name: Currencies
paths:
  /users:
    get:
      tags:
      - Users
      summary: Get user
      description: |
        Retrieve details of a particular user created in the system
      operationId: get_user
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_full.v1'
    put:
      tags:
      - Users
      summary: Update user
      description: "Update details of a user created in the system\n\nThe `preferred_name`\
        \ can only be changed before wallet/card creation.\n\nModifying `first_name`,\
        \ `middle_name`, `last_name`, `id_type`, `id_number` and/or `id_date_expiry`\
        \ will result to the removal of any risk exception created for the user, thus,\
        \ a new exception must be added using <a href=\"#post-users-risk-exceptions\"\
        >POST /users/risk/exceptions</a>.\n\nThis resource may function as a validation\
        \ for the given parameters, provided appending `test` to the url (eg. users/test).\n"
      operationId: update_user
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_request.v1'
            examples: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_full.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Users
      summary: Create/Re-activate user
      description: "This endpoint used for creation of new user in the system. In\
        \ addition when called just using `user_id` the same endpoint is used for\
        \ re-activating the user in the system. If the user is in locked state.\n\n\
        The user information that needs to be colleted in the system depends on the\
        \ country of issuance of the program.\n<!-- theme: info -->\n> ### Note\n\
        >\n> Mobile number and email combination is unique individually in the system.\
        \ For a given program if mobile number is already in use and that account\
        \ is in active or locked state the same mobile number cannot be used for new\
        \ account creation. It can only be re-used if the original account is in blocked\
        \ state. Similarly for a given program if email is already in use and the\
        \ account is in active or locked state the same email cannot be used for another\
        \ user. It can only be re-used if the account is in blocked state. \n\n<!--\
        \ theme: info -->\n> ### Note\n>\n> Do note when this endpoint is called in\
        \ context of user re-activation only user_id is required. \n\n<!-- theme:\
        \ danger -->\n> ### Note\n>\n> Blocked accounts cannot be re-activated\n"
      operationId: create_users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_request.v1'
            examples:
              Create User:
                value:
                  first_name: John
                  last_name: Doe
                  preferred_name: John Doe
                  email: john@doe.com
                  mobile_country_code: 65
                  password: Use@strongPass1
                  mobile: 91900001
              Create User with all demographic Information:
                value:
                  id: string
                  first_name: string
                  last_name: string
                  middle_name: string
                  preferred_name: string
                  email: string
                  mobile_country_code: string
                  password: string
                  mobile: 0
                  title: Mr
                  id_type: string
                  id_number: string
                  id_date_expiry: string
                  id_date_issue: string
                  country_of_issue: string
                  alt_id_type: string
                  alt_id_number: string
                  alt_id_date_expiry: string
                  alt_id_date_issue: string
                  alt_id_country_of_issue: string
                  birthday: string
                  place_of_birth: string
                  nationality: string
                  gender: string
                  marital_status: string
                  mothers_maiden_name: string
                  nature_of_business: string
                  customer_id: string
                  purpose_of_account: string
                  partner_id: string
              Reactivate User:
                value:
                  id: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_full.v1'
          links:
            GetUserByUserId:
              $ref: '#/components/links/GetUserByUserId'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/{user_id}:
    delete:
      tags:
      - Users
      summary: |
        De-activate user
      description: "There are two kinds of suspensions which are supported in the\
        \ system currently. depending on the state passed as part of the request the\
        \ behavior changes.\n### Suspended\n  disable all resources of the user which\
        \ includes the generation of the security token. This will also invalidate\
        \ all active access associated to the user. If the card has been already pre-validated\
        \ by a merchant, an authorization can still be made.\n### Blocked\n  will\
        \ suspend the account and block all cards associated to the user. The blocked\
        \ cards will disable all transaction made by that card, and all purchase authorization.\n\
        <!-- theme: info -->\n> ### Note\n> An account with cards or payment account\
        \ with pending settlements cannot be closed. You are recommended to first\
        \ suspend the account and wait for pending settlements before blocking\n"
      operationId: delete_user_id
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/users_user_id_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets:
    get:
      tags:
      - Wallets
      summary: Retrieve Wallet
      description: Retrieve user's wallet details and information.
      operationId: get_user_wallet
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet_full.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Wallets
      summary: Create Wallet
      description: "Create a wallet for a customer created in the system \n\nDo note\
        \ the resource has the following pre-requisites too be present in\nthe system\
        \ for the user information depending on regions\n\n\nFor Singapore\n- `Nationality`\n\
        \nFor India\n- `id_type`\n- `id_number`\n"
      operationId: create_user_wallet
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet_full.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/transactions/{page}:
    get:
      tags:
      - Transactions
      summary: Get Wallet Transactions
      description: Retrieves the transaction history of the User's Virtual Wallet
      operationId: get_user_wallet_transaction
      parameters:
      - name: page
        in: path
        description: the one-based page number (maximum value of 99) to be displayed.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      - name: limit
        in: query
        description: Number of transactions return per page (Default 5)
        required: false
        style: form
        explode: true
        schema:
          maxLength: 2
          type: string
          default: "5"
      - name: type
        in: query
        description: "Filter transactions according to transaction types. Values can\
          \ be: [debit , credit]. "
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - debit
          - credit
      - name: date_range
        in: query
        description: "Limit transactions based on date range. Example: `date_range=20141220,20150131`. "
        required: false
        style: form
        explode: true
        schema:
          maxLength: 21
          type: string
      - name: sort
        in: query
        description: "Comma delimited sorting of the result according to amount, date.added\
          \ and date.expiry. Example: sort=`+amount`,`-date.added`,`-date.expiry`.\
          \ Only works for in house balance products."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/types:
    get:
      tags:
      - Cards
      summary: Get configured card types
      description: Retrieve the list of card types supported in the system
      operationId: get_user_wallet_card_types
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Invalid card type configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /users/wallets/cards/{card_type_code}:
    post:
      tags:
      - Cards
      summary: Create Card
      description: "This Api is used for fulfilling the following use cases:\n  -\
        \ Creating Virtual Card in the system\n  - Linking a non personalized card\
        \ to the wallet of the user in the system\n  - Linking and activating a non\
        \ personalized card to the wallet of the user in the system (requires `auto_activate`\
        \ parameter with value `true` passed)\n  - Placing a personalized card order\
        \ in the system\n\n<!-- theme: info -->\n> ### Note\n> If mask_number config\
        \ is enabled the `number` will be in the encrypted form (123456 XX XXXX 1234).\
        \ \n\nLearn more about [cards resource](https://matchmove.stoplight.io/docs/optimus-prime/docs/Guides/Cards/Cards-Overview.md)\n"
      operationId: create_user_wallet_card
      parameters:
      - name: card_type_code
        in: path
        description: "The card type available for the program in the system. Available\
          \ choices can be retrieved via [Get configured card types](https://developer.matchmove.com/docs/optimus-prime/op_api.yaml/paths/~1users~1wallets~1cards~1types/get)"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cards_card_type_code_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card_full.v1'
          links:
            GetCardId:
              operationId: getCardId
              parameters:
                user_id: $response.body#/id
              description: "The `id` value returned in the response can be used as\n\
                the `card_id` parameter in `GET /users/{user_id}`.\n"
  /users/wallets/cards:
    get:
      tags:
      - Cards
      summary: Get cards for user
      description: "Retrieve the list of card types supported in the system\n<!--\
        \ theme: danger -->\n\n> ### Deprecation Notice\n>\n> Do note this API is\
        \ no longer actively supported and partners are expected to consume get /users/wallets/cards/card_id\
        \ explicitly.\n\n<!-- theme: info -->\n> ### Note\n> If mask_number config\
        \ is enabled the `number` will be in the encrypted form (123456 XX XXXX 1234).\
        \ \n"
      operationId: get_user_wallet_cards
      parameters:
      - name: mask_number
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
  /users/wallets/cards/{card_id}:
    get:
      tags:
      - Cards
      summary: Get card details
      description: "Retrieve the details of a particular card in the system via card_id.\n\
        \n<!-- theme: info -->\n> ### Note\n> If mask_number config is enabled the\
        \ `number` will be in the encrypted form (123456 XX XXXX 1234).\n"
      operationId: get_user_wallet_card_id
      parameters:
      - name: card_id
        in: path
        description: |
          Cards id which can be obtained using GET `/users/wallets` or GET `/users/wallets/cards`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mask_number
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card_full.v1'
        "400":
          description: Invalid card `hash_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Something went wrong while retrieving your card information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    put:
      tags:
      - Cards
      summary: Activate card
      description: "Process for activation of physical card (Personalized / Non Personalized).\
        \ This API is not applicable for virtual card type.\nIf 2fa is enabled, then\
        \ in response the details related to the same is returned.\n<!-- theme: info\
        \ -->\n> ### Note\n> Do note if `auto_activate=true` is passed during `POST\
        \ /users/wallets/{card_type_code}` this step is not applicable.\n"
      operationId: put_user_wallet_card_id
      parameters:
      - name: card_id
        in: path
        description: |
          Cards id which can be obtained using GET `/users/wallets` or GET `/users/wallets/cards`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cards_card_id_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
    post:
      tags:
      - Cards
      summary: Re-activate card
      description: "Re-Activate a locked card\n\n<!-- theme: info -->\n> ### Note\n\
        > If mask_number config is enabled the `number` will be in the encrypted form\
        \ (123456 XX XXXX 1234). \n"
      operationId: reactivate_user_wallet_card_id
      parameters:
      - name: card_id
        in: path
        description: |
          Cards id which can be obtained using GET `/users/wallets` or GET `/users/wallets/cards`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cards_card_id_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Cards
      summary: Suspend / Block card
      description: "There are two kinds of suspensions which are supported in the\
        \ system currently. Depending on the state passed as part of the request the\
        \ behavior changes.\n### Suspended\nSuspends the card prevents fresh authorizations\
        \ on that card. If the card has been already pre-validated by a merchant,\
        \ an authorization can still be made.\n### Blocked\nBlocking cards will disable\
        \ all transaction made by that card, and all purchase authorization.\n<!--\
        \ theme: info -->\n> ### Note\n> A card with pending settlements cannot be\
        \ blocked. You are recommended to first suspend the account and wait for pending\
        \ settlements before blocking\n\n<!-- theme: info -->\n> ### Note\n> If mask_number\
        \ config is enabled the `number` will be in the encrypted form (123456 XX\
        \ XXXX 1234). \n\n<!-- theme: danger -->\n> ### Note\n> Passing values `lost`,\
        \ `stolen` and `damaged`  will permanently block the card and is irreversible\n"
      operationId: delete_user_wallet_card
      parameters:
      - name: card_id
        in: path
        description: |
          Cards id which can be obtained using GET `/users/wallets` or GET `/users/wallets/cards`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cards_card_id_body_2'
        required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/{card_id}/pins:
    post:
      tags:
      - Cards
      summary: Set card pin
      description: "Setting a pin for the user in the system. Due to security considerations\
        \ and guidelines imposed by PCIDSS, the PIN can never be transmitted using\
        \ clear text.\n\n\nTo use this API , clients will be provided with a ZPK ,\
        \ that would be used for generating the Pinblock in a secure manner.\n\nIn\
        \ addition for security considerations and prevent fraud. There are thresholds\
        \ implemented with respect to the count of PIN resets that can be attempted\
        \ within a given period.\n\n*Note*\nIt is highly recommended to implement\
        \ a KMS or HSM for storage of the ZPK provisioned for you.\n\nThe encryption\
        \ logic is as follows\n\nPINBLOCK FORMAT : ISO FORMAT ZERO\n\nEncryption Method\
        \ : ANSI X 9.17 – Triple DES – ECB\n\nKey Management : Static PIN Encryption\
        \ Key\n\nKey Length : Double Length (32 hexadecimal characters)\n\nSample\
        \ Data with Input and Output\n\n### Input\nPIN Encryption Key (Clear) : `0123456789ABCDEF0123456789ABCDEF`\n\
        Pin entered by Customer : `1234`\nMobile no : `00 65 12345678`\nOutgoing PINBLOCK(ISO\
        \ FORMAT ZERO) : `1D51A078AC3F7081`\n\n***\nmobile number will be always 12\
        \ digits, lets say if system was having a mobile number with only 10 digits\
        \ (6512345678) then should we consider (006512345678)\n\n*Phone Number (12\
        \ digits)*: `123456789012`\n\n*Key (16 or 24 bytes, 16 bytes in this example)*:\
        \ `112233445566778899AABBCCDDEEFF00`\n\n*Padding (DCBA) + Phone Number + ~Padding\
        \ () + ~Phone Number*: `DCBA` + `123456789012` + `2345` + `EDCBA9876FED Diversified\
        \ Key (3DES CBC): 4CB178CC3FB92FB8693D31F1A39DB8C9`\n\n\n\n*Pin*: `1234`\n\
        \n*Data* 1: `0 4 1234 FFFFFFFFFF`\n\n*Data 2*: `0000 123456789012`\n\n*XOR\
        \ (Data 1, Data 2)*: `041226CBA9876FE`\n\n*Final PIN Block*: `4D316E71853CFB3A`\n"
      operationId: create_user_wallet_card_pin
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: |
          The `user_id` of the user returned via  GET /users
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/card_id_pins_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/{card_id}/pins/reset:
    get:
      tags:
      - Cards
      summary: Reset card pin
      description: |
        Reset Card Pin
      operationId: get_user_wallet_card_pins
      parameters:
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: mode
        in: query
        description: |
          Mode denotes how the system generated PIN is sent to the end user.

          | Value | Name | Description |
          |-----|-----|-------|
          | M   | Email   | The PIN is delivered via email   |
          | S   | SMS     | The PIN is delivered via SMS   |
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - M
          - S
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/{card_id}/securities/tokens:
    get:
      tags:
      - Cards
      summary: Retrieve card security code
      description: "All card entities attached to the users wallet are industry standard\
        \ cards which come with their own card security code to process card not present\
        \ transactions to reduce fraud and limit the issuer liability.\n\nDepending\
        \ on the network they are referred by scheme specific names like\n- CSC (American\
        \ Express)\n- CVC (MasterCard)\n- CVV (Visa)\n- CVV (Rupay)\n\nThese are typically\
        \ the 3 or 4 digit numbers that are printed at the back of the card. Do note\
        \ the networks are the one who dictate printing of these numbers on the back\
        \ of the card. Lately with the launch of newer card products , they are more\
        \ open to not showing this information as part of the printed card.\n\nVirtual\
        \ cards since mirror the physical cards in all respects , are also provided\
        \ with this security code and its up to the program manager how to implement\
        \ the display of the same.\n\nIn addition for Singapore, MatchMove has also\
        \ received approval from the Scheme partner (MasterCard) to have a dynamic\
        \ CVC in which case the value retrieved via API is re-generated on each request.\
        \ This CVC generated is only valid for one time use or 10 minutes. This provides\
        \ an additional layer of security , though admittedly it introduces a greater\
        \ friction in checkout experience for the end users.\n"
      operationId: get_user_wallet_card_securities_tokens
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/funds/categories:
    post:
      tags:
      - Funds Categories
      summary: Create a new fund category in the system
      description: |
        Create a fund category
      operationId: post_user_wallet_card_fund_category
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/funds_categories_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_categories.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/funds/categories/{name}:
    get:
      tags:
      - Funds Categories
      summary: Retrieve Fund Categories
      description: |
        Retrieve Fund Categories
      operationId: get_user_wallet_card_fund_categories
      parameters:
      - name: name
        in: path
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    put:
      tags:
      - Funds Categories
      summary: Update attributes of fund category defined in the system
      description: |
        Update fund category
      operationId: put_user_wallet_card_fund_category
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/categories_name_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_categories.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Funds Categories
      summary: Delete a fund category defined in the system
      description: |
        Delete fund category in the system
      operationId: delete_user_wallet_card_fund_category
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_categories.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/funds/categories/{name}/limits:
    get:
      tags:
      - Funds Categories
      summary: Get Fund Category Limits
      description: |
        Get limits of a particular category by name
      operationId: get_user_wallet_card_fund_category_limits
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_categories_limit_request.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    put:
      tags:
      - Funds Categories
      summary: Update Fund Category Limits
      description: |
        Update Fund Category Limits
      operationId: update_user_wallet_card_fund_category_limits
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fund_categories_limit_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_categories_limit_response.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Funds Categories
      summary: Create Fund Category Limits
      description: |
        Create Fund Category Limits
      operationId: create_user_wallet_card_fund_category_limits
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fund_categories_limit_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_categories_limit_response.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Funds Categories
      summary: Delete fund categories limit
      description: |
        Delete Fund Category Limits
      operationId: delete_user_wallet_card_fund_category_limits
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/funds/categories/transfers:
    post:
      tags:
      - Funds Categories
      summary: Transfer balance from one fund category to another
      description: |
        Transfer funds from one category to another
      operationId: create_user_wallet_card_fund_category_transfer
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/categories_transfers_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/{card_id}/transactions/{page}:
    get:
      tags:
      - Transactions
      summary: Get Card transactions
      description: Retrieve transactions performed on a particular users card in the
        system
      operationId: get_user_wallet_card_transactions
      parameters:
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      - name: limit
        in: query
        description: Number of transactions return per page (Default 5)
        required: false
        style: form
        explode: true
        schema:
          maxLength: 2
          type: string
          default: "5"
      - name: type
        in: query
        description: "Filter transactions according to transaction types. Values can\
          \ be: [debit , credit]. "
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - debit
          - credit
      - name: date_range
        in: query
        description: "Limit transactions based on date range. Example: `date_range=20141220,20150131`. "
        required: false
        style: form
        explode: true
        schema:
          maxLength: 21
          type: string
      - name: sort
        in: query
        description: "Comma delimited sorting of the result according to amount, date.added\
          \ and date.expiry. Example: sort=`+amount`,`-date.added`,`-date.expiry`.\
          \ Only works for in house balance products."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 32
          type: string
      - name: page
        in: path
        description: the one-based page number (maximum value of 99) to be displayed.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  users/wallets/cards/{card_id}/number:
    get:
      tags:
      - Cards
      summary: Get the encrypted card number
      description: |
        Get the encrypted card number
      operationId: get_user_wallet_card_numer
      parameters:
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/users/instruments:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Retrieve all payments instruments of the users in the system
      description: A lightweight endpoint to return the User list of payment instruments.
        Suggested to use in case of repeat calls.
      operationId: get_consumer_user_instruments
      parameters:
      - name: user_id
        in: query
        description: User hash ID of the user returned from the MatchMove system
        required: false
        style: form
        explode: true
        schema:
          maxLength: 32
          minLength: 32
          type: string
      - name: mobile_country_code
        in: query
        description: If mobile is passed this is a required parameter
        required: false
        style: form
        explode: true
        schema:
          maxLength: 3
          minLength: 1
          type: string
      - name: mobile
        in: query
        description: if mobile_country_code is passed this is a required parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: card_type_code
        in: query
        description: The list of supported values is retrievable by calling GET /users/wallets/cards/types
        required: false
        style: form
        explode: true
        schema:
          maxLength: 12
          type: string
      - name: card_id
        in: query
        description: Card hash ID of the user returned from card creation
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /users/wallets/funds/transfers/overseas/types/{code}:
    get:
      tags:
      - Remittances
      summary: Get Remittance Providers
      description: "Lists all overseas providers offered. You may retrieve information\
        \ for a specific provider by appending its code. This resource serves as a\
        \ prerequisite to list rates, payers and destinations.\n"
      operationId: get_users_wallets_overseas_transfers_types
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_providers.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/{type}/fees/{limit}/{offset}:
    get:
      tags:
      - Remittances
      summary: Get Remittance Fees
      description: Retrieve list of fees for remittance agents configured in the system.
      operationId: get_users_wallets_overseas_transfers_fees
      parameters:
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_fees.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/authentications/documents:
    get:
      tags:
      - Users Identity Authentications
      summary: Get KYC
      description: Retrieve details of users Identity Authentication Documents currently
        enrolled in the system
      operationId: get_users_authentication_documents
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
    put:
      tags:
      - Users Identity Authentications
      summary: Confirm submission of KYC (Know Your Customer) documents of the user
        in the system
      description: |
        Used to confirm the process of Identity Authentication documents. Post
        this the application is processed via a manual process or based on
        region specific third party integrations done.
      operationId: confirm_users_authentication_documents
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
    post:
      tags:
      - Users Identity Authentications
      summary: Create KYC
      description: "Initialize a submissions session for users Identity authentication.\n\
        \nDo note the resource has the following pre-requisites too be present in\n\
        the system for the user information \n- `title`\n- `id_type`\n- `id_number`\n\
        - `country_of_issue`\n- `gender`\n\nDepending on geography, certain geographies\
        \ might have additional\nattributes as required for the user model.\n\nIn\
        \ addition, the residential address of the users needs to be updated\nand\
        \ present in the system.\n\nAlso note the count of images uploaded is restricted\
        \ to *4* for a particular\nThe image types are restricted to .jpg , .png ,\
        \ .pdf and each file can be up to 8MB in size.\n"
      operationId: Create_users_authentication_documents
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/authentications_documents_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Users Identity Authentications
      summary: Delete an uploaded image of the user
      description: End point to delete user kyc document
      operationId: delete-users-authentications-documents
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/authentications_documents_body_1'
            examples:
              example-1:
                value:
                  document: 34076_16028257385f892e0ad7007.jpg
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/authentications/statuses:
    put:
      tags:
      - Users Identity Authentications
      summary: Update KYC status
      description: |
        Update  KYC (Know your  Customer) status of the user in the system
      operationId: update_users_authentication_documents_status
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/authentications_statuses_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/authentications/history: {}
  /users/wallets/funds:
    get:
      tags:
      - Funds
      summary: Get funds
      description: Retrieve closed loop debit and credits for a particular users
      operationId: get_user_wallet_funds
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    put:
      tags:
      - Funds
      summary: Update transfer transaction
      description: Confirm the two staged transfer transaction for legacy systems
      operationId: put_user_wallet_funds
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
    post:
      tags:
      - Funds
      summary: Create credit or transfer transaction
      description: "Initiate a  closed loop credit transaction involving a particular\
        \ user in the system.\n\nA. Credit\nIf the `X-Auth-User-Id` parameter is not\
        \ passed as part of the header, this API will credit the recipient's wallet\
        \ as per the users `email`/  `mobile` / `user_id` parameter defined as part\
        \ of the request.\n\nB. Transfer\nIf the `X-Auth-User-Id` is passed,  this\
        \ API will transfer amount from the wallet of the user defined as part of\
        \ `X-Auth-User-id` to another wallet as per the users `email` / `mobile` /\
        \ `user_id` parameter specified as part of the request\n"
      operationId: post_user_wallet_funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_funds_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Funds
      summary: Create debit transaction
      description: Initiate a  closed loop debit transaction for a particular users
        wallet in the system.
      operationId: delete_user_wallet_funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_funds_body_1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/refund/{type}:
    post:
      tags:
      - Funds
      summary: Create Refund
      description: |
        Issue a partial or full refund out of the wallet.
      operationId: post_user_wallet_refunds
      parameters:
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: partial
          enum:
          - partial
          - full
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/refund_type_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/holdings/{limit}/{offset}:
    get:
      tags:
      - Funds
      summary: Get pending debit/credits
      description: Retrieve closed loop transactions in the system which are in intermediate
        state.
      operationId: get_user_wallet_funds_holding
      parameters:
      - name: limit
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 10
      - name: offset
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
  /users/wallets/funds/holdings/{ref_hash}:
    post:
      tags:
      - Funds
      summary: Retry pending debits/credits
      description: Retry confirming a closed loop transaction in the system which
        is in intermediate state.
      operationId: post_user_wallet_funds_holding
      parameters:
      - name: ref_hash
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
    delete:
      tags:
      - Funds
      summary: Cancel pending debits/credits
      description: Cancel  a closed loop transaction in the system which is in intermediate
        state.
      operationId: delete_user_wallet_funds_holding
      parameters:
      - name: ref_hash
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers:
    get:
      tags:
      - Funds
      summary: Get P2P transactions
      description: Retrieve p2p closed loop transactions for a users wallet in the
        system
      operationId: get_user_wallet_funds_transfer
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
              examples:
                example-1:
                  value:
                    transfers:
                    - id: string
                      sender:
                        type: sms
                        id: string
                        sms: string
                      recipient:
                        type: sms
                        id: string
                        sms: string
                      message: string
                      status: active
                      currency: string
                      date:
                        created: 2019-08-24T14:15:22Z
                        expiry: 2019-08-24T14:15:22Z
                    count:
                      total: 1
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
    put:
      tags:
      - Funds
      summary: Confirm pending transfer
      description: Confirm a p2p closed loop transactions for a user in the system.
      operationId: put_user_wallet_funds_transfers
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
      deprecated: true
  /users/wallets/cards/{card_id}/funds:
    get:
      tags:
      - Funds
      summary: Get Debits/Credits of cards
      description: Retrieve closed loop debit and credits for a particular card linked
        to a users wallet
      operationId: get_user_wallet_card_id_funds
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: The `user_id` of the user returned via  GET /users
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Funds
      summary: Create load transaction
      description: Initiate a closed loop load transaction from the wallet to the
        specified card
      operationId: post_user_wallet_card_id_funds
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: The `user_id` of the user returned via  GET /users
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/card_id_funds_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Funds
      summary: Create Un-load transaction
      description: "If the X-Auth-User-ID is passed, then this API will transfer credits\
        \ from the card back to the wallet, ELSE, this API will initiate a closed\
        \ loop debit transaction on a particular card linked to users wallet."
      operationId: delete_user_wallet_card_id_funds
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: The `user_id` of the user returned via  GET /users
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: card_id
        in: path
        description: |
          The `card_id` for which the information is being retrieved.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/card_id_funds_body_1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/risk/exceptions:
    get:
      tags:
      - User Risk
      summary: Retrieve risk evaluation exceptions
      description: |
        Retrieve risk evaluation exceptions
      operationId: get_user_risk_exceptions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/addresses/{type}:
    get:
      tags:
      - User Addresses
      summary: Get users addresses
      description: |
        Retrieve the specified address type
      operationId: get_user_addresses
      parameters:
      - name: type
        in: path
        description: The type of address for which there is a request to be made
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - residential
          - billing
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_address.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
    put:
      tags:
      - User Addresses
      summary: Update users addresses
      description: |
        Update the specified address type
      operationId: update_user_addresses
      parameters:
      - name: type
        in: path
        description: The type of address for which there is a request to be made
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - residential
          - billing
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address_details.v1'
            examples:
              example-1:
                value:
                  address_1: Address1
                  address_2: Address2
                  address_3: Address Line 3
                  address_4: Address2
                  city: City
                  state: Cebu
                  country: Philippines
                  country_code: IND
                  zipcode: "6000"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_address.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/genders:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `genders`
      description: |
        Retrieve supported `genders`
      operationId: get_program_enumeration_gender
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/marital_status:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `marital_status`
      description: |
        Retrieve supported `marital_status`
      operationId: get_program_enumeration_marital_status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/titles:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `titles`
      description: |
        Retrieve supported `titles`
      operationId: get_program_enumeration_title
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/nationalities:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `nationalities`
      description: |
        Retrieve supported `nationalities`
      operationId: get_program_enumeration_nationality
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/id_types:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `id_types`
      description: |
        Retrieve supported `id_types`
      operationId: get_program_enumeration_id_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
              examples:
                example-1:
                  value:
                    id_types:
                      primary:
                      - code: passport
                        description:
                          processor_regex_validation: "/^[a-zA-Z0-9]*$/"
                          max_duplicate: 2
                          regex_validation: "/^[a-zA-Z0-9]*$/"
                          display_name: Valid passport
                          masking: true
                      - code: drivers_id
                        description:
                          processor_regex_validation: "/^[a-zA-Z0-9]*$/"
                          max_duplicate: 2
                          regex_validation: "/^[a-zA-Z0-9]*$/"
                          display_name: Driver's license
                          masking: false
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/kyc_types:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `kyc_types`
      description: |
        Retrieve supported `kyc_types`
      operationId: get_program_enumeration_kyc_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/document_types:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `document_types`
      description: |
        Retrieve supported `document_types`
      operationId: get_program_enumeration_document_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/mobile_country_codes:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `mobile_country_codes`
      description: |
        Retrieve supported `mobile_country_codes`
      operationId: get_program_enumeration_mobile_country_code
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/countries:
    get:
      tags:
      - Enumerations Users
      summary: Retrieve supported `countries`
      description: |
        Retrieve supported `countries`
      operationId: get_program_enumeration_countries
      parameters:
      - name: type
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - iso
          - numeric
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
              examples:
                example-iso:
                  value:
                    countries:
                    - code: SGP
                      description: Singapore
                    - code: IND
                      description: India
                example-numeric:
                  value:
                    countries:
                    - code: "702"
                      description: Singapore
                    - code: "356"
                      description: India
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/overseas/transfers/relationship/transferto:
    get:
      tags:
      - Enumerations
      summary: Retrieve supported `relationship` values for remittance via Transferto
        that are supported by the platform for a program
      description: |
        Retrieve supported `relationship` values for remittance via Transferto that are supported by the platform for a program
      operationId: get_program_enumeration_overseas_relationship_t2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
      x-internal: false
  /users/enumerations/overseas/transfers/banks:
    get:
      tags:
      - Enumerations
      summary: Retrieve supported `banks` for remittance on the the platform
      description: |
        Retrieve supported `banks` for remittance on the the platform
      operationId: get_program_enumeration_overseas_banks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
  /users/enumerations/overseas/transfers/purpose/transferto:
    get:
      tags:
      - Enumerations
      summary: Retrieve supported `purpose` values for remittance via Transferto that
        are supported by the platform for a program
      description: |
        Retrieve supported `purpose` values for remittance via Transferto that are supported by the platform for a program
      operationId: get_program_enumeration_overseas_transfers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      deprecated: true
  /users/enumerations/overseas/transfers/sources:
    get:
      tags:
      - Enumerations
      summary: Retrieve supported `sources` values for remittance that are supported
        by the platform for a program
      description: |
        Retrieve supported `sources` values for remittance that are supported by the platform for a program
      operationId: get_program_enumeration_overseas_sources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/enumerations/overseas/transfers/countries:
    get:
      tags:
      - Enumerations
      summary: Retrieve supported `countries` for remittance that are supported by
        the platform for a program
      description: |
        Retrieve supported `countries` for remittance that are supported by the platform for a program
      operationId: get_program_enumeration_overseas_countries
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/search/users:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Gets detailed information of a user
      description: |
        Gets detailed information of a user
      operationId: get_oauth_consumer_search_users
      parameters:
      - name: email
        in: query
        description: Email Address (from users table)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mobile
        in: query
        description: Full mobile (concatenated value of country code and mobile number)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: user_hash_id
        in: query
        description: User identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: user_status
        in: query
        description: User State
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - active
          - suspended
          - blocked
      - name: kyc_status
        in: query
        description: User KYC State
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - pending
          - submitted
          - approved
          - rejected
      - name: first_name
        in: query
        description: first name to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: last_name
        in: query
        description: last name to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: customer_id
        in: query
        description: Customer ID to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: id_type
        in: query
        description: ID Type to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: id_number
        in: query
        description: ID number to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: id_date_issue
        in: query
        description: ID issue date to search
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: id_date_expiry
        in: query
        description: ID expiry date to search
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: birthday
        in: query
        description: Birthday to search
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: card_identifier
        in: query
        description: |
          Card Identifier:
            * `proxy` - Card Proxy number to search
            * `mask` - Masked card number to search
            * `full` - Full(actual) card number to search
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - proxy
          - mask
          - full
      - name: card_identifier_value
        in: query
        description: Value is dependent on the `card_identifier` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: balance_condition
        in: query
        description: |
          Balances Condition:
            * `gt` - Amount greater than or equal to specified balance
            * `lt` - Amount lesser than or equal to specified balance
            * `eq` - Amount equal to specified balance
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: eq
          enum:
          - gt
          - lt
          - eq
      - name: card_available_balance
        in: query
        description: Get all users where its per card available balance is within
          the specified `balance_condition` parameter
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: card_withholding_balance
        in: query
        description: Get all users where its per card withholding balance is within
          the specified `balance_condition` parameter
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: wallet_available_balance
        in: query
        description: Get all users where its per wallet available balance is within
          the specified `balance_condition` parameter
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: wallet_withholding_balance
        in: query
        description: Get all users where its per wallet withholding balance is within
          the specified `balance_condition` parameter
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: transaction_reference
        in: query
        description: Get all users given the transaction reference (will apply to
          all transaction types)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: match_type
        in: query
        description: |
          Matching Condition:
            * `fuzzy` - endpoint will perform a `LIKE` condition in query
            * `exact` - endpoint will perform an `EQUAL` condition in query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - fuzzy
          - exact
      - name: response_type
        in: query
        description: "Matching Condition:\n  * `expand` - response will show an expandable/complete\
          \ information for address, documents, wallets object\n  * `condense` - response\
          \ will show a url link on information for address, documents, wallets object\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - expand
          - condense
      - name: filter_condition
        in: query
        description: "Matching Condition:\n  * `AND` - for 2 or more filter parameters,\
          \ the query will perform an `AND` operation in query \n  * `OR` - for 2\
          \ or more filter parameters, the query will perform an `OR` operation in\
          \ query\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: AND
          enum:
          - AND
          - OR
      - name: page
        in: query
        description: Page Number to display
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: integer
          default: 1
      - name: records_per_page
        in: query
        description: Records per page to display
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: integer
          default: 10
      - name: partner_id
        in: query
        description: Partner Id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A paginated list of detailed information per user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_report.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/{card_hash_id}/transactions/categories/{category_hash_id}/limit:
    get:
      tags:
      - Cards Transactional Limits
      summary: Retrieve transactional limits for categories
      description: Retrieve transactional limits for a card for a particular category
      operationId: "get-users-wallets-cards-[-card_hash_id-]-transaction-category_hash_id-limits"
      parameters:
      - name: card_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category_hash_id
        in: path
        description: Transaction category Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_limit.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    put:
      tags:
      - Cards Transactional Limits
      summary: Update transactional limits for a particular card and category
      description: To set user limits for card
      operationId: "put-users-wallets-cards-[-card_hash_id-]-transaction-category_hash_id-limits"
      parameters:
      - name: card_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category_hash_id
        in: path
        description: Transaction category Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_limit_request.v1'
            examples: {}
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_limit.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Cards Transactional Limits
      summary: Configure transactional limits for a particular card and category
      description: To set user limits for card
      operationId: "post-users-wallets-cards-[-card_hash_id-]-transaction-category_hash_id-limits"
      parameters:
      - name: card_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category_hash_id
        in: path
        description: Transaction category Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_limit_request.v1'
            examples: {}
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_limit.v1'
              examples:
                example-1:
                  value:
                    id: string
                    enable: true
                    user_details_set: true
                    card_limits:
                    - interval: string
                      amount: 0
                      count: 0
                    program_limits:
                      pre_kyc:
                      - amount: 0
                        count: 0
                        interval: string
                      post_kyc:
                      - amount: 0
                        interval: string
                        count: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Cards Transactional Limits
      summary: Disable transactional limits for a particular card and category
      description: |
        Disable transactional limits for a particular card and category
      operationId: "delete-users-wallets-cards-[-card_hash_id-]-transaction-category_hash_id-limits"
      parameters:
      - name: card_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category_hash_id
        in: path
        description: Transaction category Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Auth-User-ID
        in: header
        description: User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_limit.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/{consumer_key}/event/categories:
    get:
      tags:
      - Webhooks
      summary: List available webhook categories
      description: |
        List available webhook categories available in the system
      operationId: get-oauth-consumer-key-event-categories
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_34'
                x-content-type: application/json
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/{consumer_key}/webhooks:
    get:
      tags:
      - Webhooks
      summary: Retrieve list of webhooks
      description: Retrieve the list of webhooks
      operationId: get-oauth-consumer-consumer_key-webhooks
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Webhooks
      summary: Create a webhook for your consumer
      description: Create a webhook entry
      operationId: post-oauth-consumer-consumer_key-webhooks
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/consumer_key_webhooks_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/{consumer_key}/webhooks/{webhook_id}:
    get:
      tags:
      - Webhooks
      summary: Retrieve details of a particular webhook
      description: Get a webhook
      operationId: get-oauth-consumer-consumer_key-webhooks-webhok_id
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: webhook_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_34'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.v1'
    put:
      tags:
      - Webhooks
      summary: Update details of a particular webhook
      description: Update webhook
      operationId: put-oauth-consumer-consumer_key-webhooks-webhok_id
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: webhook_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhooks_webhook_id_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "501":
          description: Not Implemented
        "502":
          description: Bad Gateway
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway Timeout
    delete:
      tags:
      - Webhooks
      summary: Delete consumer webhook
      description: Delete webhook
      operationId: delete-oauth-consumer-consumer_key-webhooks-webhok_id
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: webhook_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/transactions/rules:
    get:
      tags:
      - Transaction Rules
      description: Creates new transaction rules in db
      operationId: get-oauth-consumer-transactions-rules
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_rules.v1'
              examples:
                example-1:
                  value:
                  - hash_id: 429c53bfcc9097a325591e842530d8e2
                    attribute: terminal_id
                    action: blacklist
                    value: AUTH TEST
                    is_active: "true"
                  - hash_id: 74e05554c8fe0b824c64522449825c1d
                    attribute: terminal_id
                    action: blacklist
                    value: AUTH TEST1
                    is_active: "true"
                  - hash_id: 745e872d881aac20974bf5f1e1f3642f
                    attribute: merchant_id
                    action: blacklist
                    value: ABC123TESTMTF19
                    is_active: "true"
                  - hash_id: ac01d6d84e65ee12de2fcdda0d23bdcb
                    attribute: merchant_id
                    action: blacklist
                    value: ABC123TESTMTF20
                    is_active: "true"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Transaction Rules
      description: Creates new transaction rules in db
      operationId: post-oauth-consumer-transactions-rules
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/transactions_rules_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_rules.v1'
              examples:
                example-1:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: blacklist
                    value: ATM_CASH_WITHDRAWAL
                    user_state: pre-kyc
                    is_active: "true"
                example-2:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    user_state: post-kyc
                    card_type_code: innovmcpcard
                    is_active: "true"
                example-3:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    is_active: "true"
                example-4:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    card_type_code: innovmcpcard
                    is_active: "true"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/transactions/rule/{hash_id}:
    put:
      tags:
      - Transaction Rules
      description: Update transaction rule entry
      operationId: put-oauth-consumer-transactions-rule-hash_id
      parameters:
      - name: hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rule_hash_id_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_rules.v1'
              examples:
                example-1:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    user_state: post-kyc
                    card_type_code: innovmcpcard
                    is_active: "true"
                example-2:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    user_state: post-kyc
                    is_active: "true"
                example-3:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    is_active: "true"
                example-4:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    card_type_code: innovmcpcard
                    is_active: "true"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Transaction Rules
      description: Update transaction rule entry
      operationId: post-oauth-consumer-transactions-rule-hash_id
      parameters:
      - name: hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rule_hash_id_body_1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_rules.v1'
              examples:
                example-1:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: blacklist
                    value: ATM_CASH_WITHDRAWAL
                    user_state: pre-kyc
                    is_active: "true"
                example-2:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: blacklist
                    value: ATM_CASH_WITHDRAWAL
                    is_active: "true"
                    card_type_code: innovmcpcard
                    user_state: pre-kyc
                example-3:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: terminal_id
                    action: blacklist
                    value: "123"
                    is_active: "true"
                example-4:
                  value:
                    hash_id: b6d64e94e3e58ac86b3f981feb62117b
                    attribute: transaction_type
                    action: whitelist
                    value: TRANSFER_CREDIT
                    card_type_code: innovmcpcard
                    is_active: "true"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Transaction Rules
      description: Delete transaction rule entry
      operationId: delete-oauth-consumer-transactions-rule-hash_i
      parameters:
      - name: hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
              examples:
                example-1:
                  value:
                    id: string
                    success: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/{consumer_key}/transactions/{page}:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get Consumer transaction
      description: |
        Get Consumer Transactions
      operationId: get-oauth-consumer-consumer_key-transactions-page
      parameters:
      - name: consumer_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oauth_transaction.v1'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/wallet/reverse/{limit}/{offset}:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get oauth wallet reversals
      description: |
        Gets Wallet reversals
      operationId: get-oauth-consumer-wallet-reverse-limit-offset
      parameters:
      - name: limit
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
  /oauth/consumer/funds:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Retrieve Oauth Consumer Funds
      description: |
        Retrieve users funds transactions
      operationId: get-oauth-consumer-funds
      parameters:
      - name: ids
        in: query
        description: Reference identifiers for the top up transaction(s). Multiple
          identifiers in CSV format are accepted.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: payment_ref
        in: query
        description: Payment transaction identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_37'
              examples:
                example-1:
                  value:
                    transactions:
                    - id: string
                      ref_id: string
                      status: waiting
    post:
      tags:
      - Oauth-Utilities
      summary: Create Oauth Consumer Funds
      description: Confirm a top up transaction given its ref_id
      operationId: post-oauth-consumer-funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/consumer_funds_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
      deprecated: true
    delete:
      tags:
      - Oauth-Utilities
      summary: Delete Oauth Consumer Funds
      description: |
        Confirm a cloesd loop debit transaction
      operationId: delete-oauth-consumer-funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/consumer_funds_body_1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/user:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get oauth user
      description: |
        Get oauth user
      operationId: get-oauth-user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_full.v1'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/users/search:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get Oauth Users Search
      description: |
        Get Oauth Users Search
      operationId: get-oauth-users-search
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_40'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /currencies/{limit}/{offset}: {}
  /currencies/{hash_id}:
    delete:
      tags:
      - Currencies
      summary: Delete System Currencies
      description: |
        Delete system currencies
      operationId: delete-currencies
      parameters:
      - name: hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/virtual_accounts:
    get:
      tags:
      - Virtual Accounts
      summary: Get linked virtual accounts
      description: Retrieve user's virtual accounts.
      operationId: get_virtual_accounts
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          minLength: 32
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_42'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
    post:
      tags:
      - Virtual Accounts
      summary: Create virtual account
      description: Create a virtual account for the user already created in the system
      operationId: create_virtual_accounts
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          minLength: 32
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Virtual_account.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/wallets/virtual_accounts:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get all Virtual Accounts
      description: Get all Virtual Accounts registered under the program
      operationId: get_program_virtual_accounts
      parameters:
      - name: user_hash_id
        in: query
        description: af11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: wallet_hash_id
        in: query
        description: df11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account_number
        in: query
        description: "123456"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: active | inactive | terminated
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account_type
        in: query
        description: consumer or corporate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: From Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: To Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Page Number
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: Number of records per page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_43'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /oauth/consumer/{consumer_key}/cards/types/{card_type}/limits: {}
  /oauth/consumer/account/transactions:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get Program Bank Transfer Transactions
      description: |
        Retrieve list of all Bank Transfer transactions (Top  up and Transfer out) done in the system
      operationId: get-program-bank-transfer-transactions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
  users/wallets/account/transactions:
    get:
      tags:
      - Virtual Accounts
      summary: Get Account Transactions
      description: |
        Retrieve all transactions done by the user via Bank Transfer (Top up and Trasfer out)
      operationId: get_users_wallets_accounts_transactions
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
      security:
      - basicAuth: []
  /users/wallets/bank_accounts:
    get:
      tags:
      - Virtual Accounts
      summary: Get Beneficiary Bank Accounts
      description: |
        Get Beneficiary Bank Accounts
      operationId: get_linked_beneficiary_bank_account
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_45'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
    post:
      tags:
      - Virtual Accounts
      summary: Create New Beneficiary Bank Account
      description: Create new Beneficiary Bank Account for the provided user
      operationId: Create_beneficiary_bank_account
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_bank_accounts_body'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_account.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
    delete:
      tags:
      - Virtual Accounts
      summary: Remove beneficiary bank account
      description: |
        Remove linked beneficiary bank account for the user.
      operationId: delete_beneficiary_bank_account
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_bank_accounts_body_1'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_46'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /oauth/consumer/wallets/bank_accounts:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get all Bank Accounts
      description: Get all Bank Accounts registered under the program
      operationId: get_program_beneficiary_bank_account
      parameters:
      - name: user_hash_id
        in: query
        description: af11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: wallet_hash_id
        in: query
        description: df11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bank_account_number
        in: query
        description: "123456"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bank_account_id
        in: query
        description: adf11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account_type
        in: query
        description: consumer or corporate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: From Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: To Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Page Number
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: Records per page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /users/wallets/standing_instructions:
    get:
      tags:
      - Virtual Accounts
      summary: Get Standing Instruction
      description: |
        Get standing instructions configured against a wallet
      operationId: get_virtual_account_standing_instruction
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standing_instruction.v1'
      security:
      - basicAuth: []
    put:
      tags:
      - Virtual Accounts
      summary: Update standing instruction status
      description: Update the standing instruction status of provided bank account.
      operationId: update_bank_account_standing_instruction
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_standing_instructions_body'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standing_instruction.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
    post:
      tags:
      - Virtual Accounts
      summary: Create New Standing Instruction
      description: Create new standing instruction for provided bank account
      operationId: create_bank_account_standing_instruction
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_standing_instructions_body_1'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standing_instruction.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
    delete:
      tags:
      - Virtual Accounts
      summary: Delete existing instruction
      description: Delete existing instruction on provided bank account
      operationId: delete_bank_account_standing_instruction
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/wallets_standing_instructions_body_2'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_46'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /oauth/consumer/wallets/standing_instructions:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get all Standing Instructions
      description: Get all standing instructions registered under the program
      operationId: get_program_bank_account_standing_instruction
      parameters:
      - name: user_hash_id
        in: query
        description: af11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: wallet_hash_id
        in: query
        description: df11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bank_account_number
        in: query
        description: "123456"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bank_account_id
        in: query
        description: df11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: pending | under-review | approved | expired | revoked | disabled
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account_type
        in: query
        description: consumer or corporate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: From Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: To Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Page Number
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: Number of records per page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /users/wallets/fund_transfers/debit:
    post:
      tags:
      - Virtual Accounts
      summary: Debit bank account
      description: Pull money from specified bank account according to the specified
        standing instruction.
      operationId: create_bank_account_debit_transaction
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/fund_transfers_debit_body'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_transfer.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /users/wallets/fund_transfers/credit:
    post:
      tags:
      - Virtual Accounts
      summary: Credit bank account
      description: Transfer money to provided beneficiary account
      operationId: create_bank_account_credit_transaction
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/fund_transfers_credit_body'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fund_transfer.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /oauth/consumer/wallets/fund_transfers:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Get all fund transfer transactions
      description: Get all fund transfer processed under the program
      operationId: get_program_bank_account_debit_credit_transactions
      parameters:
      - name: user_hash_id
        in: query
        description: af11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: wallet_hash_id
        in: query
        description: df11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bank_account_number
        in: query
        description: "123456"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bank_account_id
        in: query
        description: df11e6342686a34d37a58e7130ec5e11
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unique_payment_id
        in: query
        description: "123456"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: active | inactive | terminated
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account_type
        in: query
        description: consumer or corporate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: From Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: To Date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: The number of records to return per page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
      security:
      - basicAuth: []
  /users/wallets/funds/transfers/overseas/{id}/attachment:
    post:
      tags:
      - Remittances
      summary: Upload Remittance Attachment
      description: Attaches document on the given remittance hash id
      operationId: post-users-wallets-funds-transfers-overseas-id-attachment
      parameters:
      - name: X-Auth-User-ID
        in: header
        description: MatchMove provided hash ID for the user
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
      - name: id
        in: path
        description: Remittance Hash ID retrieved after (#post-users-wallets-funds-transfers-overseas-type)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/id_attachment_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_attachment.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumers/funds/transfers/overseas/attachment/form:
    get:
      tags:
      - Remittances
      summary: Get Form for Remittance Attachments
      description: Retrieve the attachment form details and supported document types
        to attach
      operationId: get-oauth-consumers-funds-transfers-overseas-attachment-form
      parameters:
      - name: payout_agent
        in: query
        description: Payout agent hash id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_attachment_form.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/{id}/attachments:
    get:
      tags:
      - Remittances
      summary: Get Uploaded Remittance Attachments
      description: Retrieve the attached documents against the given remittance hash
        id
      operationId: get-users-wallets-funds-transfers-overseas-id-attachments
      parameters:
      - name: id
        in: path
        description: Remittance Hash ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_attachments.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/history/{limit}]/{offset}:
    get:
      tags:
      - Remittances
      summary: Get Remittance History
      description: |
        Get Remittance history against the wallet of the user
      operationId: get-users-wallets-funds-transfers-overseas-history-limit-offset
      parameters:
      - name: limit
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "10"
      - name: offset
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "0"
      - name: sort
        in: query
        description: Comma delimited sorting of the result according to id and date.added
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - +id
          - -date.added
      - name: delivery_method
        in: query
        description: Filter transactions based on the delivery method
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: "Filter transactions based on the [provider](#get-users-wallets-funds-transfers-overseas-types)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: date_added
        in: query
        description: Filter transactions based on the date added
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "20200820,20200826"
      - name: date_expiry
        in: query
        description: Filter transactions based on the date expiry
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "20200820,20200826"
      - name: status
        in: query
        description: Filter transactions based status
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - processing
          - transfer pending
          - transfer failed
          - refund failed
          - refund succeeded
          - available
          - paid
          - cancelled
          - cancelled by user
          - rejected
          - expired without refund
          - manual refund needed
          - expired and refunded
          - cancelled initial status
      - name: search
        in: query
        description: "Filter transactions based on the transaction code , reference\
          \ id, or transfer reference id"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sender_first_name
        in: query
        description: Filter transactions based on the sender first name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sender_middle_name
        in: query
        description: Filter transactions based on the sender middle name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sender_last_name
        in: query
        description: Filter transactions based on the sender last name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sender_mobile_number
        in: query
        description: Filter transactions based on the sender mobile number
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: receiver_first_name
        in: query
        description: Filter transactions based on the beneficiary first name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: receiver_middle_name
        in: query
        description: Filter transactions based on the beneficiary middle name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: receiver_last_name
        in: query
        description: Filter transactions based on the beneficiary last name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: business_registered_name
        in: query
        description: Filter transactions based on the corporate registered name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: beneficiary_hash_id
        in: query
        description: Filter transactions based on the corporate/consumer beneficiary
          hash id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: client_ref_id
        in: query
        description: Filter transactions based on the client reference id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/funds/transfers/overseas:
    post:
      tags:
      - Remittances
      summary: Confirm Remittance transaction
      description: "Confirm a remittance transaction , given the id(s)"
      operationId: post-oauth-consumer-funds-transfers-overseas
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/transfers_overseas_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
              examples:
                example-1:
                  value:
                    transactions:
                    - id: string
                      ref_id: string
                      status: waiting
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: External Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "504":
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/wallets/funds:
    get:
      tags:
      - Oauth Utilities Reporting
      summary: Closed Loop Transactions
      description: Gets detailed information of a closed-loop transactions
      operationId: get-oauth-consumer-wallet-funds
      parameters:
      - name: type
        in: query
        description: |
          Acceptable Transaction Type:
            * `Topup` - all top up transactions
            * `Transfer` - all wallet to wallet money transfer transactions
            * `Load` - all wallet to card transfer transactions
            * `Unload` - all card to wallet transfer transactions
            * `Reversal` - all  transactions
            * `Refund` - all card to wallet transfer transactions
            * `All` - all transactions above
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: All
          enum:
          - Topup
          - Transfer
          - Load
          - Unload
          - Reversal
          - Refund
          - All
      - name: user_hash_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: User Hash ID; get all transactions done by the given user_hash_id
      - name: email
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: User Email; get all transactions done by the given email
      - name: mobile
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: User Full mobile; get all transactions done by the given mobile
      - name: card_identifier
        in: query
        description: |
          Card Identifier:
            * `proxy` - Card/Wallet Proxy number to search
            * `mask` - Masked card number to search
            * `full` - Full(actual) card number to search
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - proxy
          - mask
          - full
      - name: card_identifier_value
        in: query
        description: Value is dependent on the `card_identifier` parameter; get all
          transactions done by the given card_identifier_value
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: transaction_ref_hash
        in: query
        description: Transaction Reference; get all transactions given the reference
          hash
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: transaction_status
        in: query
        description: |
          Transaction Status; get all transactions given the status:
            * `hold` - all withholding transaction
            * `active` - all success transaction
            * `failed` - all failed transaction
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - hold
          - active
          - failed
      - name: added_date
        in: query
        description: Transaction Date Added (YYYY-MM-DD); get all transactions added
          on the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: updated_date
        in: query
        description: Transaction Date Updated (YYYY-MM-DD); get all transactions updaed
          on the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: reversal_date
        in: query
        description: Transaction Date Reversal (YYYY-MM-DD); get all transactions
          reversed on the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: refund_date
        in: query
        description: Transaction Date Refund (YYYY-MM-DD); get all transactions refunded
          on the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Closed_loop.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/{type}:
    post:
      tags:
      - Remittances
      summary: Calculate or Create remittance transaction
      description: "Send a money transfer request with the specified overseas provider.\n\
        \nAny transaction made through this resource will be on pending validation.\
        \ Confirmation must be made to clear the transaction.\n\nAppending `test`\
        \ to the (users/wallets/funds/transfers/overseas/{type}/test) sends a calculation\
        \ test (ONLY) which useful for retrieving the fees applicable before creating\
        \ a real transaction.\n\nWith administrative scope, this api can be accessed\
        \ as a public resource.\nThe additional parameter `hash_id` must be supplied\
        \ when using this as a public resource.\n"
      operationId: post-users-wallets-funds-transfers-overseas-type
      parameters:
      - name: type
        in: path
        description: Overseas Provider Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Remittance_send_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_52'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Remittance Rails Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/{type}/test:
    post:
      tags:
      - Remittances
      summary: Calculate Rates for Remittance Transaction
      description: "Send a money transfer request with the specified overseas provider.\n\
        \nAny transaction made through this resource will be on pending validation.\
        \ Confirmation must be made to clear the transaction.\n\nAppending `test`\
        \ to the (users/wallets/funds/transfers/overseas/{type}/test) sends a calculation\
        \ test (ONLY) which is useful for retrieving the fees applicable before creating\
        \ a real transaction.\n\nWith administrative scope, this api can be accessed\
        \ as a public resource.\nThe additional parameter `hash_id` must be supplied\
        \ when using this as a public resource.\n"
      operationId: post-users-wallets-funds-transfers-overseas-type-test
      parameters:
      - name: type
        in: path
        description: Overseas Provider Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Remittance_send_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_52'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Remittance Rails Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/{card_hash_id}/transactions/categories/limit:
    get:
      tags:
      - Cards Transactional Limits
      summary: Retrieve transactional limits for a card
      description: Retrieve transactional limits for a card categories
      operationId: get-users-wallets-cards-card_hash_id-transactions-categories-limit
      parameters:
      - name: card_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_53'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/cards/transactions/categories/limits/detail:
    post:
      tags:
      - Cards Transactional Limits
      summary: Create Transaction Category Limits
      description: |
        Create a user wallet card transaction category limit
      operationId: post-users-wallets-cards-transactions-categories-limits-detail
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/limits_detail_body'
      responses:
        "200":
          description: OK
  /oauth/consumer/transaction/categories/{category_hash_id}/rule:
    get:
      tags:
      - Cards Transactional Limits
      summary: Retrieve rules for a particular transaction category
      operationId: get-oauth-consumer-transaction-categories-category_hash_id-rule
      parameters:
      - name: category_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_categories_rules_response.v1'
              examples:
                example-1:
                  value:
                    id: 4665db83a48e4cc209e40d697644f671
                    enable: true
                    rules:
                      event_codes: MONEY_TRANSFER_CREDIT
                      channel: POS
                      acquiring_country_code: "356"
                      currency: INR
                      network: master
                      terminal_id: "123"
                      merchant_id: "123"
                      pos_entry_mode_value: "MANUALLY_KEYED, MAGSTRIPE_READ_GENERAL_TRACK2"
                      pp: DBs
                      merchant_category_code: "651"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    put:
      tags:
      - Cards Transactional Limits
      summary: Update rules for a particular transaction category
      operationId: put-oauth-consumer-transaction-categories-category_hash_id-rule
      parameters:
      - name: category_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction_categories_rules_request.v1'
            examples:
              example-1:
                value:
                  event_codes: string
                  channel: string
                  acquiring_country_code: string
                  currency: string
                  network: string
                  terminal_id: string
                  merchant_id: string
                  pos_entry_mode_value: string
                  pp: string
                  merchant_category_code: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_categories_rules_response.v1'
              examples:
                example-1:
                  value:
                    id: 4665db83a48e4cc209e40d697644f671
                    enable: true
                    rules:
                      event_codes: MONEY_TRANSFER_CREDIT
                      channel: POS
                      acquiring_country_code: "356"
                      currency: INR
                      network: master
                      terminal_id: "123"
                      merchant_id: "123"
                      pos_entry_mode_value: "MANUALLY_KEYED, MAGSTRIPE_READ_GENERAL_TRACK2"
                      pp: DBs
                      merchant_category_code: "651"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    post:
      tags:
      - Cards Transactional Limits
      summary: Create rules for a particular transaction category
      operationId: post-oauth-consumer-transaction-categories-category_hash_id-rule
      parameters:
      - name: category_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction_categories_rules_request.v1'
            examples:
              example-1:
                value:
                  event_codes: string
                  channel: string
                  acquiring_country_code: string
                  currency: string
                  network: string
                  terminal_id: string
                  merchant_id: string
                  pos_entry_mode_value: string
                  pp: string
                  merchant_category_code: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_categories_rules_response.v1'
              examples:
                example-1:
                  value:
                    id: 4665db83a48e4cc209e40d697644f671
                    enable: true
                    rules:
                      event_codes: MONEY_TRANSFER_CREDIT
                      channel: POS
                      acquiring_country_code: "356"
                      currency: INR
                      network: master
                      terminal_id: "123"
                      merchant_id: "123"
                      pos_entry_mode_value: "MANUALLY_KEYED,MAGSTRIPE_READ_GENERAL_TRACK2"
                      pp: DBs
                      merchant_category_code: "651"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_categories_rules_response.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
    delete:
      tags:
      - Cards Transactional Limits
      summary: Delete rules for a particular transaction category
      operationId: delete-oauth-consumer-transaction-categories-category_hash_id-rule
      parameters:
      - name: category_hash_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/providers/{limit}]/{offset}:
    get:
      tags:
      - Remittances
      summary: Remittance Provider Agents
      description: |
        Retrieve all the payout agents supported on the system for remittance.

        Data retrieved for this endpoint will be getting from a cache object which is populated on a background task.
      operationId: get-users-wallets-funds-transfers-overseas-providers
      parameters:
      - name: limit
        in: path
        description: Pagination limit
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: offset
        in: path
        description: Pagination offset
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: type
        in: query
        description: Beneficiary type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - consumer
          - corporate
      - name: agent_id
        in: query
        description: Payout Agent ID
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 14c8dda96995db082a9dda870bcca2a1
      - name: receive_country
        in: query
        description: Receiving Country Code (ISO alpha-3)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: PHL
      - name: mode
        in: query
        description: Mode from response of GET oauth/consumer/funds/transfers/overseas/modes
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: CASH_PICKUP
      - name: provider
        in: query
        description: Remittance Rails
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: transferto
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_54'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/funds/transfers/overseas/countries:
    get:
      tags:
      - Remittances
      summary: Remittance Countries
      description: Retrieve all countries supported by the program for remittance
      operationId: get-oauth-consumers-funds-transfers-overseas-countries
      parameters:
      - name: provider
        in: query
        description: Provider code from `GET /users/wallets/funds/transfers/overseas/types`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: transferto
      - name: type
        in: query
        description: Beneficiary Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - consumer
          - corporate
      - name: name
        in: query
        description: Country Name
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Philippines
      - name: code
        in: query
        description: Country Code
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: PHL
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_countries.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/funds/transfers/overseas/modes:
    get:
      tags:
      - Remittances
      summary: Remittance Payment Modes
      description: Retrieve all modes with specified countries per mode supported
        by the program for remittance
      operationId: get-oauth-consumers-funds-transfers-overseas-modes
      parameters:
      - name: provider
        in: query
        description: Provider code from `GET /users/wallets/funds/transfers/overseas/types`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: transferto
      - name: type
        in: query
        description: Beneficiary Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - consumer
          - corporate
      - name: name
        in: query
        description: Payment channel name
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Bank Account
      - name: code
        in: query
        description: Payment channel code
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: BA
      - name: country_code
        in: query
        description: Country Code
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: PHL
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_payment_modes.v1'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /oauth/consumer/funds/transfers/overseas/beneficiary/form:
    get:
      tags:
      - Remittances
      summary: Remittance Overseas Beneficiary Form
      description: Retrieve beneficiary form of a given provider and payout agent
      operationId: get-oauth-consumers-funds-transfers-overseas-beneficiary-form
      parameters:
      - name: provider
        in: query
        description: Provider code from `GET /users/wallets/funds/transfers/overseas/types`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: transferto
      - name: type
        in: query
        description: Beneficiary Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - consumer
          - corporate
      - name: payout_agent
        in: query
        description: Payout Agent
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: rmt:agent:tt1592457408uxojrb6ru2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_55'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas:
    post:
      tags:
      - Remittances
      summary: Send Overseas Transfers without providing Rails
      description: |
        Send a money transfer request with the specified agent.

        Any details required on this endpoint will be based from the sender/beneficiary form on the calculate (/test) endpoint.

        Any transaction made through this resource will be on pending validation. Confirmation must be made to clear the transaction.
      operationId: post-users-wallets-funds-transfers-overseas
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Remittance_send_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_send.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Remittance Rails Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  /users/wallets/funds/transfers/overseas/test:
    post:
      tags:
      - Remittances
      summary: Calculate Fees for Overseas Transfers without providing Rails
      description: |
        Calculate the exchange rate and fees applicable for the provided agent before an actual remittance transaction is created.

        A beneficiary form is also returned as part of the validation process when creating the actual remittance transaction.

        No transaction record is created yet when this endpoint is called.
      operationId: post-users-wallets-funds-transfers-overseas-test
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Remittance_test_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remittance_calculate.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: Remittance Rails Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  users/authentications/documents/process:
    post:
      tags:
      - KYC
      summary: Process KYC Verification
      description: |
        This endpoint will initiate the KYC verification flow and will return the redirect web URL where end users can initialize the verification process for verifying their identities.
      operationId: post-users-authentications-documents-process
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Kyc_process_request.v1'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kyc_process_response.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: KYC Orchestrator Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
  oauth/consumer/kyc/providers:
    get:
      tags:
      - KYC
      summary: Get KYC Providers enabled for the program
      description: |
        This endpoint calls the KYC Service to retrieve the providers configured for the program.

        The provider id and user type would be retrieved from this endpoint to use it for the processing of KYC verification.
      operationId: get-oauth-consumer-kyc-providers
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_kyc_providers_response.v1'
              examples: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
        "503":
          description: KYC Orchestrator Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.v1'
components:
  schemas:
    Address_details.v1:
      title: address_details
      required:
      - address_1
      - address_2
      - city
      - country
      - state
      - zipcode
      type: object
      properties:
        address_1:
          maxLength: 35
          type: string
          description: Address line 2 for the address type (Do note please sanitize
            any trailing or leading spaces before posting the data)
          example: Address1
        address_2:
          maxLength: 35
          type: string
          description: Address line 2 for the address type (Do note please sanitize
            any trailing or leading spaces before posting the data)
          example: Address2
        address_3:
          maxLength: 35
          type: string
          description: Address line 2 for the address type (Do note please sanitize
            any trailing or leading spaces before posting the data)
          example: Address Line 3
        address_4:
          maxLength: 35
          type: string
          description: Address line 2 for the address type (Do note please sanitize
            any trailing or leading spaces before posting the data)
          example: Address2
        city:
          maxLength: 20
          type: string
          description: City for the address type
          example: City
        state:
          maxLength: 20
          type: string
          description: State for the address type
          example: Cebu
        country:
          maxLength: 50
          type: string
          description: Country. *Case-sensitive* value referenced as `country_name`
            which can be obtained from mysql-country-list
          example: Philippines
        country_code:
          maxLength: 3
          type: string
          description: "Country code in ISO 3166 alpha-3 format. (Examples : SGP ,\
            \ PHL, IND)\n"
          example: IND
        zipcode:
          type: string
          description: Zip Code for the address type
          example: "6000"
      example:
        zipcode: "6000"
        country: Philippines
        country_code: IND
        city: City
        address_1: Address1
        address_2: Address2
        address_3: Address Line 3
        address_4: Address2
        state: Cebu
    Amount_details.v1:
      title: amount_details
      type: object
      properties:
        amount:
          type: string
        currency:
          type: string
        country:
          $ref: '#/components/schemas/Amount_details.v1_country'
      example:
        country:
          code: code
        amount: amount
        currency: currency
    Amount_details.v2:
      title: amount_details.v2
      type: object
      properties:
        total_amount:
          type: string
        amount:
          type: string
        currency:
          type: string
        total_fee:
          type: string
        rails_fee:
          type: string
        fixed_fee:
          type: string
        tax:
          type: string
        subscription_pricing:
          type: string
      example:
        amount: amount
        subscription_pricing: subscription_pricing
        total_amount: total_amount
        total_fee: total_fee
        fixed_fee: fixed_fee
        currency: currency
        tax: tax
        rails_fee: rails_fee
    Authentication_document.v1:
      title: authentication_document
      type: object
      properties:
        document_id:
          type: string
        document_type:
          type: string
        kyc_type:
          type: string
        link:
          type: string
    Balance_category.v1:
      title: balance_category
      required:
      - DEFAULT
      type: object
      properties:
        CATEGORY_NAME:
          $ref: '#/components/schemas/Balance_category.v1_CATEGORY_NAME'
        DEFAULT:
          $ref: Balance_category.v1_CATEGORY_NAME
      example:
        CATEGORY_NAME:
          withholding: null
          available: null
        DEFAULT:
          withholding: null
          available: null
      x-examples:
        example_balance_category:
          DEFAULT:
            available:
              currency: INR
              amount: "0.00"
            withholding:
              currency: INR
              amount: "0.00"
          CATEGORY_NAME:
            available:
              currency: INR
              amount: "0.00"
            withholding:
              currency: INR
              amount: "0.00"
    Balance_root.v1:
      title: balance_root
      required:
      - amount
      type: object
      properties:
        currency:
          type: string
          description: "currency of the balance type in [ISO 4217] format (http://www.iso.org/iso/currency_codes)"
        amount:
          type: string
          description: Monetary value of the balance type in the defined application
            currency with the relevant precision
        name:
          type: string
      example:
        amount: amount
        name: name
        currency: currency
      x-examples:
        example-balance available:
          currency: SGD
          amount: "0.00"
    Bank_account.v1:
      title: virtual_account
      type: object
      properties:
        account_number:
          type: number
        reversal_destination:
          $ref: '#/components/schemas/Bank_account.v1_reversal_destination'
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
        status:
          type: string
      example:
        account_number: 0.8008281904610115
        updated_at: 2000-01-23
        reversal_destination:
          bank_code: bank_code
          bank_account_number: bank_account_number
          id: id
          bank_holder_name: bank_holder_name
        created_at: 2000-01-23
        status: status
      x-examples:
        example-1:
        - account_number: 1234567890
          status: active
          created_at: 2020-03-25 14:30:56
          updated_at: 2020-03-25 14:30:56
    Basic_enumeration.v1:
      title: basic_enumeration_v1
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: The code for the enumeration type to be used
        description:
          type: string
          description: The description for the specific enumeration.
      example:
        code: code
        description: description
    Basic_enumeration_identification:
      title: basic_enumeration_identification
      type: object
      properties:
        code:
          type: string
        description:
          $ref: '#/components/schemas/Basic_enumeration_identification_description'
    Card_full.v1:
      title: card_full
      required:
      - holder
      - id
      - number
      - status
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]*"
          type: string
          description: Unique Reference for Wallet in the MatchMove System
        number:
          type: string
          description: Account Identification Number for the Wallet
        holder:
          $ref: '#/components/schemas/Card_full.v1_holder'
        type:
          $ref: '#/components/schemas/Card_full.v1_type'
        token:
          $ref: '#/components/schemas/Card_full.v1_token'
        date:
          $ref: '#/components/schemas/Card_full.v1_date'
        image:
          $ref: '#/components/schemas/Card_image.v1'
        status:
          $ref: '#/components/schemas/Card_full.v1_status'
        funds:
          $ref: '#/components/schemas/Card_full.v1_funds'
        links:
          type: array
          example:
          - rel: securities.tokens
            href: https://example.xom/v1/users/wallets/cards/securities/tokens
            method: GET
          items:
            $ref: Card_full.v1_links
        kit:
          type: string
      example:
        date:
          closed: closed
          expiry: YYYY-MM
          issued: 2000-01-23
        number: number
        image:
          small: http://example.com/aeiou
          large: http://example.com/aeiou
          medium: http://example.com/aeiou
        kit: kit
        holder:
          name: name
        funds:
          withholding: null
          available:
            amount: amount
            name: name
            currency: currency
          categories:
            CATEGORY_NAME:
              withholding: null
              available: null
            DEFAULT:
              withholding: null
              available: null
        links:
        - rel: securities.tokens
          href: https://example.xom/v1/users/wallets/cards/securities/tokens
          method: GET
        id: id
        type:
          name: name
          personalised_order: true
          description: description
          type: type
          form_factor: physical
        token:
          generation: static
          type: type
        status:
          is_active: true
          text: text
    Card_image.v1:
      title: card_image
      required:
      - large
      - medium
      - small
      type: object
      properties:
        small:
          type: string
          description: The design associated with the card in the smallest dimension
          format: uri
        medium:
          type: string
          description: The design associated with the card in the medium dimension
          format: uri
        large:
          type: string
          description: The design associated with the card in the large dimension
          format: uri
      description: Model to describe the card images that are retuned on the get call
        for retrieving users payment instrument.
      example:
        small: http://example.com/aeiou
        large: http://example.com/aeiou
        medium: http://example.com/aeiou
    Card_issuance.v1:
      title: card_issuance
      type: object
      properties:
        pre_kyc:
          $ref: '#/components/schemas/Cardcount_limits.v1'
        post_kyc:
          $ref: '#/components/schemas/Cardcount_limits.v1'
        rules:
          type: array
          items:
            type: string
      example:
        post_kyc: null
        pre_kyc:
          lifetime_count_limit: 1.1730742509559433
          yearly_count_limit: 7.457744773683766
          allowed: 1.2315135367772556
          daily_count_limit: 1.0246457001441578
          weekly_count_limit: 1.4894159098541704
          monthly_count_limit: 6.84685269835264
        rules:
        - rules
        - rules
    Card_limits_request.v1:
      title: card_limits
      required:
      - active_count_limit
      - active_count_statuses
      - daily_count_limit
      - lifetime_count_limit
      - monthly_count_limit
      - user_state
      - weekly_count_limit
      - yearly_count_limit
      type: object
      properties:
        active_count_statuses:
          type: string
          description: Card statuses
          enum:
          - active
          - locked
          - pending activation
        append_status:
          type: boolean
        user_state:
          type: string
          description: User kyc state
          enum:
          - pre_kyc
          - post_kyc
        daily_count_limit:
          type: string
          description: Number of cards can be created daily
        weekly_count_limit:
          type: string
          description: Number of cards can be created weekly
        monthly_count_limit:
          type: string
          description: Number of cards can be created monthly
        yearly_count_limit:
          type: string
          description: Number of cards can be created yearly
        lifetime_count_limit:
          type: string
          description: Number of cards can be created lifetime
        active_count_limit:
          type: string
          description: Number of cards can be active at a time
        issuance_count_rules:
          type: string
          description: Meta data for setting the rules for card creation
          enum:
          - email
          - id_type
          - id_number
          - mobile
          - mobile_country_code
      x-examples:
        example-1:
          active_count_statuses: "active,pending activation,locked"
          user_state: pre-kyc
          daily_count_limit: "5"
          weekly_count_limit: "5"
          monthly_count_limit: "5"
          yearly_count_limit: "5"
          lifetime_count_limit: "5"
          active_count_limit: "5"
          issuance_count_rules: email
        example-2:
          active_count_statuses: "active,pending activation,locked,blocked"
          user_state: pre-kyc
          daily_count_limit: "5"
          weekly_count_limit: "5"
          monthly_count_limit: "5"
          yearly_count_limit: "5"
          lifetime_count_limit: "5"
          active_count_limit: "5"
          issuance_count_rules: "email,id_type,id_number"
        example-3:
          active_count_statuses: "active,pending activation,locked,blocked"
          user_state: pre-kyc
          daily_count_limit: "5"
          weekly_count_limit: "5"
          monthly_count_limit: "5"
          yearly_count_limit: "5"
          lifetime_count_limit: "5"
          active_count_limit: "5"
          issuance_count_rules: "email,id_type,id_number,mobile,mobile_country_code"
        example-4:
          active_count_statuses: "active,pending activation,locked,blocked"
          user_state: pre-kyc
          daily_count_limit: "5"
          weekly_count_limit: "5"
          monthly_count_limit: "5"
          yearly_count_limit: "5"
          lifetime_count_limit: "5"
          active_count_limit: "5"
    Card_limits_response.v1:
      title: card_limits_response
      type: object
      properties:
        card_type:
          $ref: '#/components/schemas/Card_limits_response.v1_card_type'
    Card_mini.v1:
      title: card_mini
      required:
      - holder
      - id
      - number
      - status
      type: object
      properties:
        id:
          type: string
          description: Unique Reference for Wallet in the MatchMove System
          format: uuid
        status:
          $ref: Card_full.v1_status
        holder:
          $ref: Card_full.v1_holder
        funds:
          $ref: Card_full.v1_funds
        number:
          type: string
          description: Account Identification Number for the Wallet
        network:
          type: string
          description: "Network the card is associated to Example : visa, mastercard,\
            \ rupay"
          enum:
          - mastercard
          - visa
          - rupay
        card_type_code:
          type: string
          description: One of the card types available via GET /users/wallets/cards/types
        image:
          $ref: '#/components/schemas/Card_image.v1'
        date:
          $ref: Card_full.v1_date
      example:
        date:
          closed: closed
          expiry: YYYY-MM
          issued: 2000-01-23
        number: number
        image:
          small: http://example.com/aeiou
          large: http://example.com/aeiou
          medium: http://example.com/aeiou
        card_type_code: card_type_code
        holder: null
        funds: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: null
        network: mastercard
    Card_type.v1:
      title: card_type
      type: object
      properties:
        types:
          type: array
          items:
            $ref: Card_type.v1_types
      example:
        types:
        - image:
            small: http://example.com/aeiou
            large: http://example.com/aeiou
            medium: http://example.com/aeiou
          code: code
          name: name
          personalised_order: true
          description: description
          currency: ""
          details:
            active_limits:
              post_kyc: 9.965781217890562
              allowed: 4.965218492984954
              pre_kyc: 5.025004791520295
              statuses:
              - statuses
              - statuses
            transfer_in_limits: null
            min_load_limit: 0.8008281904610115
            fee: fee
            fee_currency: fee_currency
            topup_limits:
              post_kyc: null
              user_limits: null
              pre_kyc:
                lifetime_count_limit: 5.962133916683182
                daily_transactional_limit: 7.061401241503109
                allowed: 1.4658129805029452
                daily_count_limit: 2.3021358869347655
                weekly_count_limit: 9.301444243932576
                monthly_transactional_limit: 4.145608029883936
                weekly_transactional_limit: 3.616076749251911
                lifetime_transactional_limit: 5.637376656633329
                monthly_count_limit: 2.027123023002322
                unit_transaction_limit: 7.386281948385884
            max_count: max_count
            transfer_out_limits: null
            deduct_limits:
              post_kyc: null
              user_limits: null
              pre_kyc:
                lifetime_count_limit: 5.962133916683182
                daily_transactional_limit: 7.061401241503109
                allowed: 1.4658129805029452
                daily_count_limit: 2.3021358869347655
                weekly_count_limit: 9.301444243932576
                monthly_transactional_limit: 4.145608029883936
                weekly_transactional_limit: 3.616076749251911
                lifetime_transactional_limit: 5.637376656633329
                monthly_count_limit: 2.027123023002322
                unit_transaction_limit: 7.386281948385884
            issuance_limits:
              post_kyc: null
              pre_kyc:
                lifetime_count_limit: 1.1730742509559433
                yearly_count_limit: 7.457744773683766
                allowed: 1.2315135367772556
                daily_count_limit: 1.0246457001441578
                weekly_count_limit: 1.4894159098541704
                monthly_count_limit: 6.84685269835264
              rules:
              - rules
              - rules
            network_type: mastercard
            load_limits: null
            unload_limits: null
            max_load_limit: 6.027456183070403
          form_factor: physical
          token:
            generation: static
            type: type
        - image:
            small: http://example.com/aeiou
            large: http://example.com/aeiou
            medium: http://example.com/aeiou
          code: code
          name: name
          personalised_order: true
          description: description
          currency: ""
          details:
            active_limits:
              post_kyc: 9.965781217890562
              allowed: 4.965218492984954
              pre_kyc: 5.025004791520295
              statuses:
              - statuses
              - statuses
            transfer_in_limits: null
            min_load_limit: 0.8008281904610115
            fee: fee
            fee_currency: fee_currency
            topup_limits:
              post_kyc: null
              user_limits: null
              pre_kyc:
                lifetime_count_limit: 5.962133916683182
                daily_transactional_limit: 7.061401241503109
                allowed: 1.4658129805029452
                daily_count_limit: 2.3021358869347655
                weekly_count_limit: 9.301444243932576
                monthly_transactional_limit: 4.145608029883936
                weekly_transactional_limit: 3.616076749251911
                lifetime_transactional_limit: 5.637376656633329
                monthly_count_limit: 2.027123023002322
                unit_transaction_limit: 7.386281948385884
            max_count: max_count
            transfer_out_limits: null
            deduct_limits:
              post_kyc: null
              user_limits: null
              pre_kyc:
                lifetime_count_limit: 5.962133916683182
                daily_transactional_limit: 7.061401241503109
                allowed: 1.4658129805029452
                daily_count_limit: 2.3021358869347655
                weekly_count_limit: 9.301444243932576
                monthly_transactional_limit: 4.145608029883936
                weekly_transactional_limit: 3.616076749251911
                lifetime_transactional_limit: 5.637376656633329
                monthly_count_limit: 2.027123023002322
                unit_transaction_limit: 7.386281948385884
            issuance_limits:
              post_kyc: null
              pre_kyc:
                lifetime_count_limit: 1.1730742509559433
                yearly_count_limit: 7.457744773683766
                allowed: 1.2315135367772556
                daily_count_limit: 1.0246457001441578
                weekly_count_limit: 1.4894159098541704
                monthly_count_limit: 6.84685269835264
              rules:
              - rules
              - rules
            network_type: mastercard
            load_limits: null
            unload_limits: null
            max_load_limit: 6.027456183070403
          form_factor: physical
          token:
            generation: static
            type: type
    Cardactive_limits.v1:
      title: cardactive_limits
      type: object
      properties:
        allowed:
          type: number
          nullable: true
          enum:
          - 1
          - 0
        pre_kyc:
          type: number
        post_kyc:
          type: number
        statuses:
          type: array
          items:
            type: string
      example:
        post_kyc: 9.965781217890562
        allowed: 4.965218492984954
        pre_kyc: 5.025004791520295
        statuses:
        - statuses
        - statuses
    Cardcount_limits.v1:
      title: cardcount_limits
      type: object
      properties:
        allowed:
          type: number
          description: whether its allowed or not
          nullable: true
          enum:
          - 0
          - 1
        daily_count_limit:
          type: number
          description: Cards allowed to be created on daily basis
          nullable: true
        weekly_count_limit:
          type: number
          description: Cards allowed to be created on weekly basis
          nullable: true
        monthly_count_limit:
          type: number
          description: Cards allowed to be created on monthly basis
          nullable: true
        yearly_count_limit:
          type: number
          description: Cards allowed to be created on yearly basis
          nullable: true
        lifetime_count_limit:
          type: number
          description: Cards allowed to be created for lifetime of account
          nullable: true
      example:
        lifetime_count_limit: 1.1730742509559433
        yearly_count_limit: 7.457744773683766
        allowed: 1.2315135367772556
        daily_count_limit: 1.0246457001441578
        weekly_count_limit: 1.4894159098541704
        monthly_count_limit: 6.84685269835264
    Closed_loop.v1:
      title: closed_loop
      type: object
      properties:
        total_records:
          type: integer
          example: 100
        records_per_page:
          type: integer
          example: 10
        total_pages:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: Closed_loop.v1_links
        transactions:
          type: array
          description: Transaction information
          items:
            $ref: '#/components/schemas/Closed_loop_transactions.v1'
      example:
        records_per_page: 10
        total_records: 100
        links:
        - next: https://example.xom/v1/oauth/consumer/search/users?page=4&records_per_page=10
          previous: https://example.xom/v1/oauth/consumer/search/users?page=1&records_per_page=10
          self: https://example.xom/v1/oauth/consumer/search/users?page=2&records_per_page=10
        - next: https://example.xom/v1/oauth/consumer/search/users?page=4&records_per_page=10
          previous: https://example.xom/v1/oauth/consumer/search/users?page=1&records_per_page=10
          self: https://example.xom/v1/oauth/consumer/search/users?page=2&records_per_page=10
        total_pages: 10
        transactions:
        - payment_instrument:
            destination:
              number: number
              destination_type: destination_type
              receiver:
                mobile: mobile
                email: email
                receiver_type: receiver_type
              proxy_number: proxy_number
              state: state
              hash_id: hash_id
            source:
              number: number
              sender:
                sender_type: sender_type
                mobile: mobile
                email: email
              proxy_number: proxy_number
              source_type: source_type
              state: state
              hash_id: hash_id
          mobile: mobile
          details:
            date: date
            additional_information: additional_information
            amount: 0.8008282
            original_transaction:
              amount: 1.4658129
              currency: currency
              transaction_type: transaction_type
              ref_hash: ref_hash
            balance: 6.0274563
            currency: currency
            type: type
            ref_hash: ref_hash
            status: status
          id: id
          transaction_type: transaction_type
          email: email
        - payment_instrument:
            destination:
              number: number
              destination_type: destination_type
              receiver:
                mobile: mobile
                email: email
                receiver_type: receiver_type
              proxy_number: proxy_number
              state: state
              hash_id: hash_id
            source:
              number: number
              sender:
                sender_type: sender_type
                mobile: mobile
                email: email
              proxy_number: proxy_number
              source_type: source_type
              state: state
              hash_id: hash_id
          mobile: mobile
          details:
            date: date
            additional_information: additional_information
            amount: 0.8008282
            original_transaction:
              amount: 1.4658129
              currency: currency
              transaction_type: transaction_type
              ref_hash: ref_hash
            balance: 6.0274563
            currency: currency
            type: type
            ref_hash: ref_hash
            status: status
          id: id
          transaction_type: transaction_type
          email: email
    Closed_loop_transactions.v1:
      title: closed_loop_transactions
      type: object
      properties:
        id:
          type: string
          description: User Hash ID
        email:
          type: string
          description: User Email
        mobile:
          type: string
          description: User Full Mobile
        transaction_type:
          type: string
          description: Transaction Type
        payment_instrument:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_payment_instrument'
        details:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_details'
      example:
        payment_instrument:
          destination:
            number: number
            destination_type: destination_type
            receiver:
              mobile: mobile
              email: email
              receiver_type: receiver_type
            proxy_number: proxy_number
            state: state
            hash_id: hash_id
          source:
            number: number
            sender:
              sender_type: sender_type
              mobile: mobile
              email: email
            proxy_number: proxy_number
            source_type: source_type
            state: state
            hash_id: hash_id
        mobile: mobile
        details:
          date: date
          additional_information: additional_information
          amount: 0.8008282
          original_transaction:
            amount: 1.4658129
            currency: currency
            transaction_type: transaction_type
            ref_hash: ref_hash
          balance: 6.0274563
          currency: currency
          type: type
          ref_hash: ref_hash
          status: status
        id: id
        transaction_type: transaction_type
        email: email
    Consent.v1:
      title: consent
      type: object
      properties:
        full_name:
          type: string
        numbers:
          type: string
        sign:
          type: string
      example:
        full_name: full_name
        numbers: numbers
        sign: sign
      x-examples:
        example-1:
        - full_name: John Doe
          numbers: 12345678
          sign: sign
    Currency.v1:
      title: currency
      type: object
      properties:
        id:
          type: string
          description: Currency ID
        name:
          type: string
          description: Currency Name
        type:
          type: string
          description: Currency Type
        code:
          type: string
          description: |
            Short name for the currency. For monetary currency use ISO-4217
        date:
          $ref: '#/components/schemas/Currency.v1_date'
      example:
        date:
          added: ""
        code: code
        name: name
        id: id
        type: type
    Error.v1:
      title: error
      required:
      - code
      - description
      - link
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        link:
          type: string
          format: uri
    Fund_categories.v1:
      title: fund_categories
      required:
      - default_amount
      - factor
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the fund category in the system
        name:
          type: string
          description: Assigned name for the fund category
        default_amount:
          type: string
          description: The max allowed transaction on the fund category
        factor:
          type: string
        mcc:
          type: string
        merchant:
          type: string
        terminal:
          type: string
      example:
        default_amount: default_amount
        name: name
        merchant: merchant
        id: id
        terminal: terminal
        factor: factor
        mcc: mcc
    Fund_categories_limit_request.v1:
      title: fund_categories_limit_request
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Fund_categories_limit_request.v1_settings'
      example:
        settings:
          duration: duration
          interval: interval
          value: value
    Fund_categories_limit_response.v1:
      title: fund_categories_limit
      type: object
      properties:
        name:
          type: string
          description: Fund Category name
        settings:
          $ref: Fund_categories_limit_request.v1_settings
        date:
          $ref: '#/components/schemas/Fund_categories_limit_response.v1_date'
      example:
        date:
          added: added
          updated: updated
        settings:
          duration: duration
          interval: interval
          value: value
        name: name
    Fund_transfer.v1:
      title: fund_transfer
      type: object
      properties:
        id:
          type: string
          format: uuid
        client_ref_id:
          type: string
        unique_payment_id:
          type: string
        currency:
          type: string
        purpose_of_transfer:
          type: string
        transfer_type:
          type: string
        status:
          type: string
          enum:
          - success
          - pending
          - reversed
          - failed
        description:
          type: string
        bank_account:
          $ref: Bank_account.v1_reversal_destination
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
      example:
        client_ref_id: client_ref_id
        updated_at: 2000-01-23
        purpose_of_transfer: purpose_of_transfer
        description: description
        created_at: 2000-01-23
        currency: currency
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        transfer_type: transfer_type
        unique_payment_id: unique_payment_id
        status: success
        bank_account:
          bank_code: bank_code
          bank_account_number: bank_account_number
          id: id
          bank_holder_name: bank_holder_name
      x-examples:
        example-1:
        - client_ref_id: 7e09a7e0e29b3e1c518fe679d81b7110
          unique_payment_id: 21992a30eabdbe5aa531f0da8a641dd6
          amount: 1000
          currency: SGD
          purpose_of_transfer: Transfer
          transfer_type: transfer_in
          status: failed
          description: Receiving Bank Unavailable
          created_at: 2020-03-25 14:30:56
          updated_at: 2020-03-25 14:30:56
    Funds.v1:
      title: funds
      type: object
      properties:
        id:
          type: string
          description: Hash ID of the transaction
        ref_id:
          type: string
          description: Reference id of the transaction
        status:
          type: string
          description: Status of the transaction
          enum:
          - waiting
          - success
          - pending
      example:
        ref_id: ref_id
        id: id
        status: waiting
      x-examples:
        transaction waiting:
          id: 2883e1b04619a69f7331a775cca1f06b38ad7eed4583485f7451c888f5093c49
          ref_id: 0000002800000000016700000000021F
          status: waiting
        Transaction success:
          id: 25b89ff8bd2616dde6b4570c65760c858116105d7f517267b8e6adf338fc15e8
          ref_id: 000001D8000000000006000000000005
          status: success
    Get_kyc_providers_response.v1:
      title: Enabled KYC Providers
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: Get_kyc_providers_response.v1_providers
      example:
        providers:
        - callback_url: callback_url
          code: code
          user_type: user_type
          details: {}
          id: id
        - callback_url: callback_url
          code: code
          user_type: user_type
          details: {}
          id: id
    Kyc_process_request.v1:
      title: KYC Process Request
      required:
      - program_code
      - provider_id
      - user_id
      - user_type
      type: object
      properties:
        provider_id:
          type: string
          description: Provider ID from the selected provider for the KYC flow
        user_type:
          type: string
          description: Type of user enabled for the selected provider
        user_id:
          type: string
          description: OP User Hash ID
        program_code:
          type: string
          description: OP Program Code
    Kyc_process_response.v1:
      title: KYC Process Response
      required:
      - links
      - success
      type: object
      properties:
        success:
          type: boolean
          description: Indicator if the process was successful
        links:
          type: array
          items:
            $ref: Kyc_process_response.v1_links
      example:
        success: true
        links:
        - method: method
          rel: rel
          href: href
        - method: method
          rel: rel
          href: href
    Oauth_reverse_transaction:
      title: oauth_reverse_transaction
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        amount:
          type: string
        currency:
          type: string
        status:
          type: string
          nullable: true
        indicator:
          type: string
        card_number:
          type: string
        sender_vpa:
          type: string
        receiver_vpa:
          type: string
        details:
          $ref: '#/components/schemas/Oauth_reverse_transaction_details'
        date:
          $ref: '#/components/schemas/Oauth_reverse_transaction_date'
      example:
        indicator: indicator
        date:
          reversal_date: reversal_date
        amount: amount
        receiver_vpa: receiver_vpa
        card_number: card_number
        sender_vpa: sender_vpa
        currency: currency
        details:
          tt: tt
          pp: pp
          ref_id: ref_id
          amount: 0.8008281904610115
          total: 1
          is_custom_ref_id: is_custom_ref_id
          fee: 6.027456183070403
          payment_ref: payment_ref
        id: id
        type: type
        status: status
    Oauth_transaction.v1:
      title: oauth_transaction
      type: object
      properties:
        field:
          type: string
        type:
          type: string
        sub_type:
          type: string
        details:
          type: string
        old_remittance_floating_balance:
          type: string
        new_remittance_floating_balance:
          type: string
        old_fund_floating_balance:
          type: string
        new_fund_floating_balance:
          type: string
        old_fund_debit_limit:
          type: string
        new_fund_debit_limit:
          type: string
        transaction_ref_id:
          type: string
        method:
          type: string
        uri:
          type: string
        date_added:
          type: string
      example:
        transaction_ref_id: transaction_ref_id
        method: method
        new_remittance_floating_balance: new_remittance_floating_balance
        type: type
        old_remittance_floating_balance: old_remittance_floating_balance
        uri: uri
        date_added: date_added
        new_fund_floating_balance: new_fund_floating_balance
        field: field
        new_fund_debit_limit: new_fund_debit_limit
        sub_type: sub_type
        old_fund_debit_limit: old_fund_debit_limit
        details: details
        old_fund_floating_balance: old_fund_floating_balance
    Pagination_old.v1:
      title: pagination_old
      type: object
      properties:
        id:
          type: string
      description: The older pagination model being used by the legacy services
    Payment_instrument_details.v1:
      title: payment_instrument_details
      type: object
      properties:
        min_load_limit:
          type: number
        max_load_limit:
          type: number
        network_type:
          type: string
          enum:
          - mastercard
          - rupay
          - visa
        fee:
          type: string
        fee_currency:
          type: string
        max_count:
          type: string
        topup_limits:
          $ref: '#/components/schemas/Payment_instrument_details.v1_topup_limits'
        deduct_limits:
          $ref: Payment_instrument_details.v1_topup_limits
        transfer_in_limits:
          $ref: Payment_instrument_details.v1_topup_limits
        transfer_out_limits:
          $ref: Payment_instrument_details.v1_topup_limits
        load_limits:
          $ref: Payment_instrument_details.v1_topup_limits
        unload_limits:
          $ref: Payment_instrument_details.v1_topup_limits
        issuance_limits:
          $ref: '#/components/schemas/Card_issuance.v1'
        active_limits:
          $ref: '#/components/schemas/Cardactive_limits.v1'
      example:
        active_limits:
          post_kyc: 9.965781217890562
          allowed: 4.965218492984954
          pre_kyc: 5.025004791520295
          statuses:
          - statuses
          - statuses
        transfer_in_limits: null
        min_load_limit: 0.8008281904610115
        fee: fee
        fee_currency: fee_currency
        topup_limits:
          post_kyc: null
          user_limits: null
          pre_kyc:
            lifetime_count_limit: 5.962133916683182
            daily_transactional_limit: 7.061401241503109
            allowed: 1.4658129805029452
            daily_count_limit: 2.3021358869347655
            weekly_count_limit: 9.301444243932576
            monthly_transactional_limit: 4.145608029883936
            weekly_transactional_limit: 3.616076749251911
            lifetime_transactional_limit: 5.637376656633329
            monthly_count_limit: 2.027123023002322
            unit_transaction_limit: 7.386281948385884
        max_count: max_count
        transfer_out_limits: null
        deduct_limits:
          post_kyc: null
          user_limits: null
          pre_kyc:
            lifetime_count_limit: 5.962133916683182
            daily_transactional_limit: 7.061401241503109
            allowed: 1.4658129805029452
            daily_count_limit: 2.3021358869347655
            weekly_count_limit: 9.301444243932576
            monthly_transactional_limit: 4.145608029883936
            weekly_transactional_limit: 3.616076749251911
            lifetime_transactional_limit: 5.637376656633329
            monthly_count_limit: 2.027123023002322
            unit_transaction_limit: 7.386281948385884
        issuance_limits:
          post_kyc: null
          pre_kyc:
            lifetime_count_limit: 1.1730742509559433
            yearly_count_limit: 7.457744773683766
            allowed: 1.2315135367772556
            daily_count_limit: 1.0246457001441578
            weekly_count_limit: 1.4894159098541704
            monthly_count_limit: 6.84685269835264
          rules:
          - rules
          - rules
        network_type: mastercard
        load_limits: null
        unload_limits: null
        max_load_limit: 6.027456183070403
    Payment_limits.v1:
      title: payment_limits
      type: object
      properties:
        allowed:
          type: number
          nullable: true
          enum:
          - 1
          - 0
        lifetime_count_limit:
          type: number
          nullable: true
        lifetime_transactional_limit:
          type: number
          nullable: true
        daily_count_limit:
          type: number
          nullable: true
        daily_transactional_limit:
          type: number
          nullable: true
        weekly_count_limit:
          type: number
          nullable: true
        weekly_transactional_limit:
          type: number
          nullable: true
        monthly_count_limit:
          type: number
          nullable: true
        monthly_transactional_limit:
          type: number
          nullable: true
        unit_transaction_limit:
          type: number
          nullable: true
      example:
        lifetime_count_limit: 5.962133916683182
        daily_transactional_limit: 7.061401241503109
        allowed: 1.4658129805029452
        daily_count_limit: 2.3021358869347655
        weekly_count_limit: 9.301444243932576
        monthly_transactional_limit: 4.145608029883936
        weekly_transactional_limit: 3.616076749251911
        lifetime_transactional_limit: 5.637376656633329
        monthly_count_limit: 2.027123023002322
        unit_transaction_limit: 7.386281948385884
    Remittance_agent.v1:
      title: remittance_agent
      required:
      - agent_details
      - agent_id
      - country_code
      - display_name
      - exchange_rate
      - exchanges_rate
      - fees
      - payment_mode
      - provider
      - receive_currency
      - receiving_agent_type
      type: object
      properties:
        agent_id:
          type: string
          description: Payout Agent Hash ID
        payment_mode:
          $ref: '#/components/schemas/Remittance_agent.v1_payment_mode'
        display_name:
          type: string
          description: Payout Agent Display Name
        provider:
          type: string
          description: Provider Rails
        exchange_rate:
          type: string
          description: Calculate exchange rate after fx percentage discounting
        country_code:
          type: string
          description: ISO-3166 alpha-3 country code
        receive_currency:
          type: string
          description: ISO-4217 three-letter receiving currency code
        receiving_agent_type:
          type: string
          description: Receiver/Beneficiary Type
          enum:
          - consumer
          - corporate
        exchanges_rate:
          $ref: '#/components/schemas/Remittance_agent.v1_exchanges_rate'
        fees:
          $ref: '#/components/schemas/Remittance_agent.v1_fees'
        agent_details:
          $ref: '#/components/schemas/Remittance_agent.v1_agent_details'
        links:
          type: array
          items:
            $ref: Card_full.v1_links
      example:
        country_code: country_code
        exchanges_rate:
          expiry: expiry
          value: value
        payment_mode:
          code: code
          description: description
        fees:
          fx_markup: fx_markup
          fixed_fee: fixed_fee
        receive_currency: receive_currency
        receiving_agent_type: consumer
        agent_id: agent_id
        exchange_rate: exchange_rate
        provider: provider
        links:
        - method: method
          rel: rel
          href: href
        - method: method
          rel: rel
          href: href
        agent_details:
          routing_param: routing_param
          payment_mode: payment_mode
          receive_currency: receive_currency
          agent_id: agent_id
          calculation_mode: calculation_mode
          routing_type: routing_type
          partner_name: partner_name
          min_amount: min_amount
          priority: priority
          send_currency: send_currency
          provider_currency: provider_currency
          max_amount: max_amount
          receive_country: receive_country
        display_name: display_name
      x-examples:
        Example of Corporate Agent:
          agent_id: 14c8dda96995db082a9dda870bcca2a1
          payment_mode:
            code: BA
            description: Bank Account
          display_name: Pt. Bank Cimb Niaga Tbk.
          provider: transferto
          exchange_rate: "10878.8114"
          country_code: IDN
          receive_currency: IDR
          receiving_agent_type: corporate
          exchanges_rate:
            value: "10878.8114"
          fees:
            fixed_fee: "19.90"
          agent_details:
            agent_id: 14c8dda96995db082a9dda870bcca2a1
            calculation_mode: source
            payment_mode: BA
            routing_param: "223"
            routing_type: DESTINATION
            provider_currency: SGD
            send_currency: SGD
            receive_currency: IDR
            receive_country: IDN
            partner_name: Pt. Bank Cimb Niaga Tbk.
          links:
          - rel: beneficiary_form
            href: https://example.com/sgmmremt/v1/oauth/consumer/funds/transfers/overseas/beneficiary/form?type=corporate&payout_agent=14c8dda96995db082a9dda870bcca2a1
            method: GET
          - rel: attachment_form
            href: https://example.com/sgmmremt/v1/oauth/consumer/funds/transfers/overseas/attachment/form?payout_agent=14c8dda96995db082a9dda870bcca2a1
            method: GET
        Example of Consumer Agent:
          agent_id: c4ca4238a0b923820dcc509a6f75849b
          payment_mode:
            code: BA
            description: Bank Account
          display_name: Doku - Bank Deposit (BA)
          provider: doku
          exchange_rate: "10249.278391608392"
          country_code: IDN
          receive_currency: IDR
          receiving_agent_type: consumer
          exchanges_rate:
            value: "10259.527670"
          fees:
            fixed_fee: "3.34"
          agent_details:
            agent_id: c4ca4238a0b923820dcc509a6f75849b
            calculation_mode: source
            payment_mode: BA
            routing_param: ""
            routing_type: DESTINATION
            provider_currency: SGD
            send_currency: SGD
            receive_currency: IDR
            receive_country: IDN
            partner_name: Doku - Bank Deposit (BA)
    Remittance_attachment.v1:
      title: remittance_attachment
      type: object
      properties:
        id:
          type: string
        document_type:
          type: string
        content_type:
          type: string
        document_name:
          type: string
        link:
          type: string
        created_at:
          type: string
      example:
        document_name: document_name
        content_type: content_type
        link: link
        created_at: created_at
        id: id
        document_type: document_type
    Remittance_attachment_form.v1:
      title: remittance_attachment_form
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: Remittance_attachment_form.v1_fields
        required_documents:
          type: array
      example:
        required_documents: ""
        fields:
        - field_key: field_key
          field_group_name: field_group_name
          type: type
          validation:
            is_required: is_required
            mime_type: mime_type
          field_name: field_name
        - field_key: field_key
          field_group_name: field_group_name
          type: type
          validation:
            is_required: is_required
            mime_type: mime_type
          field_name: field_name
      x-examples:
        Example:
          fields:
          - field_group_name: Attachments
            field_name: attachment
            field_key: attachment
            type: fiel
            validation:
              is_required: "true"
              mime_type: application/pdf
          required_documents:
          - invoice
          - contract
    Remittance_attachments.v1:
      title: remittance_attachments
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: Remittance_attachments.v1_attachments
      example:
        attachments:
        - document_name: document_name
          content_type: content_type
          link: link
          created_at: created_at
          id: id
          document_type: document_type
        - document_name: document_name
          content_type: content_type
          link: link
          created_at: created_at
          id: id
          document_type: document_type
    Remittance_basic_form.v1:
      title: Remittance Calculate Beneficiary Form
      type: object
      properties:
        key:
          $ref: '#/components/schemas/Remittance_basic_form.v1_key'
      example:
        key:
          key_name: key_name
          field_key: field_key
          values_supported:
          - name: name
            value: value
          - name: name
            value: value
          type: type
          validation:
            required: required
            max_length: 0
          field_name: field_name
    Remittance_beneficiary_form.v1:
      title: Remittance Beneficiary Form
      type: object
      properties:
        field_group_name:
          type: string
        field_name:
          type: string
        field_key:
          type: string
        type:
          type: string
        validation:
          $ref: '#/components/schemas/Remittance_beneficiary_form.v1_validation'
        values_supported:
          type: array
          items:
            $ref: Remittance_basic_form.v1_key_values_supported
      example:
        field_key: field_key
        field_group_name: field_group_name
        values_supported:
        - name: name
          value: value
        - name: name
          value: value
        type: type
        validation:
          is_required: is_required
          max_length: 0
        field_name: field_name
    Remittance_calculate.v1:
      title: remittance_calculate
      type: object
      properties:
        calculate_result:
          $ref: '#/components/schemas/Remittance_calculate.v1_calculate_result'
      example:
        calculate_result:
          provider_exchange_rate: provider_exchange_rate
          amount_details:
            send_details:
              amount: amount
              subscription_pricing: subscription_pricing
              total_amount: total_amount
              total_fee: total_fee
              fixed_fee: fixed_fee
              currency: currency
              tax: tax
              rails_fee: rails_fee
            receive_amounts: null
          receive_currency: receive_currency
          amount_to_be_deducted: amount_to_be_deducted
          exchange_rate: exchange_rate
          amount_to_send: amount_to_send
          amount_to_receive_currency: amount_to_receive_currency
          fixed_fee: fixed_fee
          initial_amount: initial_amount
          amount_to_send_currency: amount_to_send_currency
          amount_to_receive: amount_to_receive
          beneficiary_form:
          - null
          - null
          required_fields: required_fields
          subscription_pricing: subscription_pricing
          total_amount: total_amount
          sender_form:
          - null
          - null
          result_code: result_code
          commission: commission
          attachment_form:
          - key:
              key_name: key_name
              field_key: field_key
              values_supported:
              - name: name
                value: value
              - name: name
                value: value
              type: type
              validation:
                required: required
                max_length: 0
              field_name: field_name
          - key:
              key_name: key_name
              field_key: field_key
              values_supported:
              - name: name
                value: value
              - name: name
                value: value
              type: type
              validation:
                required: required
                max_length: 0
              field_name: field_name
          quotation:
            receive: null
            provider_exchange_rate: provider_exchange_rate
            exchange_rate: exchange_rate
            quotation_id: quotation_id
            calculation_mode: calculation_mode
            initial:
              country:
                code: code
              amount: amount
              currency: currency
            date_created: date_created
            fee: null
            external_id: external_id
            transaction_type: transaction_type
            payout_agent: payout_agent
            subscription_pricing: true
            id: id
            send: null
            status: status
            date_expiry: date_expiry
      x-examples:
        remittance-calculate-example:
          calculate_result:
            result_code: "0001"
            initial_amount: "10.00"
            amount_to_send: "10.00"
            amount_to_send_currency: SGD
            amount_to_receive: "56.62"
            amount_to_receive_currency: HKD
            receive_currency: HKD
            provider_exchange_rate: "5.66"
            exchange_rate: "5.662"
            fixed_fee: "19.90"
            commission: "19.90"
            total_amount: "29.90"
            amount_to_be_deducted: "29.90"
            amount_details:
              send_details:
                total_amount: "29.90"
                amount: "10.00"
                currency: SGD
                total_fee: "19.90"
                rails_fee: "0.00"
                fixed_fee: "19.90"
                tax: "0.00"
                subscription_pricing: false
              receive_amounts:
                total_amount: "56.62"
                amount: "56.62"
                currency: HKD
                total_fee: "0.00"
                rails_fee: "0.00"
                fixed_fee: "0.00"
                tax: "0.00"
            quotation:
              id: rmt:quotation:772bf3415c7f7cfe3908ffd66614bad9
              status: success
              message: success
              agent:
                id: rmt:agent:tt1593064131m3a4lttyd7
                name: Standard Chartered Bank (Hong Kong) Limited
                description: Standard Chartered Bank (Hong Kong) Limited
              initial:
                amount: "10.00"
                currency: SGD
                country:
                  code: SGP
              converted:
                amount: "10.00"
                currency: SGD
                country:
                  code: SGP
              send:
                amount: "10.00"
                currency: SGD
                country:
                  code: SGP
              receive:
                amount: "56.62"
                currency: HKD
                country:
                  code: HKG
              total:
                amount: "29.90"
                currency: SGD
                country:
                  code: SGP
              fees:
                send:
                  currency: SGD
                  total: "19.90"
                  tax: "0.00"
                receive:
                  currency: HKD
                  total: "0.00"
                  tax: "0.00"
              calculation_mode: source
              routing_tag: "2734"
              channel_code: BD
              exchange_rate: "5.66"
              date:
                created_at: 2020-10-02 01:13:36
                expired_at: 2020-10-02 02:13:36
              subscription_pricing: false
            subscription_pricing: false
            required_fields: "[\"bank_account_number\",\"data\",\"document_name\"\
              ,\"document_reference_number\",\"document_type\",\"payout_agent\",\"\
              reason\",\"receiving_business_address1\",\"receiving_business_email\"\
              ,\"receiving_business_msisdn\",\"receiving_business_registered_name\"\
              ,\"sending_business_email\",\"sending_business_registered_name\"]"
            attachment_form:
              data:
                key_name: data
                field_key: data
                field_name: Attachment File
                type: string
                validation:
                  mime_type:
                  - application/pdf
                  - image/jpeg
                  - image/png
                  required: true
              document_name:
                key_name: document_name
                field_key: document_name
                field_name: Document Name
                type: string
                validation:
                  required: true
              document_type:
                key_name: document_type
                field_key: document_type
                field_name: Document Type
                type: string
                validation:
                  required: true
                values_supported:
                - name: Invoice
                  value: invoice
            beneficiary_form:
              sending_business_registered_name:
                key_name: sending_business_registered_name
                field_name: Registered Name
                field_key: sending_business_registered_name
                type: string
                validation:
                  max_length: 64
                  required: true
              sending_business_trading_name:
                key_name: sending_business_trading_name
                field_name: Trading Name
                field_key: sending_business_trading_name
                type: string
                validation:
                  max_length: 64
                  required: false
              sending_business_email:
                key_name: sending_business_email
                field_name: Email
                field_key: sending_business_email
                type: string
                validation:
                  max_length: 60
                  required: true
              sending_business_msisdn:
                key_name: sending_business_msisdn
                field_name: MSISDN
                field_key: sending_business_msisdn
                type: string
                validation:
                  max_length: 50
                  required: false
              sending_business_registration_number:
                key_name: sending_business_registration_number
                field_name: Registration Number
                field_key: sending_business_registration_number
                type: string
                validation:
                  max_length: 50
                  required: false
              sending_business_tax_id:
                key_name: sending_business_tax_id
                field_name: Tax ID
                field_key: sending_business_tax_id
                type: string
                validation:
                  max_length: 50
                  required: false
              sending_business_address1:
                key_name: sending_business_address1
                field_name: Address 1
                field_key: sending_business_address1
                type: string
                validation:
                  max_length: 80
                  required: false
              sending_business_address2:
                key_name: sending_business_address2
                field_name: Address 2
                field_key: sending_business_address2
                type: string
                validation:
                  max_length: 80
                  required: false
              sending_business_city:
                key_name: sending_business_city
                field_name: City
                field_key: sending_business_city
                type: string
                validation:
                  max_length: 64
                  required: false
              sending_business_state:
                key_name: sending_business_state
                field_name: State/Province
                field_key: sending_business_state
                type: string
                validation:
                  max_length: 64
                  required: false
              sending_business_zipcode:
                key_name: sending_business_zipcode
                field_name: Zipcode
                field_key: sending_business_zipcode
                type: string
                validation:
                  max_length: 15
                  required: false
              sending_business_country:
                key_name: sending_business_country
                field_name: Country Code
                field_key: sending_business_country
                type: string
                validation:
                  max_length: 3
                  required: false
              sending_business_representative_first_name:
                key_name: sending_business_representative_first_name
                field_name: Representative First Name
                field_key: sending_business_representative_first_name
                type: string
                validation:
                  max_length: 100
                  required: false
              sending_business_representative_middle_name:
                key_name: sending_business_representative_middle_name
                field_name: Representative Middle Name
                field_key: sending_business_representative_middle_name
                type: string
                validation:
                  max_length: 100
                  required: false
              sending_business_representative_last_name:
                key_name: sending_business_representative_last_name
                field_name: Representative Last Name
                field_key: sending_business_representative_last_name
                type: string
                validation:
                  max_length: 100
                  required: false
              sending_business_representative_last_name2:
                key_name: sending_business_representative_last_name2
                field_name: Representative Last Name2
                field_key: sending_business_representative_last_name2
                type: string
                validation:
                  max_length: 100
                  required: false
              sending_business_representative_native_name:
                key_name: sending_business_representative_native_name
                field_name: Representative Native Name
                field_key: sending_business_representative_native_name
                type: string
                validation:
                  max_length: 100
                  required: false
              sending_business_id_type:
                key_name: sending_business_id_type
                field_name: Representative Identification Type
                field_key: sending_business_id_type
                type: string
                validation:
                  max_length: 20
                  required: false
                values_supported:
                - name: NRIC
                  value: nric
                - name: Voter's photo ID card
                  value: voters_id
                - name: Driver's license
                  value: drivers_id
                - name: Valid passport
                  value: passport
                - name: PAN Card
                  value: pan
                - name: Family ration card
                  value: ration
                - name: Utility bill
                  value: u_bill
                - name: Shop license
                  value: s_license
                - name: Letter of introduction
                  value: loi
                - name: Aadhaar
                  value: aadhaar
                - name: EP FIN No.
                  value: epfin
                - name: S PASS No.
                  value: spass
                - name: Work permit
                  value: wp
                - name: Chứng minh nhân dân
                  value: cmnd
                - name: Military Id
                  value: military
                - name: Medicare Card
                  value: medicare_card
              sending_business_id_number:
                key_name: sending_business_id_number
                field_name: Representative Identification Number
                field_key: sending_business_id_number
                type: string
                validation:
                  max_length: 50
                  required: false
              sending_business_country_of_issue:
                key_name: sending_business_country_of_issue
                field_name: Representative Identification Country of Issue
                field_key: sending_business_country_of_issue
                type: string
                validation:
                  max_length: 3
                  required: false
              sending_business_issue_date:
                key_name: sending_business_issue_date
                field_name: Representative Identification Date of Issue
                field_key: sending_business_issue_date
                type: string
                validation:
                  max_length: 10
                  required: false
              sending_business_expire_date:
                key_name: sending_business_expire_date
                field_name: Representative Identification Date of Expiry
                field_key: sending_business_expire_date
                type: string
                validation:
                  max_length: 10
                  required: false
              sending_business_date_of_incorporation:
                key_name: sending_business_date_of_incorporation
                field_name: Date of Incorporation
                field_key: sending_business_date_of_incorporation
                type: string
                validation:
                  max_length: 10
                  required: false
              receiving_business_registered_name:
                key_name: receiving_business_registered_name
                field_name: Registered Name
                field_key: receiving_business_registered_name
                type: string
                validation:
                  max_length: 64
                  required: true
              receiving_business_trading_name:
                key_name: receiving_business_trading_name
                field_name: Trading Name
                field_key: receiving_business_trading_name
                type: string
                validation:
                  max_length: 64
                  required: false
              receiving_business_email:
                key_name: receiving_business_email
                field_name: Email
                field_key: receiving_business_email
                type: string
                validation:
                  max_length: 60
                  required: true
              receiving_business_msisdn:
                key_name: receiving_business_msisdn
                field_name: MSISDN
                field_key: receiving_business_msisdn
                type: string
                validation:
                  max_length: 50
                  required: true
              receiving_business_registration_number:
                key_name: receiving_business_registration_number
                field_name: Registration Number
                field_key: receiving_business_registration_number
                type: string
                validation:
                  max_length: 50
                  required: false
              receiving_business_tax_id:
                key_name: receiving_business_tax_id
                field_name: Tax ID
                field_key: receiving_business_tax_id
                type: string
                validation:
                  max_length: 50
                  required: false
              receiving_business_address1:
                key_name: receiving_business_address1
                field_name: Address 1
                field_key: receiving_business_address1
                type: string
                validation:
                  max_length: 80
                  required: true
              receiving_business_address2:
                key_name: receiving_business_address2
                field_name: Address 2
                field_key: receiving_business_address2
                type: string
                validation:
                  max_length: 80
                  required: false
              receiving_business_city:
                key_name: receiving_business_city
                field_name: City
                field_key: receiving_business_city
                type: string
                validation:
                  max_length: 64
                  required: false
              receiving_business_state:
                key_name: receiving_business_state
                field_name: State/Province
                field_key: receiving_business_state
                type: string
                validation:
                  max_length: 64
                  required: false
              receiving_business_zipcode:
                key_name: receiving_business_zipcode
                field_name: Zipcode
                field_key: receiving_business_zipcode
                type: string
                validation:
                  max_length: 15
                  required: false
              receiving_business_country:
                key_name: receiving_business_country
                field_name: Country Code
                field_key: receiving_business_country
                type: string
                validation:
                  max_length: 3
                  required: false
                values_supported:
                - name: Hong Kong
                  value: HKG
              receiving_business_representative_first_name:
                key_name: receiving_business_representative_first_name
                field_name: Representative First Name
                field_key: receiving_business_representative_first_name
                type: string
                validation:
                  max_length: 100
                  required: false
              receiving_business_representative_middle_name:
                key_name: receiving_business_representative_middle_name
                field_name: Representative Middle Name
                field_key: receiving_business_representative_middle_name
                type: string
                validation:
                  max_length: 100
                  required: false
              receiving_business_representative_last_name:
                key_name: receiving_business_representative_last_name
                field_name: Representative Last Name
                field_key: receiving_business_representative_last_name
                type: string
                validation:
                  max_length: 100
                  required: false
              receiving_business_representative_last_name2:
                key_name: receiving_business_representative_last_name2
                field_name: Representative Last Name2
                field_key: receiving_business_representative_last_name2
                type: string
                validation:
                  max_length: 100
                  required: false
              receiving_business_representative_native_name:
                key_name: receiving_business_representative_native_name
                field_name: Representative Native Name
                field_key: receiving_business_representative_native_name
                type: string
                validation:
                  max_length: 100
                  required: false
              receiving_business_id_type:
                key_name: receiving_business_id_type
                field_name: Representative Identification Type
                field_key: receiving_business_id_type
                type: string
                validation:
                  max_length: 20
                  required: false
                values_supported:
                - name: Passport
                  value: passport
                - name: National Identification Card
                  value: national_id
                - name: Driving License
                  value: driving_license
                - name: Social Security Card/Number
                  value: social_security
                - name: Tax Payer Identification Card/Number
                  value: tax_id
                - name: Senior Citizen Identification Card
                  value: senior_citizen_id
                - name: Birth Certificate
                  value: birth_certificate
                - name: Village Elder Identification Card
                  value: village_elder_id
                - name: Permanent Residency Identification Card
                  value: resident_card
                - name: Alien Registration Certificate/Card
                  value: alien_registration
                - name: PAN Card
                  value: pan_card
                - name: Voter's Identification Card
                  value: voters_id
                - name: Health Insurance Card/Number
                  value: health_card
                - name: Employer Identification Card
                  value: employer_id
                - name: Others not listed
                  value: other
              receiving_business_id_number:
                key_name: receiving_business_id_number
                field_name: Representative Identification Number
                field_key: receiving_business_id_number
                type: string
                validation:
                  max_length: 50
                  required: false
              receiving_business_country_of_issue:
                key_name: receiving_business_country_of_issue
                field_name: Representative Identification Country of Issue
                field_key: receiving_business_country_of_issue
                type: string
                validation:
                  max_length: 3
                  required: false
              receiving_business_issue_date:
                key_name: receiving_business_issue_date
                field_name: Representative Identification Date of Issue
                field_key: receiving_business_issue_date
                type: string
                validation:
                  max_length: 10
                  required: false
              receiving_business_expire_date:
                key_name: receiving_business_expire_date
                field_name: Representative Identification Date of Expiry
                field_key: receiving_business_expire_date
                type: string
                validation:
                  max_length: 10
                  required: false
              receiving_business_date_of_incorporation:
                key_name: receiving_business_date_of_incorporation
                field_name: Date of Incorporation
                field_key: receiving_business_date_of_incorporation
                type: string
                validation:
                  max_length: 10
                  required: false
              receive_currency:
                key_name: receive_currency
                field_name: Currency
                field_key: receive_currency
                type: string
                validation:
                  max_length: 3
                  required: false
                values_supported:
                - name: Hong Kong
                  value: HKD
              receive_country:
                key_name: receive_country
                field_name: Country Code
                field_key: receive_country
                type: string
                validation:
                  max_length: 3
                  required: false
                values_supported:
                - name: Hong Kong
                  value: HKG
              bank_name:
                key_name: bank_name
                field_name: Bank Name
                field_key: bank_name
                type: string
                validation:
                  required: false
              bank_code:
                key_name: bank_code
                field_name: Bank Code
                field_key: bank_code
                type: string
                validation:
                  required: false
              swift_code:
                key_name: swift_code
                field_name: Bank SWIFT
                field_key: swift_code
                type: string
                validation:
                  required: false
              bank_ifc_code:
                key_name: bank_ifc_code
                field_name: Bank IFSC
                field_key: bank_ifc_code
                type: string
                validation:
                  required: false
              bank_branch_name:
                key_name: bank_branch_name
                field_name: Bank Branch Name
                field_key: bank_branch_name
                type: string
                validation:
                  required: false
              bank_branch_code:
                key_name: bank_branch_code
                field_name: Bank Branch Code
                field_key: bank_branch_code
                type: string
                validation:
                  required: false
              bank_account_number:
                key_name: bank_account_number
                field_name: Bank Account Number
                field_key: bank_account_number
                type: string
                validation:
                  required: true
              bank_account_name:
                key_name: bank_account_name
                field_name: Bank Account Name
                field_key: bank_account_name
                type: string
                validation:
                  required: false
              document_reference_number:
                key_name: document_reference_number
                field_name: Document Reference Number
                field_key: document_reference_number
                type: string
                validation:
                  required: true
              payout_agent:
                key_name: payout_agent
                field_name: Payout Agent
                field_key: payout_agent
                type: string
                validation:
                  required: true
              reason:
                key_name: reason
                field_name: Reason
                field_key: reason
                type: string
                validation:
                  required: true
                values_supported:
                  FAMILY_SUPPORT: Family support
                  EDUCATION: Education
                  GIFT_AND_DONATION: Gift and other donations
                  MEDICAL_TREATMENT: Medical treatment
                  MAINTENANCE_EXPENSES: Maintenance or other expenses
                  TRAVEL: Travel
                  SMALL_VALUE_REMITTANCE: Small value remittance
                  LIBERALIZED_REMITTANCE: Liberalized remittance
                  CONSTRUCTION_EXPENSES: Construction expenses
                  HOTEL_ACCOMMODATION: Hotel accommodation
                  ADVERTISING_EXPENSES: Advertising and/or public relations related
                    expenses
                  ADVISORY_FEES: Fees for advisory or consulting service
                  BUSINESS_INSURANCE: Business related insurance payment
                  INSURANCE_CLAIMS: Insurance claims payment
                  DELIVERY_FEES: Delivery fees
                  EXPORTED_GOODS: Payments for exported goods
                  SERVICE_CHARGES: Payment for services
                  LOAN_PAYMENT: Payment of loans
                  OFFICE_EXPENSES: Office expenses
                  PROPERTY_PURCHASE: Residential property purchase
                  PROPERTY_RENTAL: Property rental payment
                  ROYALTY_FEES: "Royalty, trademark, patent and copyright fees"
                  SHARES_INVESTMENT: Investment in shares
                  FUND_INVESTMENT: Fund investment
                  TAX_PAYMENT: Tax payment
                  TRANSPORTATION_FEES: Transportation fees
                  UTILITY_BILLS: Utility bills
                  PERSONAL_TRANSFER: Personal transfer
                  SALARY_PAYMENT: Payment of salary
                  OTHER_FEES: "Broker, commitment, guarantee and other fees"
                  OTHER: Other purposes
              source_of_income:
                key_name: source_of_income
                field_name: Source of Income
                field_key: source_of_income
                type: string
                validation:
                  required: false
                values_supported:
                - name: Cash
                  value: cash
                - name: Business
                  value: business
                - name: Gift
                  value: gift
                - name: Savings
                  value: savings
                - name: Salary
                  value: salary
                - name: Inheritance
                  value: inheritance
                - name: Loan
                  value: loan
                - name: Lottery/Windfall
                  value: lottery/windfall
                - name: Investment Gain
                  value: investment gain
                - name: Rental Income
                  value: rental income
                - name: Others
                  value: others
    Remittance_consumer_receiver.v1:
      title: remittance_consumer_receiver
      type: object
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        mobile:
          type: string
    Remittance_corporate_receiver.v1:
      title: remittance_corporate_receiver
      type: object
      properties:
        beneficiary_hash_id:
          type: string
        sending_business:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_sending_business'
        receiving_business:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_receiving_business'
    Remittance_countries.v1:
      title: remittance_countries
      type: object
      properties:
        countries:
          type: array
          description: Array of countries supported in the program
          items:
            $ref: Remittance_countries.v1_countries
        count:
          $ref: '#/components/schemas/Remittance_countries.v1_count'
      example:
        count:
          total: 0
        countries:
        - code: code
          name: name
          currency:
            code: code
            numeric: numeric
          agents:
          - ""
          - ""
        - code: code
          name: name
          currency:
            code: code
            numeric: numeric
          agents:
          - ""
          - ""
      x-examples:
        Example:
          countries:
          - name: Indonesia
            code: IDN
            currency:
              code: IDR
              numeric: "360"
            agents:
            - c23249285ba8e54f69fa5552c4803583
            - 75b0c98b231fbe4fbd27e954016254de
          - name: Philippines
            code: PHL
            currency:
              code: PHP
              numeric: "608"
            agents:
            - 336094e1ace3068ecfd2db096422e1d6
          count:
            total: 2
    Remittance_details.v1:
      title: remittance_details
      type: object
      properties:
        ref_id:
          type: string
          description: Remittance Hash ID
        type:
          type: string
        client_key:
          type: string
        status_code:
          type: string
        status_text:
          type: string
        remarks:
          type: string
        date:
          type: string
        date_expiry:
          type: string
        document_reference_number:
          type: string
          description: Document Reference; will only show if has value
        client_ref_id:
          type: string
          description: Client generated reference; will only show if has value
        transaction_code:
          type: string
        sender:
          $ref: '#/components/schemas/Remittance_details.v1_sender'
        receiver:
          type: object
          anyOf:
          - $ref: '#/components/schemas/Remittance_consumer_receiver.v1'
          - $ref: '#/components/schemas/Remittance_corporate_receiver.v1'
        details:
          $ref: '#/components/schemas/Remittance_details.v1_details'
        confirm:
          type: string
        attachments:
          $ref: '#/components/schemas/Remittance_details.v1_attachments'
      example:
        ref_id: ref_id
        date: date
        transaction_code: transaction_code
        status_code: status_code
        attachments:
          method: method
          rel: rel
          href: href
        receiver: ""
        type: type
        client_ref_id: client_ref_id
        confirm: confirm
        client_key: client_key
        sender:
          mobile: mobile
          last_name: last_name
          middle_name: middle_name
          first_name: first_name
        details:
          routing_param: routing_param
          fees: fees
          actual_provider_amount_to_send: actual_provider_amount_to_send
          amount_details:
            send_details:
              amount: amount
              subscription_pricing: true
              total_amount: total_amount
              total_fee: total_fee
              fixed_fee: fixed_fee
              currency: currency
              tax: tax
              rails_fee: rails_fee
            receive_amounts:
              amount: amount
              total_amount: total_amount
              total_fee: total_fee
              fixed_fee: fixed_fee
              currency: currency
              tax: tax
              rails_fee: rails_fee
          receive_currency: receive_currency
          calculation_mode: calculation_mode
          provider_amount_fee_ccy: provider_amount_fee_ccy
          send_amount_provided_by_rails_ccy: send_amount_provided_by_rails_ccy
          amount_sent: amount_sent
          amount_to_receive: amount_to_receive
          payout_agent: payout_agent
          bank_branch_name: bank_branch_name
          provider: provider
          delivery_method: delivery_method
          customer_fx_percentage: customer_fx_percentage
          bank_name: bank_name
          provider_amount_to_send_ccy: provider_amount_to_send_ccy
          actual_provider_amount_to_send_ccy: actual_provider_amount_to_send_ccy
          transaction_id: transaction_id
          transaction_code: transaction_code
          bank_code: bank_code
          exchange_rate: exchange_rate
          provider_amount_fee: provider_amount_fee
          amount_after_fx_percentage_ccy: amount_after_fx_percentage_ccy
          send_amount_provided_by_rails: send_amount_provided_by_rails
          cross_currency_rates: cross_currency_rates
          amount_before_fx_percentage: amount_before_fx_percentage
          amount_after_fx_percentage: amount_after_fx_percentage
          provider_amount_to_send: provider_amount_to_send
          send_currency: send_currency
          amount_before_fx_percentage_ccy: amount_before_fx_percentage_ccy
          bank_branch_code: bank_branch_code
          amount_deducted: amount_deducted
          receive_country: receive_country
        status_text: status_text
        document_reference_number: document_reference_number
        remarks: remarks
        date_expiry: date_expiry
    Remittance_fees.v1:
      title: remittance_fees
      type: object
      properties:
        fees:
          type: array
          items:
            $ref: Remittance_fees.v1_fees
      example:
        fees:
        - pricings_id: pricings_id
          routing_param: routing_param
          payment_mode: payment_mode
          full_details:
            payment_currencies: payment_currencies
            address: address
            main_time_table: main_time_table
            beneficiary_type: consumer
            agent_name: agent_name
            city: city
            telephone_2: telephone_2
            telephone_1: telephone_1
            city_code: city_code
            version: version
            payment_mode_description: Mobile Payment
            country_code: country_code
            required_fields: required_fields
            payer_code: payer_code
            secondary_time_table: secondary_time_table
            required_documents: required_documents
            state: state
            fax: fax
            hash_id: hash_id
          provider_exchange_rate: provider_exchange_rate
          receive_currency: receive_currency
          exchange_rate: 0.8008281904610115
          calculation_mode: calculation_mode
          routing_type: routing_type
          partner_name: partner_name
          precision: precision
          fx_markup_percentage: fx_markup_percentage
          reverse_currency_fx_rate: 1.4658129805029452
          fixed_fee: fixed_fee
          payment_mode_description: payment_mode_description
          payer_details:
            rounding_decimal_number: rounding_decimal_number
            partner_alpha_code: partner_alpha_code
            code: code
            partner_code: partner_code
            display_name: display_name
            version: version
            partner_display_name: partner_display_name
          send_currency: send_currency
          cross_rate_details:
            from_value: from_value
            to_value: to_value
            id: id
          currency_fx_rate: 6.027456183070403
          provider_currency: provider_currency
          id: id
          fx_rate: fx_rate
          receive_country: receive_country
        - pricings_id: pricings_id
          routing_param: routing_param
          payment_mode: payment_mode
          full_details:
            payment_currencies: payment_currencies
            address: address
            main_time_table: main_time_table
            beneficiary_type: consumer
            agent_name: agent_name
            city: city
            telephone_2: telephone_2
            telephone_1: telephone_1
            city_code: city_code
            version: version
            payment_mode_description: Mobile Payment
            country_code: country_code
            required_fields: required_fields
            payer_code: payer_code
            secondary_time_table: secondary_time_table
            required_documents: required_documents
            state: state
            fax: fax
            hash_id: hash_id
          provider_exchange_rate: provider_exchange_rate
          receive_currency: receive_currency
          exchange_rate: 0.8008281904610115
          calculation_mode: calculation_mode
          routing_type: routing_type
          partner_name: partner_name
          precision: precision
          fx_markup_percentage: fx_markup_percentage
          reverse_currency_fx_rate: 1.4658129805029452
          fixed_fee: fixed_fee
          payment_mode_description: payment_mode_description
          payer_details:
            rounding_decimal_number: rounding_decimal_number
            partner_alpha_code: partner_alpha_code
            code: code
            partner_code: partner_code
            display_name: display_name
            version: version
            partner_display_name: partner_display_name
          send_currency: send_currency
          cross_rate_details:
            from_value: from_value
            to_value: to_value
            id: id
          currency_fx_rate: 6.027456183070403
          provider_currency: provider_currency
          id: id
          fx_rate: fx_rate
          receive_country: receive_country
      x-examples:
        remittance-fees-example:
          fees:
          - id: rmt:agent:tt1593064131m3a4lttyd7
            calculation_mode: source
            payment_mode: BA
            payment_mode_description: Bank Deposit
            routing_param: "2734"
            routing_type: DESTINATION
            provider_currency: SGD
            send_currency: SGD
            receive_country: HKG
            receive_currency: HKD
            partner_name: Standard Chartered Bank (Hong Kong) Limited
            precision: 2
            exchange_rate: 5.6604
            fixed_fee: "19.90000000"
            payer_details:
              code: "0"
              display_name: BankAccount - HKG - HKD
              rounding_decimal_number: "2"
              version: V2
            full_details:
              hash_id: rmt:agent:tt1593064131m3a4lttyd7
              country_code: HKG
              payment_mode_description: Bank Account
              payer_code: "2734"
              payment_currencies: "20"
              version: V2
              required_fields: "[\"address_1\",\"address_2\",\"bank_account_number\"\
                ,\"bank_branch_name\",\"city\",\"country\",\"first_name\",\"last_name\"\
                ,\"reason\",\"receive_mobile_number\",\"state\",\"zipcode\"]"
              beneficiary_type: corporate
              agent_name: Standard Chartered Bank (Hong Kong) Limited
              required_documents: "[\"invoice\"]"
            provider_exchange_rate: "5.6604"
            cross_rate_details:
              id: "28"
              to_value: "1.000000"
              from_value: "1.000000"
            fx_markup_percentage: "0.00000000"
            fx_rate: "0.00000000"
            pricings_id: "9041"
            currency_fx_rate: 1
            reverse_currency_fx_rate: 1
          count:
            total: 14
          link:
          - rel: next
            href: https://beta-api.mmvpay.com/sgmmremt/v1/users/wallets/funds/transfers/overseas/transferto/fees/1/1?receive_country=HKG&delivery_method=BA
            method: GET
    Remittance_payment_modes.v1:
      title: remittance_payment_modes
      type: object
      properties:
        modes:
          type: array
          description: Array of payment channel/modes supported in the system
          items:
            $ref: Remittance_payment_modes.v1_modes
        count:
          $ref: '#/components/schemas/Remittance_payment_modes.v1_count'
      example:
        modes:
        - mode: mode
          name: name
          providers:
          - code: code
            name: name
            provider_code: provider_code
            countries:
            - ""
            - ""
          - code: code
            name: name
            provider_code: provider_code
            countries:
            - ""
            - ""
        - mode: mode
          name: name
          providers:
          - code: code
            name: name
            provider_code: provider_code
            countries:
            - ""
            - ""
          - code: code
            name: name
            provider_code: provider_code
            countries:
            - ""
            - ""
        count:
          total: 0
      x-examples:
        Example:
          modes:
          - name: Cash Pickup
            mode: CASH_PICKUP
            providers:
            - name: transferto
              code: OF
              provider_code: OF
              countries:
              - PHL
              - KHM
              - BGD
              - NPL
            - name: aub
              code: OF
              provider_code: EWALLET
              countries:
              - PHL
          - name: Bank Deposit
            mode: BANK_DEPOSIT
            providers:
            - name: transferto
              code: BA
              provider_code: BA
              countries:
              - THA
              - IDN
              - PHL
              - BGD
              - MYS
              - VNM
              - HKG
          count:
            total: 2
    Remittance_providers.v1:
      title: remittance_providers
      type: object
      properties:
        types:
          type: array
          items:
            $ref: Remittance_providers.v1_types
        count:
          $ref: '#/components/schemas/Remittance_providers.v1_count'
      example:
        types:
        - code: code
          name: name
          description: description
          details: details
          links:
          - method: method
            rel: rel
            href: href
          - method: method
            rel: rel
            href: href
        - code: code
          name: name
          description: description
          details: details
          links:
          - method: method
            rel: rel
            href: href
          - method: method
            rel: rel
            href: href
        count:
          total: 0.8008281904610115
      x-examples:
        Example of providers:
          types:
          - code: transefrto
            name: Transferto
            description: TransferTo Mobile Money Hub
            details:
              security_token: xxxx
              expires: 1509428425
            links:
            - rel: fees
              href: https://beta-api.mmvpay.com/sgmcrpo/v1/users/wallets/funds/transfers/overseas/transferto/fees/10/0
              method: GET
          - code: doku
            name: Doku
            description: Doku
            links:
            - rel: fees
              href: https://beta-api.mmvpay.com/sgmcrpo/v1/users/wallets/funds/transfers/overseas/transferto/doku/10/0
              method: GET
    Remittance_quotation.v1:
      title: remittance_quotation
      required:
      - calculation_mode
      - date_created
      - date_expiry
      - exchange_rate
      - external_id
      - fee
      - id
      - initial
      - payout_agent
      - provider_exchange_rate
      - quotation_id
      - receive
      - send
      - status
      - subscription_pricing
      - transaction_type
      type: object
      properties:
        id:
          type: string
          description: Quotation ID from Remit Service
        external_id:
          type: string
          description: External ID from Rails
        quotation_id:
          type: string
          description: Quotation ID from Rails
        payout_agent:
          type: string
          description: Payout Agent Identifier
        calculation_mode:
          type: string
          description: Calculation Mode
        transaction_type:
          type: string
          description: Transaction Type - C2C or B2B
        initial:
          $ref: '#/components/schemas/Amount_details.v1'
        send:
          $ref: '#/components/schemas/Amount_details.v1'
        receive:
          $ref: '#/components/schemas/Amount_details.v1'
        fee:
          $ref: '#/components/schemas/Amount_details.v1'
        exchange_rate:
          type: string
          description: Calculated Exchange Rate after fx markup
        provider_exchange_rate:
          type: string
          description: Exchange Rate from Rails
        status:
          type: string
          description: Quotation Status
        date_expiry:
          type: string
          description: Quotation Expiry (after an hour it was created for T2)
        date_created:
          type: string
          description: Quotation Date Created
        subscription_pricing:
          type: boolean
          description: "Set to true if subscription pricing was applied, else false"
      example:
        receive: null
        provider_exchange_rate: provider_exchange_rate
        exchange_rate: exchange_rate
        quotation_id: quotation_id
        calculation_mode: calculation_mode
        initial:
          country:
            code: code
          amount: amount
          currency: currency
        date_created: date_created
        fee: null
        external_id: external_id
        transaction_type: transaction_type
        payout_agent: payout_agent
        subscription_pricing: true
        id: id
        send: null
        status: status
        date_expiry: date_expiry
      x-examples: {}
    Remittance_send.v1:
      title: remittance_send
      type: object
      properties:
        status:
          type: string
        ref_id:
          type: string
        transfer_details:
          $ref: '#/components/schemas/Remittance_send.v1_transfer_details'
        quotation:
          $ref: '#/components/schemas/Remittance_quotation.v1'
        date_added:
          type: string
        date_last_updated:
          type: string
        confirm:
          type: string
          enum:
          - require
          - skip
        links:
          type: array
          items:
            $ref: '#/components/schemas/Transaction_links.v1'
      example:
        ref_id: ref_id
        confirm: require
        date_added: date_added
        transfer_details:
          provider_exchange_rate: provider_exchange_rate
          amount_details:
            send_details:
              amount: amount
              subscription_pricing: subscription_pricing
              total_amount: total_amount
              total_fee: total_fee
              fixed_fee: fixed_fee
              currency: currency
              tax: tax
              rails_fee: rails_fee
            receive_amounts: null
          receive_currency: receive_currency
          amount_to_be_deducted: amount_to_be_deducted
          exchange_rate: exchange_rate
          calculation_mode: calculation_mode
          amount_to_send: amount_to_send
          amount_to_receive_currency: amount_to_receive_currency
          fixed_fee: fixed_fee
          initial_amount: initial_amount
          amount_to_send_currency: amount_to_send_currency
          reference_number: reference_number
          amount_to_receive: amount_to_receive
          total_amount: total_amount
          commission: commission
        links:
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        quotation:
          receive: null
          provider_exchange_rate: provider_exchange_rate
          exchange_rate: exchange_rate
          quotation_id: quotation_id
          calculation_mode: calculation_mode
          initial:
            country:
              code: code
            amount: amount
            currency: currency
          date_created: date_created
          fee: null
          external_id: external_id
          transaction_type: transaction_type
          payout_agent: payout_agent
          subscription_pricing: true
          id: id
          send: null
          status: status
          date_expiry: date_expiry
        status: status
        date_last_updated: date_last_updated
      x-examples:
        remittance-send-example:
          status: success
          ref_id: ST2202010022cd9041fR223RJMY9KPMS
          transfer_details:
            calculation_mode: source
            initial_amount: "10.00"
            reference_number: rmt:remittance:1ab91637bf39cea91ce143afe8de2c5b
            amount_to_send: "10.00"
            amount_to_send_currency: SGD
            amount_to_receive: "56.62"
            amount_to_receive_currency: HKD
            receive_currency: HKD
            provider_exchange_rate: "5.66"
            exchange_rate: "5.662"
            fixed_fee: "19.90"
            commission: "19.90"
            total_amount: "29.90"
            amount_to_be_deducted: "29.90"
            amount_details:
              send_details:
                total_amount: "29.90"
                amount: "10.00"
                currency: SGD
                total_fee: "19.90"
                rails_fee: "0.00"
                fixed_fee: "19.90"
                tax: "0.00"
                subscription_pricing: false
              receive_amounts:
                total_amount: "56.62"
                amount: "56.62"
                currency: HKD
                total_fee: "0.00"
                rails_fee: "0.00"
                fixed_fee: "0.00"
                tax: "0.00"
          quotation:
            id: rmt:quotation:035f9f6c29794bf5a2b66e1779b38c03
            external_id: "1601574891977"
            quotation_id: "4987115"
            payout_agent: rmt:agent:tt1593064131m3a4lttyd7
            calculation_mode: source
            transaction_type: B2B
            initial:
              amount: "10.00"
              currency: SGD
              country:
                code: SGP
            send:
              amount: "10.00"
              currency: SGD
              country:
                code: SGP
            receive:
              amount: "56.62"
              currency: HKD
              country:
                code: HKG
            fee:
              amount: "19.90"
              currency: SGD
              country:
                code: SGP
            exchange_rate: "5.66"
            status: success
            date_expiry: 2020-10-02 02:54:52
            date_created: 2020-10-02 01:54:52
            subscription_pricing: false
          date_added: 2020-10-02 01:54:51
          date_last_updated: 2020-10-02 01:54:51
          confirm: require
          links:
          - rel: oauth.consumer.funds.transfers.overseas
            href: https://beta-api.mmvpay.com/sgmmremt/v1/oauth/consumer/funds/transfers/overseas
            method: POST
          - rel: oauth.consumer.funds.transfers.overseas.attachments
            href: https://beta-api.mmvpay.com/sgmmremt/v1/oauth/consumer/funds/transfers/overseas/ST2202010022cd9041fR223RJMY9KPMS/attachments
            method: POST
    Remittance_send_request.v1:
      title: remittance_send_request
      type: object
      properties:
        agent_id:
          type: string
          description: Payout Agent ID; required on the new remittance endpoint (where
            no rails is provided)
        calculation_mode:
          type: string
          description: Determines whether the amount would be the source or receive
            amount.
          enum:
          - source
          - receive
        transaction_type:
          type: string
          description: Transaction Type
          enum:
          - C2C
          - B2B
        amount:
          type: string
          description: Transfer amount
        send_currency:
          type: string
          description: Send Amount Currency Code
        receive_currency:
          type: string
          description: Receive Amount Currency Code
        receive_country:
          type: string
          description: Receiving Country
        payment_mode:
          type: string
          description: Payment Mode
        routing_type:
          type: string
          description: Routing Type
        routing_param:
          type: string
          description: Routing Param
        quotation_id:
          type: string
          description: Quotation ID
        payout_agent:
          type: string
          description: Payout Agent ID
        hash_id:
          type: string
          description: User ID of the sender
        first_name:
          type: string
          description: Receiver First Name
        middle_name:
          type: string
          description: Receiver Middle Name
        last_name:
          type: string
          description: Receiver Last Name
        chinese_name:
          type: string
          description: Receiver Chinese Name
        receive_mobile_number:
          type: string
          description: Receiver Mobile Number
        receive_gender:
          type: string
          description: Receiver Gender
        id_number:
          type: string
          description: Receiver ID Number
        id_type:
          type: string
          description: Receiver ID Type
        occupation:
          type: string
          description: Receiver Occupation
        address_1:
          type: string
          description: Receiver Address 1
        address_2:
          type: string
          description: Receiver Address 2
        birth_date:
          type: string
          description: Receiver birth date
        city:
          type: string
          description: Receiver Address City
        state:
          type: string
          description: Receiver Address State
        country:
          type: string
          description: Receiver Address Country
        nationality:
          type: string
          description: Receiver Nationality
        zipcode:
          type: string
          description: Receiver Zipcode
        beneficiary_hash_id:
          type: string
          description: Beneficiary Hash ID
        receiving_business_registered_name:
          type: string
          description: Receiving Business Registered Name
        receiving_business_trading_name:
          type: string
          description: Receiving Business Trading Name
        receiving_business_email:
          type: string
          description: Receiving Business Email
        receiving_business_msisdn:
          type: string
          description: Receiving Business MSISDN
        receiving_business_registration_number:
          type: string
          description: Receiving Business Registration Number
        receiving_business_tax_id:
          type: string
          description: Receiving Business Tax ID
        receiving_business_address1:
          type: string
          description: Receiving Business Address 1
        receiving_business_address2:
          type: string
          description: Receiving Business Address 2
        receiving_business_city:
          type: string
          description: Receiving Business Address City
        receiving_business_state:
          type: string
          description: Receiving Business Address State
        receiving_business_country:
          type: string
          description: Receiving Business Address Country
        receiving_business_representative_first_name:
          type: string
          description: Receiving Business Representative First Name
        receiving_business_representative_middle_name:
          type: string
          description: Receiving Business Representative Middle Name
        receiving_business_representative_last_name:
          type: string
          description: Receiving Business Representative Last Name
        receiving_business_representative_last_name2:
          type: string
          description: Receiving Business Representative Last Name 2
        receiving_business_representative_native_name:
          type: string
          description: Receiving Business Representative Native Name
        receiving_business_id_type:
          type: string
          description: Receiving Business Representative ID Type
        receiving_business_id_number:
          type: string
          description: Receiving Business Representative ID Number
        receiving_business_country_of_issue:
          type: string
          description: Receiving Business Representative ID Country of Issue
        receiving_business_issue_date:
          type: string
          description: Receiving Business Representative ID Issue Date
        receiving_business_expire_date:
          type: string
          description: Receiving Business Representative ID Expiry Date
        receiving_business_date_of_incorporation:
          type: string
          description: Receiving Business Date of Incorporation
        sending_business_hash_id:
          type: string
          description: Sending Business Hash ID
        sending_business_registered_name:
          type: string
          description: Sending Business Registered Name
        sending_business_trading_name:
          type: string
          description: Sending Business Trading Name
        sending_business_email:
          type: string
          description: Sending Business Email
        sending_business_msisdn:
          type: string
          description: Sending Business MSISDN
        sending_business_registration_number:
          type: string
          description: Sending Business Registration Number
        sending_business_tax_id:
          type: string
          description: Sending Business Tax ID
        sending_business_address1:
          type: string
          description: Sending Business Address 1
        sending_business_address2:
          type: string
          description: Sending Business Address 2
        sending_business_city:
          type: string
          description: Sending Business Address City
        sending_business_state:
          type: string
          description: Sending Business Address State
        sending_business_zipcode:
          type: string
          description: Sending Business Address Zipcode
        sending_business_country:
          type: string
          description: Sending Business Address Country
        sending_business_representative_first_name:
          type: string
          description: Sending Business Representative First Name
        sending_business_representative_middle_name:
          type: string
          description: Sending Business Representative Middle Name
        sending_business_representative_last_name:
          type: string
          description: Sending Business Representative Last Name
        sending_business_representative_last_name2:
          type: string
          description: Sending Business Representative Last Name 2
        sending_business_representative_native_name:
          type: string
          description: Sending Business Representative Native Name
        sending_business_id_type:
          type: string
          description: Sending Business Representative ID Type
        sending_business_id_number:
          type: string
          description: Sending Business Representative ID Number
        sending_business_country_of_issue:
          type: string
          description: Sending Business Representative ID Country of Issue
        sending_business_issue_date:
          type: string
          description: Sending Business Representative ID Issue Date
        sending_business_expire_date:
          type: string
          description: Sending Business Representative ID Expiry Date
        sending_business_date_of_incorporation:
          type: string
          description: Sending Business Date of Incoporation
        document_reference_number:
          type: string
          description: Document Reference Number
        swift_code:
          type: string
          description: Swift code
        bank_ifc_code:
          type: string
          description: Indian Bank IFC Code
        bank_branch_name:
          type: string
          description: Branch name of the recipient bank account
        bank_branch_code:
          type: string
          description: Branch code of the recipient bank account
        bank_account_number:
          type: string
          description: Bank account number if paying via bank
        cbc_bank_name:
          type: string
          description: CBC bank name of the recipient bank account
        bpi_bank_name:
          type: string
          description: BPI Bank name of the recipient bank account
        partner_name:
          type: string
          description: Partner name of the service provider
        source_of_income:
          type: string
          description: Source of income
        relationship:
          type: string
          description: Relationship with the Receiver
        reason:
          type: string
          description: Reason
        sender_reference:
          type: string
          description: Sender reference
        additional_information:
          type: string
          description: Additional Information
      description: |-
        Available parameters supported for creating remittance transactions.

        All supported parameters will be based on the beneficiary/sender form from the calculate endpoint (/test)
    Remittance_test_request.v1:
      title: remittance_test_request
      type: object
      properties:
        agent_id:
          type: string
          description: "Retrieved from the list of supported payout agents for the\
            \ program. \nBased on the agent id, we should be able to get the following\
            \ details: \n- provider\n- receiving agent type (consumer or corporate)\n\
            - payment_mode\n- routing param\n- routing type\n- send currency\n- receive\
            \ currency\n- receive country\n"
        calculation_mode:
          type: string
          description: "Determines whether the amount would be the source or receive\
            \ amount\nAcceptable values:\n- source\n- receive   \n"
        amount:
          type: string
          description: "Amount to send or calculate. \n- The amount precision should\
            \ be in sync on the precision that is supported for the country.\n- For\
            \ example, you send an SGD currency, the amount should have up to 2 decimal\
            \ places only\n"
    Standing_instruction.v1:
      title: standing_instruction
      type: object
      properties:
        id:
          type: string
          format: uuid
        bank_account_id:
          type: string
          format: uuid
        number:
          type: number
          format: int64
        maximum_debitable_amount:
          type: string
        date_application:
          type: string
          example: 2020-07-01 12:00:00
        date_expiry:
          type: string
          example: 2020-12-01
        consent_details:
          $ref: '#/components/schemas/Consent.v1'
        status:
          type: string
          enum:
          - pending
          - under-review
          - approved
          - expired
          - revoked
          - disabled
      example:
        date_application: 2020-07-01 12:00:00
        bank_account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        number: 0.8008281904610115
        maximum_debitable_amount: maximum_debitable_amount
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        date_expiry: 2020-12-01
        consent_details:
          full_name: full_name
          numbers: numbers
          sign: sign
        status: pending
      x-examples:
        example-1:
        - number: 1234567890
          maximum_debitable_amount: 10000
          date_application: 2020-03-25 14:30:56
          date_expiry: 2020-03-25
          status: approved
    Transaction_categories_rules_request.v1:
      title: transaction_categories_rules_request
      required:
      - event_codes
      type: object
      properties:
        event_codes:
          type: string
          description: Event code from event_codes table
        channel:
          type: string
          description: "Transcation channel like atm,pos,ecom"
        acquiring_country_code:
          type: string
          description: 3 Digits iso defined country code number like 356
        currency:
          type: string
          description: currency code like USD
        network:
          type: string
          description: "Transcation network like visa,mastercard"
        terminal_id:
          type: string
          description: terminal_id defined in transcation rules table
        merchant_id:
          type: string
          description: merchant_id defined in transcation rules table
        pos_entry_mode_value:
          type: string
          description: Point of service entry mode like MANUALLY_KEYED
        pp:
          type: string
          description: pp value that goes into pp cosnumer table
        merchant_category_code:
          type: string
          description: merchant_category_code defined in transcation rules table
      example:
        pp: pp
        merchant_category_code: merchant_category_code
        channel: channel
        acquiring_country_code: acquiring_country_code
        currency: currency
        pos_entry_mode_value: pos_entry_mode_value
        merchant_id: merchant_id
        event_codes: event_codes
        terminal_id: terminal_id
        network: network
      x-examples:
        example-1:
          event_codes: MONEY_TRANSFER_CREDIT
          channel: POS
          acquiring_country_code: "356"
          currency: INR
          network: Master
          terminal_id: "123"
          merchant_id: "123"
          pos_entry_mode_value: MANUALLY_KEYED
          pp: DBS
          merchant_category_code: "6450"
    Transaction_categories_rules_response.v1:
      title: transaction_categories_rules_response
      type: object
      properties:
        id:
          type: string
          description: transcation category hash id from transcation_categories
        enable:
          type: boolean
          description: transcation category is enable or disbale
        rules:
          $ref: '#/components/schemas/Transaction_categories_rules_request.v1'
      example:
        enable: true
        rules:
          pp: pp
          merchant_category_code: merchant_category_code
          channel: channel
          acquiring_country_code: acquiring_country_code
          currency: currency
          pos_entry_mode_value: pos_entry_mode_value
          merchant_id: merchant_id
          event_codes: event_codes
          terminal_id: terminal_id
          network: network
        id: id
      x-examples:
        example-1:
          id: string
          enable: true
          rules:
            event_codes: MONEY_TRANSFER_CREDIT
            channel: POS
            acquiring_country_code: "356"
            terminal_id: "123"
            merchant_id: "123"
            network: Master
            pos_entry_mode_value: MANUALLY_KEYED
            pp: DBS
            currency: INR
            mcc: "6450"
    Transaction_funds_credit.v1:
      title: transaction_funds_credit
      type: object
      allOf:
      - properties:
          charge_fee:
            type: string
          fund_category_id:
            type: string
          is_custom_ref_id:
            type: string
          name:
            type: string
          reason:
            type: string
          transaction_currency:
            type: string
          tt:
            type: string
    Transaction_funds_debit.v1:
      title: transaction_funds_debit
      type: object
      allOf:
      - properties:
          charge_fee:
            type: string
          fund_category_id:
            type: string
          is_custom_ref_id:
            type: string
          name:
            type: string
          reason:
            type: string
          transaction_currency:
            type: string
          tt:
            type: string
    Transaction_funds_debitreversal.v1:
      title: transaction_funds_debitreversal
      type: object
      allOf:
      - properties:
          charge_fee:
            type: string
          fund_category_id:
            type: string
          is_custom_ref_id:
            type: string
          merchant_category_code:
            type: string
          merchant_location:
            type: string
          merchant_name:
            type: string
          name:
            type: string
          original_transaction_amount:
            type: string
          original_transaction_currency:
            type: string
          partial_transaction_ref_id:
            type: string
          reason:
            type: string
          terminal_id:
            type: string
          total_fees_charged:
            type: string
          total_fees_currency:
            type: string
          total_transaction_amount:
            type: string
          total_transaction_currency:
            type: string
          transaction_currency:
            type: string
          transaction_mode:
            type: string
          transaction_network:
            type: string
          tt:
            type: string
          additional_details:
            $ref: '#/components/schemas/Transaction_funds_debitreversal.v1_additional_details'
    Transaction_funds_openloop.v1:
      title: transaction_funds_openloop
      type: object
      allOf:
      - properties:
          name:
            type: string
          transaction_currency:
            type: string
          merchant_name:
            type: string
          merchant_category_code:
            type: string
          merchant_location:
            type: string
          terminal_id:
            type: string
          original_transaction_currency:
            type: string
          original_transaction_amount:
            type: string
          total_fees_charged:
            type: string
          total_fees_currency:
            type: string
          total_transaction_amount:
            type: string
          total_transaction_currency:
            type: string
          transaction_mode:
            type: string
          transaction_network:
            type: string
          additional_details:
            $ref: Transaction_funds_debitreversal.v1_additional_details
    Transaction_funds_openloopreversal.v1:
      title: transaction_funds_openloopreversal
      type: object
      allOf:
      - properties:
          name:
            type: string
          transaction_currency:
            type: string
          merchant_name:
            type: string
          merchant_category_code:
            type: string
          merchant_location:
            type: string
          terminal_id:
            type: string
          original_transaction_currency:
            type: string
          original_transaction_amount:
            type: string
          total_fees_charged:
            type: string
          total_fees_currency:
            type: string
          total_transaction_amount:
            type: string
          total_transaction_currency:
            type: string
          transaction_mode:
            type: string
          transaction_network:
            type: string
          additional_details:
            $ref: Transaction_funds_debitreversal.v1_additional_details
          date_reversed:
            type: string
            format: date-time
    Transaction_funds_refund.v1:
      title: transaction_funds_refund
      type: object
      allOf:
      - properties:
          charge_fee:
            type: string
          fund_category_id:
            type: string
          is_custom_ref_id:
            type: string
          name:
            type: string
          refund_type:
            type: string
          transaction_currency:
            type: string
          tt:
            type: string
    Transaction_funds_transfer.v1:
      title: transaction_funds_transfer
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the transaction
        sender:
          $ref: '#/components/schemas/Transaction_funds_transfer.v1_sender'
        recipient:
          $ref: Transaction_funds_transfer.v1_sender
        message:
          type: string
          description: Message passed for the transaction
        status:
          type: string
          enum:
          - active
        amount:
          type: decimal
        currency:
          type: string
        date:
          $ref: '#/components/schemas/Transaction_funds_transfer.v1_date'
      example:
        date:
          created: 2000-01-23T04:56:07.000+00:00
          expiry: 2000-01-23T04:56:07.000+00:00
        amount: ""
        sender:
          sms: sms
          id: id
          type: sms
        recipient:
          sms: sms
          id: id
          type: sms
        currency: currency
        id: id
        message: message
        status: active
    Transaction_links.v1:
      title: transaction_links
      type: object
      properties:
        rel:
          type: string
          enum:
          - prev
          - next
        href:
          type: string
          format: uri
        method:
          type: string
          enum:
          - GET
      example:
        method: GET
        rel: prev
        href: http://example.com/aeiou
    Transaction_oauth_funds:
      title: transaction_oauth_funds
      type: object
      properties:
        id:
          type: string
        ref_id:
          type: string
        status:
          type: string
        description:
          type: string
        sor_transaction:
          $ref: '#/components/schemas/Transaction_oauth_funds_sor_transaction'
      example:
        ref_id: ref_id
        sor_transaction:
          description: description
          id: id
        description: description
        id: id
        status: status
    Transaction_ppi_purchase.v1:
      title: transaction_ppi_purchase
      type: object
      properties:
        amount:
          type: number
        card_type_code:
          type: string
        description:
          type: string
        fund_category_id:
          type: string
        is_custom_ref_id:
          type: string
        name:
          type: string
        charge_fee:
          type: string
        transaction_currency:
          type: string
        reason:
          type: string
        tt:
          type: string
        merchant_name:
          type: string
        merchant_category_code:
          type: string
        merchant_location:
          type: string
        terminal_id:
          type: string
        original_transaction_currency:
          type: string
        original_transaction_amount:
          type: string
        total_fees_charged:
          type: string
        total_fees_currency:
          type: string
        total_transaction_amount:
          type: string
        total_transaction_currency:
          type: string
        transaction_mode:
          type: string
        transaction_network:
          type: string
        additional_details:
          $ref: Transaction_funds_debitreversal.v1_additional_details
        date_reversed:
          type: string
        payment_ref:
          type: string
        pp:
          type: string
        provider_ref_id:
          type: string
        vat:
          type: string
        card_fee:
          type: number
    Transaction_rules.v1:
      title: Transaction Rules
      type: array
      items:
        $ref: Transaction_rules.v1_inner
      x-examples:
        example-1:
        - id: 35c84890393645bdbecfcc51f69840b0
          name: TerminalId
          action: blacklist
          value: 123
      x-schema-name: Transaction_rules.v1
    User_address.v1:
      title: user_address
      type: object
      properties:
        residential:
          $ref: '#/components/schemas/Address_details.v1'
        billing:
          $ref: '#/components/schemas/Address_details.v1'
      example:
        residential:
          zipcode: "6000"
          country: Philippines
          country_code: IND
          city: City
          address_1: Address1
          address_2: Address2
          address_3: Address Line 3
          address_4: Address2
          state: Cebu
        billing: null
    User_authentications.v1:
      title: user_authentications
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: User_authentications.v1_documents
        count:
          type: number
          format: integer
          example: 1
        status:
          type: string
          example: pending
        sub_status:
          type: string
          example: pending registration submission
        kyc_details:
          type: string
          example: "{\"message\":\"Example kyc\",\"messag2\":\"kyc2\"}"
    User_balance.v1:
      title: user_balance
      type: object
      properties:
        wallet:
          $ref: '#/components/schemas/User_balance.v1_wallet'
        card:
          $ref: '#/components/schemas/User_balance.v1_card'
    User_full.v1:
      title: user_full
      required:
      - date
      - email
      - id
      - mobile
      - name
      - status
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]*"
          type: string
          readOnly: true
        email:
          type: string
          description: Registration email for the user to be created in the MatchMove
            system for a particular program.
          format: email
        name:
          $ref: '#/components/schemas/User_name.v1'
        mobile:
          $ref: '#/components/schemas/User_mobile.v1'
        identification:
          $ref: '#/components/schemas/User_identification.v1'
        countryofissue:
          type: string
          description: Country of issue of registration documents for the users in
            the MatchMove system
          nullable: true
        country_code_of_issue:
          type: string
          description: Country of issue of registration documents for the users in
            the MatchMove system
          nullable: true
        birthday:
          type: string
          description: Birthday of the user registered in the MatchMove system. The
            value is expected to match the value provided in documents for the KYC
            process.
          format: date
          nullable: true
        place_of_birth:
          type: string
        gender:
          type: string
          nullable: true
        nationality:
          type: string
        title:
          type: string
        marital_status:
          type: string
        mothers_maiden_name:
          type: string
        customer_id:
          type: string
        status:
          $ref: Card_full.v1_status
        date:
          $ref: '#/components/schemas/User_full.v1_date'
        partner_id:
          type: string
      example:
        birthday: 2000-01-23
        date:
          registration: 2000-01-23T04:56:07.000+00:00
        gender: gender
        mobile:
          country_code: country_code
          number: number
        country_code_of_issue: country_code_of_issue
        title: title
        place_of_birth: place_of_birth
        marital_status: marital_status
        identification:
          number: number
          issue: 2000-01-23T04:56:07.000+00:00
          expiry: 2000-01-23T04:56:07.000+00:00
          type: type
        partner_id: partner_id
        countryofissue: countryofissue
        nationality: nationality
        name:
          middle: middle
          last: last
          first: first
          preferred: preferred
        id: id
        mothers_maiden_name: mothers_maiden_name
        customer_id: customer_id
        email: ""
        status:
          is_active: true
          text: text
    User_identification.v1:
      title: user_identification
      type: object
      properties:
        type:
          type: string
        number:
          type: string
          nullable: true
        issue:
          type: string
          format: date-time
          nullable: true
        expiry:
          type: string
          format: date-time
          nullable: true
      example:
        number: number
        issue: 2000-01-23T04:56:07.000+00:00
        expiry: 2000-01-23T04:56:07.000+00:00
        type: type
    User_limit.v1:
      title: user_limit
      type: object
      properties:
        id:
          type: string
          description: Auto generated hash id
        enable:
          type: boolean
          description: Transaction is enable or not for that card
        user_details_set:
          type: boolean
          description: Whether User has set any limits for that card
        card_limits:
          type: array
          description: Cards per interval limits value
          items:
            $ref: User_limit.v1_card_limits
        program_limits:
          $ref: '#/components/schemas/User_limit.v1_program_limits'
      example:
        enable: true
        program_limits:
          post_kyc:
          - amount: 5.637376656633329
            count: 2.3021358869347655
            interval: interval
          - amount: 5.637376656633329
            count: 2.3021358869347655
            interval: interval
          pre_kyc:
          - amount: 1.4658129805029452
            count: 5.962133916683182
            interval: interval
          - amount: 1.4658129805029452
            count: 5.962133916683182
            interval: interval
        id: id
        card_limits:
        - amount: 0.8008281904610115
          count: 6.027456183070403
          interval: interval
        - amount: 0.8008281904610115
          count: 6.027456183070403
          interval: interval
        user_details_set: true
    User_limit_request.v1:
      title: user_limit
      type: object
      properties:
        enable:
          type: boolean
          description: We can disbale tarnsaction category for that card
        values:
          type: array
          description: Limits and number of count we can set per interval
          items:
            $ref: User_limit.v1_card_limits
      x-examples:
        example-1:
          enable: true
          values:
          - "{\"amount\":10000,\"interval\": \"unit\"}"
          - "{\"amount\":10000,\"interval\": \"daily\"}"
          - "{\"amount\":10000,\"interval\": \"weekly\"}"
          - "{\"amount\":10000,\"interval\": \"monthly\"}"
          - "{\"amount\":10000,\"interval\": \"annual\"}"
          - "{\"amount\":10000,\"interval\": \"lifetime\"}"
        example-2:
          values:
          - "{\"amount\":10000,\"interval\": \"unit\"}"
          - "{\"amount\":10000,\"interval\": \"daily\", \"count\":4}"
          - "{\"amount\":10000,\"interval\": \"weekly\", \"count\":4}"
          - "{\"amount\":10000,\"interval\": \"monthly\"}"
          - "{\"amount\":10000,\"interval\": \"annual\"}"
          - "{\"amount\":10000,\"interval\": \"lifetime\"}"
    User_mobile.v1:
      title: user_mobile
      type: object
      properties:
        country_code:
          type: string
          description: Mobile Country code of the user
        number:
          maxLength: 12
          minLength: 8
          pattern: "^[0-9]{8,12}$"
          type: string
          description: Mobile number of the user excluding the country code
      example:
        country_code: country_code
        number: number
      x-examples:
        example-1:
          country_code: 0
          number: 0
        example-2:
          country_code: 0
          number: 0
    User_name.v1:
      title: user_name
      type: object
      properties:
        first:
          maxLength: 50
          minLength: 1
          pattern: "^(?i)[a-z\\\\s]+$"
          type: string
          description: First or given name
        middle:
          maxLength: 50
          minLength: 1
          pattern: "^(?i)[a-z\\\\s]+$"
          type: string
          description: Middle name
          nullable: true
        last:
          maxLength: 50
          minLength: 1
          pattern: "^(?i)[a-z\\\\s]+$"
          type: string
          description: Last or family name
        preferred:
          maxLength: 25
          minLength: 1
          pattern: "^(?i)[a-z\\s]+$"
          type: string
          description: Preferred Name or Name on Card
      example:
        middle: middle
        last: last
        first: first
        preferred: preferred
    User_report.v1:
      title: user_report
      type: object
      properties:
        users:
          type: array
          description: Users information
          items:
            anyOf:
            - $ref: '#/components/schemas/User_report_object_expanded.v1'
            - $ref: '#/components/schemas/User_report_object_condensed.v1'
        total_records:
          type: string
          example: "100"
        records_per_page:
          type: string
          example: "10"
        total_pages:
          type: string
          example: "10"
        links:
          type: array
          items:
            $ref: Closed_loop.v1_links
      example:
        records_per_page: "10"
        total_records: "100"
        links:
        - next: https://example.xom/v1/oauth/consumer/search/users?page=4&records_per_page=10
          previous: https://example.xom/v1/oauth/consumer/search/users?page=1&records_per_page=10
          self: https://example.xom/v1/oauth/consumer/search/users?page=2&records_per_page=10
        - next: https://example.xom/v1/oauth/consumer/search/users?page=4&records_per_page=10
          previous: https://example.xom/v1/oauth/consumer/search/users?page=1&records_per_page=10
          self: https://example.xom/v1/oauth/consumer/search/users?page=2&records_per_page=10
        total_pages: "10"
        users:
        - ""
        - ""
    User_report_object_condensed.v1:
      title: user_report_object_condensed
      type: object
      properties:
        id:
          type: string
          description: User Identifier
          example: 91bd8e9b86b71893afbc49218ac5434b
        email:
          type: string
          description: Email Address
          example: test@email.com
        name:
          $ref: '#/components/schemas/User_report_object_condensed.v1_name'
        mobile:
          $ref: '#/components/schemas/User_report_object_condensed.v1_mobile'
        identification:
          $ref: '#/components/schemas/User_report_object_condensed.v1_identification'
        countryofissue:
          type: string
          description: Country of Issue
          example: Philippines
        birthday:
          type: string
          description: Date of Birth
          example: 1990-01-01
        gender:
          type: string
          description: Gender
          example: female
        title:
          type: string
          description: Title
          example: Miss
        customer_id:
          type: string
        status:
          $ref: '#/components/schemas/User_report_object_condensed.v1_status'
        date_added:
          type: string
          description: Registration Date
          example: 2019-10-04T12:55:55+05:30
        total_balances:
          $ref: '#/components/schemas/User_balance.v1'
        links:
          type: array
          example:
          - rel: addresses.billing
            href: https://example.xom/v1/users/addresses/billing
            method: GET
          - rel: addresses.residential
            href: https://example.xom/v1/users/addresses/residential
            method: GET
          - rel: authentication.documents
            href: https://example.xom/v1/users/authentications/documents
            method: GET
          - rel: users.wallets
            href: https://example.xom/v1/users/wallets
            method: GET
          items:
            $ref: Card_full.v1_links
    User_report_object_expanded.v1:
      title: user_report_object_expanded
      type: object
      properties:
        id:
          type: string
          description: User Identifier
          example: 91bd8e9b86b71893afbc49218ac5434b
        email:
          type: string
          description: Email Address
          example: test@email.com
        name:
          $ref: '#/components/schemas/User_name.v1'
        mobile:
          $ref: '#/components/schemas/User_mobile.v1'
        identification:
          $ref: '#/components/schemas/User_identification.v1'
        countryofissue:
          type: string
          description: Country of Issue
          example: Philippines
        birthday:
          type: string
          description: Date of Birth
          format: date
          example: 1990-01-01
        gender:
          type: string
          description: Gender
          example: female
        title:
          type: string
          description: Title
          example: Miss
        customer_id:
          type: string
        status:
          $ref: User_report_object_condensed.v1_status
        date_added:
          type: string
          description: Registration Date
          example: 2019-10-04T12:55:55+05:30
        address:
          $ref: '#/components/schemas/User_report_object_expanded.v1_address'
        documents:
          $ref: '#/components/schemas/User_authentications.v1'
        total_balances:
          $ref: '#/components/schemas/User_balance.v1'
        links:
          type: array
          example:
          - rel: users.wallets
            href: https://example.xom/v1/users/wallets
            method: GET
          items:
            $ref: Card_full.v1_links
    User_request.v1:
      title: user_request.v1
      type: object
      properties:
        id:
          type: string
        first_name:
          maxLength: 50
          type: string
          description: First name or given name
        last_name:
          maxLength: 50
          type: string
          description: Last name or family name
        middle_name:
          maxLength: 50
          type: string
          description: User Middle name
        preferred_name:
          maxLength: 25
          type: string
          description: Prefereed name
        email:
          type: string
          description: Registration email for the user to be created in the MatchMove
            system for a particular program.
        mobile_country_code:
          type: string
          description: |
            Supported Country codes for the program can be retrieved from `GET /users/enumerations/mobile_country_codes`
        password:
          type: string
          description: "Minimum 8 Characters , One special character , One number\
            \ , One small character\n"
        mobile:
          type: string
          description: Mobile numbe rof the user
        title:
          type: string
          description: Title to be set like mr/miss etc
          enum:
          - Mr
          - Miss
          - Dr
          - Mrs
          - Madam
        id_type:
          type: string
          description: Id type to be set. Available values can be retrieved from `GET
            /users/enumerations/id_types`
        id_number:
          type: string
          description: Id number to be unique
        id_date_expiry:
          type: string
          description: Id type expiry date
        id_date_issue:
          type: string
          description: Issued date of id type
        country_of_issue:
          type: string
          description: Country that issued your id type
        alt_id_type:
          type: string
          description: alternative id type
        alt_id_number:
          type: string
          description: Alertnative id type number to be unique
        alt_id_date_expiry:
          type: string
          description: Alternative id type expiry date
        alt_id_date_issue:
          type: string
          description: Alternative id type issued date
        alt_id_country_of_issue:
          type: string
          description: Alternative Id type isunace country
        birthday:
          type: string
          description: Birthday of the user registred in matchmove system
        place_of_birth:
          type: string
          description: Place where you have born
        nationality:
          type: string
          description: User Nationality. Supported values can be retrieved from `GET
            /users/enumerations/nationalities`
        gender:
          type: string
          description: User Gender. Supported values can be retreived from `GET /users/enumerations/genders`
        marital_status:
          type: string
          description: User marital Status. Supported values can be retreived from
            `GET /users/enumerations/marital_status`
        mothers_maiden_name:
          type: string
          description: Mother's maiden name
        nature_of_business:
          type: string
          description: Nature of your business
        customer_id:
          type: string
          description: Customer id to be passed
        purpose_of_account:
          type: string
          description: Purpose of your account
        partner_id:
          type: string
          description: Partner id to be passed
    Virtual_account.v1:
      title: virtual_account
      type: object
      properties:
        account_number:
          type: number
        reversal_destination:
          $ref: Bank_account.v1_reversal_destination
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
        status:
          type: string
      example:
        account_number: 0.8008281904610115
        updated_at: 2000-01-23
        reversal_destination:
          bank_code: bank_code
          bank_account_number: bank_account_number
          id: id
          bank_holder_name: bank_holder_name
        created_at: 2000-01-23
        status: status
      x-examples:
        sample virtual account:
        - account_number: 1234567890
          status: active
          created_at: 2020-03-25 14:30:56
          updated_at: 2020-03-25 14:30:56
    Virtual_account_transaction:
      title: virtual_account_transaction
      type: object
      properties:
        id:
          type: integer
        amount:
          type: string
        fee:
          type: string
        total_amount:
          type: string
        currency:
          type: string
        status:
          type: string
        process_type:
          type: string
        details:
          $ref: '#/components/schemas/Virtual_account_transaction_details'
        user_details:
          oneOf:
          - properties:
              account_type:
                type: string
              name:
                type: string
              user_hash_id:
                type: string
              wallet_hash_id:
                type: string
        created_at:
          type: string
        updated_at:
          type: string
      example:
        amount: amount
        updated_at: updated_at
        total_amount: total_amount
        user_details: ""
        fee: fee
        created_at: created_at
        currency: currency
        process_type: process_type
        details:
          journal_id: journal_id
          bank_ref: bank_ref
          topup_type: topup_type
          customer_ref: customer_ref
          virtual_account_number: virtual_account_number
        id: 5
        status: status
    Wallet_full.v1:
      title: wallet_full
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]*"
          type: string
          description: Unique Reference for Wallet in the MatchMove System
        number:
          type: string
          description: Account Identification Number for the Wallet
        funds:
          $ref: '#/components/schemas/Wallet_full.v1_funds'
        categories:
          $ref: '#/components/schemas/Balance_category.v1'
        holder:
          $ref: Card_full.v1_holder
        date:
          $ref: '#/components/schemas/Wallet_full.v1_date'
        status:
          $ref: Card_full.v1_status
        image:
          $ref: '#/components/schemas/Wallet_full.v1_image'
        details:
          $ref: '#/components/schemas/Payment_instrument_details.v1'
        kit:
          type: string
      description: A standard Wallet model
      example:
        date:
          closed: closed
          expiry: YYYY-MM
          issued: 2000-01-23
        number: number
        image:
          small: http://example.com/aeiou
          large: http://example.com/aeiou
          medium: http://example.com/aeiou
        kit: kit
        funds:
          withholding: null
          available:
            amount: amount
            name: name
            currency: currency
        holder:
          name: name
        details:
          active_limits:
            post_kyc: 9.965781217890562
            allowed: 4.965218492984954
            pre_kyc: 5.025004791520295
            statuses:
            - statuses
            - statuses
          transfer_in_limits: null
          min_load_limit: 0.8008281904610115
          fee: fee
          fee_currency: fee_currency
          topup_limits:
            post_kyc: null
            user_limits: null
            pre_kyc:
              lifetime_count_limit: 5.962133916683182
              daily_transactional_limit: 7.061401241503109
              allowed: 1.4658129805029452
              daily_count_limit: 2.3021358869347655
              weekly_count_limit: 9.301444243932576
              monthly_transactional_limit: 4.145608029883936
              weekly_transactional_limit: 3.616076749251911
              lifetime_transactional_limit: 5.637376656633329
              monthly_count_limit: 2.027123023002322
              unit_transaction_limit: 7.386281948385884
          max_count: max_count
          transfer_out_limits: null
          deduct_limits:
            post_kyc: null
            user_limits: null
            pre_kyc:
              lifetime_count_limit: 5.962133916683182
              daily_transactional_limit: 7.061401241503109
              allowed: 1.4658129805029452
              daily_count_limit: 2.3021358869347655
              weekly_count_limit: 9.301444243932576
              monthly_transactional_limit: 4.145608029883936
              weekly_transactional_limit: 3.616076749251911
              lifetime_transactional_limit: 5.637376656633329
              monthly_count_limit: 2.027123023002322
              unit_transaction_limit: 7.386281948385884
          issuance_limits:
            post_kyc: null
            pre_kyc:
              lifetime_count_limit: 1.1730742509559433
              yearly_count_limit: 7.457744773683766
              allowed: 1.2315135367772556
              daily_count_limit: 1.0246457001441578
              weekly_count_limit: 1.4894159098541704
              monthly_count_limit: 6.84685269835264
            rules:
            - rules
            - rules
          network_type: mastercard
          load_limits: null
          unload_limits: null
          max_load_limit: 6.027456183070403
        id: id
        categories:
          CATEGORY_NAME:
            withholding: null
            available: null
          DEFAULT:
            withholding: null
            available: null
        status:
          is_active: true
          text: text
    Webhooks.v1:
      title: webhooks
      type: array
      items:
        $ref: Webhooks.v1_inner
      x-examples:
        example-1:
        - id: 35c84890393645bdbecfcc51f69840b0
          url: https://test13.com
          event_name: Insufficient Consumer Balance
      x-schema-name: Webhooks.v1
    users_user_id_body:
      type: object
      properties:
        state:
          type: string
          description: "Account state. Accepts values: `blocked`  `suspended`. Default\
            \ is `suspended`."
    inline_response_200:
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]*"
          type: string
          description: The user id on which the actions was performed
        state:
          type: string
          enum:
          - suspended
          - blocked
      example:
        id: id
        state: suspended
    inline_response_200_1:
      type: object
      properties:
        transactions:
          maxItems: 500
          minItems: 0
          uniqueItems: true
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Transaction_ppi_purchase.v1'
            - $ref: '#/components/schemas/Transaction_funds_credit.v1'
            - $ref: '#/components/schemas/Transaction_funds_debitreversal.v1'
            - $ref: '#/components/schemas/Transaction_funds_openloop.v1'
            - $ref: '#/components/schemas/Transaction_funds_openloopreversal.v1'
            - $ref: '#/components/schemas/Transaction_funds_refund.v1'
        links:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Transaction_links.v1'
        records_per_page:
          type: integer
          description: Records per page returned. Echoed back from the request param
        page:
          type: integer
          description: Page number of the transactions returned
        total_records:
          type: integer
          description: Total number of records for the query params
      example:
        records_per_page: 0
        total_records: 1
        links:
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        page: 6
        transactions:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
    inline_response_200_2:
      type: object
      properties:
        types:
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Card_type.v1'
      example:
        types:
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
        - types:
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
          - image:
              small: http://example.com/aeiou
              large: http://example.com/aeiou
              medium: http://example.com/aeiou
            code: code
            name: name
            personalised_order: true
            description: description
            currency: ""
            details:
              active_limits:
                post_kyc: 9.965781217890562
                allowed: 4.965218492984954
                pre_kyc: 5.025004791520295
                statuses:
                - statuses
                - statuses
              transfer_in_limits: null
              min_load_limit: 0.8008281904610115
              fee: fee
              fee_currency: fee_currency
              topup_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              max_count: max_count
              transfer_out_limits: null
              deduct_limits:
                post_kyc: null
                user_limits: null
                pre_kyc:
                  lifetime_count_limit: 5.962133916683182
                  daily_transactional_limit: 7.061401241503109
                  allowed: 1.4658129805029452
                  daily_count_limit: 2.3021358869347655
                  weekly_count_limit: 9.301444243932576
                  monthly_transactional_limit: 4.145608029883936
                  weekly_transactional_limit: 3.616076749251911
                  lifetime_transactional_limit: 5.637376656633329
                  monthly_count_limit: 2.027123023002322
                  unit_transaction_limit: 7.386281948385884
              issuance_limits:
                post_kyc: null
                pre_kyc:
                  lifetime_count_limit: 1.1730742509559433
                  yearly_count_limit: 7.457744773683766
                  allowed: 1.2315135367772556
                  daily_count_limit: 1.0246457001441578
                  weekly_count_limit: 1.4894159098541704
                  monthly_count_limit: 6.84685269835264
                rules:
                - rules
                - rules
              network_type: mastercard
              load_limits: null
              unload_limits: null
              max_load_limit: 6.027456183070403
            form_factor: physical
            token:
              generation: static
              type: type
    cards_card_type_code_body:
      type: object
      properties:
        assoc_number:
          type: string
          description: "Required value supported only for non personalized physical\
            \ cards. Physical Card Proxy Number [format: PY + Proxy Number (eg. 'PY000000000123')]\
            \ or Account identification number. When present, this will bind the card\
            \ to the current user.\n"
        ref_id:
          type: string
          description: |
            Transaction reference identifier obtained after using `POST /users/wallets/funds` when the consumer is pre-funded or after using `POST /oauth/consumer/funds` when the consumer is not pre-funded.
        card_design:
          type: string
        name_on_card:
          type: string
        additional_details:
          type: string
        auto_activate:
          type: boolean
          description: |
            If passed as true the POST request does the activation of the card along with the linkage of the card.
            Do note this parameter is only supported for non personalized card.
            Also depending on the card management partner used only option `true` might be supported
          enum:
          - true
          - false
        "2fa_method":
          type: string
        "2fa_delivery":
          type: string
        "2fa_value":
          type: string
    inline_response_200_3:
      type: object
      properties:
        cards:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Card_full.v1'
      example:
        cards:
        - date:
            closed: closed
            expiry: YYYY-MM
            issued: 2000-01-23
          number: number
          image:
            small: http://example.com/aeiou
            large: http://example.com/aeiou
            medium: http://example.com/aeiou
          kit: kit
          holder:
            name: name
          funds:
            withholding: null
            available:
              amount: amount
              name: name
              currency: currency
            categories:
              CATEGORY_NAME:
                withholding: null
                available: null
              DEFAULT:
                withholding: null
                available: null
          links:
          - rel: securities.tokens
            href: https://example.xom/v1/users/wallets/cards/securities/tokens
            method: GET
          id: id
          type:
            name: name
            personalised_order: true
            description: description
            type: type
            form_factor: physical
          token:
            generation: static
            type: type
          status:
            is_active: true
            text: text
        - date:
            closed: closed
            expiry: YYYY-MM
            issued: 2000-01-23
          number: number
          image:
            small: http://example.com/aeiou
            large: http://example.com/aeiou
            medium: http://example.com/aeiou
          kit: kit
          holder:
            name: name
          funds:
            withholding: null
            available:
              amount: amount
              name: name
              currency: currency
            categories:
              CATEGORY_NAME:
                withholding: null
                available: null
              DEFAULT:
                withholding: null
                available: null
          links:
          - rel: securities.tokens
            href: https://example.xom/v1/users/wallets/cards/securities/tokens
            method: GET
          id: id
          type:
            name: name
            personalised_order: true
            description: description
            type: type
            form_factor: physical
          token:
            generation: static
            type: type
          status:
            is_active: true
            text: text
    cards_card_id_body:
      type: object
      properties:
        activation_code:
          type: string
          description: "Card activation code obtained from response of POST /users/wallets/cards/{card_type.code}.\n"
        "2fa_method":
          type: string
        "2fa_delivery":
          type: string
        "2fa_value":
          type: string
    inline_response_200_4:
      type: object
      properties:
        status:
          type: string
          description: Status of the card activation process.
        "2fa":
          $ref: '#/components/schemas/inline_response_200_4_2fa'
      example:
        "2fa":
          message: message
          status: status
        status: status
    cards_card_id_body_1:
      required:
      - id
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]*"
          type: string
          description: "Card unique identifier. When present, this will unblock the\
            \ card associated with this parameter."
        assoc_number:
          type: string
          description: "Physical Card Proxy Number [format: PY + Proxy Number (eg.\
            \ 'PY000000000123')] or Account identification number. When present, this\
            \ will bind the card to the current user.\n"
        ref_id:
          type: string
          description: Transaction reference identifier obtained after using POST
            /users/wallets/funds when the consumer is pre-funded or after using POST
            /oauth/consumer/funds when the consumer is not pre-funded.
    inline_response_200_5:
      type: object
      properties:
        id:
          type: string
        number:
          type: string
        status:
          type: string
      example:
        number: number
        id: id
        status: status
    cards_card_id_body_2:
      type: object
      properties:
        type:
          type: string
          description: "Values can be `lost`, `stolen` and `damaged`. These values\
            \ will permanently block the card and is irreversible. If not specified\
            \ , it will temporarily block the card."
    inline_response_200_6:
      required:
      - id
      - number
      - status
      - type
      type: object
      properties:
        id:
          type: string
          description: The user ID.
        number:
          type: string
        status:
          type: string
        type:
          type: string
      example:
        number: number
        id: id
        type: type
        status: status
    card_id_pins_body:
      type: object
      properties:
        pinblock:
          type: string
    inline_response_200_7:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
      example:
        status: success
    inline_response_200_8:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: The value of the card security code.
        expiry:
          type: string
          description: The duration until which the code is valid given no transaction
            performed in that period
          format: date-time
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        value: value
    funds_categories_body:
      required:
      - default_amount
      - name
      type: object
      properties:
        name:
          type: string
          description: Unique category label which accepts case insensitive alphanumeric
            combinations with hyphens
        default_amount:
          type: string
          description: Serves as the maximum amount allowable for the category
        factor:
          type: string
          description: "Defines the default_amount type or context (UNIT, PERCENT).\
            \ Defaults to UNIT"
        mcc:
          type: string
          description: "If a comma-delimited list of Merchant Category Codes is passed,\
            \ this category will use them as filters. Value with no record matches\
            \ are ignored."
        country:
          type: string
          description: "A comma-delimited list of country abbreviations in [ISO 3166\
            \ alpha-3](http://www.iso.org/iso/country_codes) format. If provided,\
            \ the currency of these countries will be used as filters. Value with\
            \ no record matches are ignored."
        priority:
          type: string
          description: Spending priority ( The lower the number the hight the priority
            )
        card:
          type: string
          description: "If a comma-delimited list of card ID is passed, this category\
            \ will use them as filters. Value with no record matches are ignored."
        merchant:
          type: string
          description: "If a comma-delimited list of Merchant Codes is passed, this\
            \ category will use them as filters"
        terminal:
          type: string
          description: "If a comma-delimited list of Terminal Codes is passed, this\
            \ category will use them as filters"
    inline_response_200_9:
      type: object
      properties:
        categories:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Fund_categories.v1'
      example:
        categories:
        - default_amount: default_amount
          name: name
          merchant: merchant
          id: id
          terminal: terminal
          factor: factor
          mcc: mcc
        - default_amount: default_amount
          name: name
          merchant: merchant
          id: id
          terminal: terminal
          factor: factor
          mcc: mcc
    categories_name_body:
      required:
      - default_amount
      - name
      type: object
      properties:
        default_amount:
          type: string
          description: Serves as the maximum amount allowable for the category
        factor:
          type: string
          description: "Defines the default_amount type or context (UNIT, PERCENT).\
            \ Defaults to UNIT"
        mcc:
          type: string
          description: "If a comma-delimited list of Merchant Category Codes is passed,\
            \ this category will use them as filters. Value with no record matches\
            \ are ignored."
        country:
          type: string
          description: "A comma-delimited list of country abbreviations in [ISO 3166\
            \ alpha-3](http://www.iso.org/iso/country_codes) format. If provided,\
            \ the currency of these countries will be used as filters. Value with\
            \ no record matches are ignored."
        priority:
          type: string
          description: Spending priority ( The lower the number the hight the priority
            )
        card:
          type: string
          description: "If a comma-delimited list of card ID is passed, this category\
            \ will use them as filters. Value with no record matches are ignored."
        merchant:
          type: string
          description: "If a comma-delimited list of Merchant Codes is passed, this\
            \ category will use them as filters"
        terminal:
          type: string
          description: "If a comma-delimited list of Terminal Codes is passed, this\
            \ category will use them as filters"
    inline_response_200_10:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
    categories_transfers_body:
      required:
      - amount
      - from
      - to
      type: object
      properties:
        amount:
          type: string
          description: Amount to be transferred
        from:
          type: string
          description: Fund category name where the amount will be originating.
        to:
          type: string
          description: Fund category name where the amount will be transferred.
    inline_response_200_11:
      type: object
      properties:
        status:
          type: string
          description: Fund category transfer status
      example:
        status: status
    inline_response_200_12:
      type: object
      properties:
        transactions:
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Transaction_ppi_purchase.v1'
            - $ref: '#/components/schemas/Transaction_funds_credit.v1'
            - $ref: '#/components/schemas/Transaction_funds_debitreversal.v1'
            - $ref: '#/components/schemas/Transaction_funds_openloop.v1'
            - $ref: '#/components/schemas/Transaction_funds_openloopreversal.v1'
            - $ref: '#/components/schemas/Transaction_funds_refund.v1'
        links:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Transaction_links.v1'
        records_per_page:
          type: string
          description: Records per page returned. Echoed back from the request param
        page:
          type: string
          description: Page number of the transactions returned
        total_records:
          type: string
          description: Total number of records for the query params
      example:
        records_per_page: records_per_page
        total_records: total_records
        links:
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        page: page
        transactions:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
    inline_response_200_13:
      type: object
      properties:
        number:
          type: string
          description: Encrypted card number
      example:
        number: number
    inline_response_200_14:
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]*"
          type: string
          description: Unique Reference for Wallet in the MatchMove System
        number:
          type: string
          description: Account Identification Number for the Wallet
        funds:
          $ref: Card_full.v1_funds
        holder:
          $ref: Card_full.v1_holder
        date:
          $ref: '#/components/schemas/inline_response_200_14_date'
        status:
          $ref: Card_full.v1_status
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card_mini.v1'
      example:
        date:
          closed: closed
          expiry: expiry
          issued: issued
        number: number
        cards:
        - date:
            closed: closed
            expiry: YYYY-MM
            issued: 2000-01-23
          number: number
          image:
            small: http://example.com/aeiou
            large: http://example.com/aeiou
            medium: http://example.com/aeiou
          card_type_code: card_type_code
          holder: null
          funds: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: null
          network: mastercard
        - date:
            closed: closed
            expiry: YYYY-MM
            issued: 2000-01-23
          number: number
          image:
            small: http://example.com/aeiou
            large: http://example.com/aeiou
            medium: http://example.com/aeiou
          card_type_code: card_type_code
          holder: null
          funds: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: null
          network: mastercard
        funds:
          withholding: null
          available:
            amount: amount
            name: name
            currency: currency
          categories:
            CATEGORY_NAME:
              withholding: null
              available: null
            DEFAULT:
              withholding: null
              available: null
        holder:
          name: name
        id: id
        status:
          is_active: true
          text: text
    inline_response_200_15:
      required:
      - count
      - documents
      - status
      type: object
      properties:
        documents:
          type: array
          description: |
            Array of documents returned as signed url along with the
            document type
          items:
            anyOf:
            - type: string
              properties: {}
            - $ref: '#/components/schemas/Authentication_document.v1'
        count:
          type: integer
          description: Count of documents submitted
        status:
          type: string
          description: status of the Identity authentication process
        sub_status:
          type: string
        kyc_details:
          type: object
          description: |
            Details passed and used for performing the identity
            authentications
      example:
        sub_status: sub_status
        kyc_details: {}
        documents:
        - ""
        - ""
        count: 0
        status: status
    inline_response_200_16:
      type: object
      properties:
        status:
          type: string
        count:
          type: integer
      example:
        count: 0
        status: status
    authentications_documents_body:
      type: object
      properties:
        data:
          type: string
          description: "base64 of a file content. Accepted doc types [JPG,PNG,PDF].\
            \ Max size of file supported is 8MB."
        document_type:
          type: string
        kyc_type:
          type: string
    inline_response_200_17:
      type: object
      properties:
        documents:
          type: array
          description: |
            Array of documents returned as signed url along with the
            document type
          items:
            anyOf:
            - type: string
            - $ref: '#/components/schemas/Authentication_document.v1'
        count:
          type: integer
          description: Count of documents submitted
        status:
          type: string
          description: status of the Identity authentication process
      example:
        documents:
        - ""
        - ""
        count: 0
        status: status
    authentications_documents_body_1:
      type: object
      properties:
        document:
          type: string
          description: File name with extension
    authentications_statuses_body:
      required:
      - status
      type: object
      properties:
        hash_id:
          type: string
          description: User Hash ID
        status:
          type: string
          description: Approved or rejected status
          enum:
          - approved
          - rejected
        sub_status:
          type: string
          description: Sub Status
        message:
          type: string
          description: Message
        kyc_details:
          type: string
          description: JSON encoded text string containing the KYC details
        kyc_type:
          type: string
          description: KYC Type
    inline_response_200_18:
      type: object
      properties:
        success:
          type: string
        sub_status:
          type: string
        kyc_details:
          type: string
        kyc_type:
          type: string
        message:
          type: string
      example:
        sub_status: sub_status
        kyc_details: kyc_details
        kyc_type: kyc_type
        success: success
        message: message
    inline_response_200_19:
      type: object
      properties:
        transactions:
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Transaction_funds_credit.v1'
            - $ref: '#/components/schemas/Transaction_funds_debit.v1'
            - $ref: '#/components/schemas/Transaction_funds_debitreversal.v1'
            - $ref: '#/components/schemas/Transaction_funds_refund.v1'
        links:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Transaction_links.v1'
        count:
          $ref: '#/components/schemas/inline_response_200_19_count'
      example:
        count:
          total: 0
        links:
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        transactions:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
    inline_response_200_20:
      type: object
      properties:
        id:
          type: integer
          description: The user ID.
      example:
        id: 0
    wallets_funds_body:
      required:
      - amount
      type: object
      properties:
        email:
          type: string
          description: The registered `email` address of the user for which the fund
            transaction is being initiated
          format: email
        mobile_country_code:
          type: string
          description: The `mobile_country_code` of the user for which the fund transaction
            is being initiated
        mobile:
          type: string
          description: The `mobile` of the user for which the fund transaction is
            being initiated
        user_id:
          type: string
          description: The `user_id` of the user for which the fund transaction is
            being initiated
        amount:
          type: number
          description: The amount for the transaction. The format supported would
            be based on the precision of the base currency
        details:
          type: string
          description: JSON encoded details to be passed as meta data to be stored
            in MatchMove sytem
        forwarded_for:
          type: string
        hashed_pan:
          type: string
        fund_category_name:
          type: string
          description: Optional category to specify where the credit/transfer of funds
            happens.
        type:
          type: string
        load_card:
          type: boolean
          description: To be specified if the funds need to be directly moved to the
            card in non-shared card balance.
        card_id:
          type: string
          description: The card_id of the card in non-shared balance to which the
            funds are to be moved. Required if the value for `load_card` is true.
    inline_response_200_21:
      required:
      - card_id
      - confirm
      - id
      - ref_id
      - user_id
      - wallet_id
      type: object
      properties:
        id:
          type: string
          description: Transaction reference identifier
        ref_id:
          type: string
          description: Transaction reference identifier
        user_id:
          type: string
          description: User id of the user for whcih the transaction was performed
        wallet_id:
          type: string
          description: Wallet identifier
        card_id:
          type: string
          description: Card identifier
        confirm:
          type: string
          description: "Indicator if the transaction needs to be confirmed or not.\
            \ Values can be [require or skip]"
      example:
        ref_id: ref_id
        confirm: confirm
        wallet_id: wallet_id
        user_id: user_id
        id: id
        card_id: card_id
    wallets_funds_body_1:
      required:
      - amount
      type: object
      properties:
        email:
          type: string
          description: The registered `email` address of the user for which the fund
            transaction is being initiated
          format: email
        mobile_country_code:
          type: string
          description: The `mobile_country_code` of the user for which the fund transaction
            is being initiated
        mobile:
          type: string
          description: The `mobile` of the user for which the fund transaction is
            being initiated
        hash_id:
          type: string
          description: The `hash_id` of the user's wallet for which the fund transaction
            is being initiated
        amount:
          type: integer
        details:
          type: string
        fund_category_name:
          type: string
    inline_response_200_22:
      type: object
      properties:
        id:
          type: string
          description: The user ID.
        ref_id:
          type: string
        user_id:
          type: string
        wallet_id:
          type: string
        confirm:
          type: string
        links:
          type: array
          items: {}
      example:
        ref_id: ref_id
        confirm: confirm
        wallet_id: wallet_id
        user_id: user_id
        links:
        - ""
        - ""
        id: id
    refund_type_body:
      type: object
      properties:
        amount:
          type: integer
        details:
          type: string
    inline_response_200_23:
      type: object
      properties:
        id:
          type: string
        ref_id:
          type: string
        user_id:
          type: string
        wallet_id:
          type: string
        confirm:
          type: string
      example:
        ref_id: ref_id
        confirm: confirm
        wallet_id: wallet_id
        user_id: user_id
        id: id
    inline_response_200_24:
      required:
      - count
      - transfers
      type: object
      properties:
        transfers:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Transaction_funds_transfer.v1'
        count:
          $ref: '#/components/schemas/inline_response_200_24_count'
      example:
        transfers:
        - date:
            created: 2000-01-23T04:56:07.000+00:00
            expiry: 2000-01-23T04:56:07.000+00:00
          amount: ""
          sender:
            sms: sms
            id: id
            type: sms
          recipient:
            sms: sms
            id: id
            type: sms
          currency: currency
          id: id
          message: message
          status: active
        - date:
            created: 2000-01-23T04:56:07.000+00:00
            expiry: 2000-01-23T04:56:07.000+00:00
          amount: ""
          sender:
            sms: sms
            id: id
            type: sms
          recipient:
            sms: sms
            id: id
            type: sms
          currency: currency
          id: id
          message: message
          status: active
        count:
          total: 0.8008281904610115
      x-examples:
        example-1:
          transfers:
          - id: 77d34314a0c98abad2f356740d77b948
            sender:
              type: sms
              id: "000070228676"
              sms: "6591898127"
            recipient:
              type: sms
              id: "000070228704"
              sms: "6590025824"
            message: ""
            status: active
            amount: 2
            currency: SGD
            fees: []
            date:
              created: 2021-07-21T11:12:16+08:00
              expiry: 2021-07-28T11:12:16+08:00
          - id: 7a503fbe65bc9ba7b6d3909a727fb2e5
            sender:
              type: sms
              id: "000070228676"
              sms: "6591898127"
            recipient:
              type: sms
              id: "000070243453"
              sms: "6597575139"
            message: ""
            status: active
            amount: 2
            currency: SGD
            fees: []
            date:
              created: 2021-08-04T11:57:05+08:00
              expiry: 2021-08-11T11:57:05+08:00
          - id: c4f89804980ac901ce24ebda06315b95
            sender:
              type: sms
              id: "000070228676"
              sms: "6591898127"
            recipient:
              type: sms
              id: "000070228704"
              sms: "6590025824"
            message: ""
            status: active
            amount: 1
            currency: SGD
            fees: []
            date:
              created: 2021-08-24T13:12:53+08:00
              expiry: 2021-08-31T13:12:53+08:00
          count:
            total: 3
    card_id_funds_body:
      required:
      - amount
      type: object
      properties:
        amount:
          type: integer
        message:
          type: string
        fund_category_name:
          type: string
    card_id_funds_body_1:
      required:
      - amount
      type: object
      properties:
        amount:
          type: integer
        message:
          type: string
        fund_category_name:
          type: string
    inline_response_200_25:
      required:
      - count
      - exceptions
      type: object
      properties:
        exceptions:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_25_exceptions'
        count:
          $ref: '#/components/schemas/inline_response_200_24_count'
      example:
        count:
          total: 0.8008281904610115
        exceptions:
        - date_added: date_added
          last_name: last_name
          links:
            method: method
            rel: rel
            href: href
          id: id
          type: type
          first_name: first_name
          date_expiry: date_expiry
        - date_added: date_added
          last_name: last_name
          links:
            method: method
            rel: rel
            href: href
          id: id
          type: type
          first_name: first_name
          date_expiry: date_expiry
      x-examples:
        example-1:
          exceptions:
          - id: 729d08a2a5c2ad64269a4f271530996d
            first_name: John
            last_name: P Doe
            type: user
            date_added: 2021-08-28 16:28:29
            date_expiry: 2030-01-20 00:00:00
            links:
              rel: oauth.users.search
              href: https://api.mmvpay.com/sgmmdemo/v1/oauth/users/search?mobile_country_code=65&mobile=81818181
              method: GET
          - id: 729d08a2a5c2ad64269a4f271530996d
            first_name: John P
            last_name: Doe
            type: user
            date_added: 2021-08-24 22:19:04
            date_expiry: 2030-01-20 00:00:00
            links:
              rel: oauth.users.search
              href: https://api.mmvpay.com/sgmmdemo/v1/oauth/users/search?mobile_country_code=65&mobile=81818181
              method: GET
          - id: 729d08a2a5c2ad64269a4f271530996d
            first_name: John
            last_name: Doe
            type: user
            date_added: 2021-08-24 19:40:39
            date_expiry: 2030-01-20 00:00:00
            links:
              rel: oauth.users.search
              href: https://api.mmvpay.com/sgmmdemo/v1/oauth/users/search?mobile_country_code=65&mobile=81818181
              method: GET
          count:
            total: 3
    inline_response_200_26:
      type: object
      properties:
        gender:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        gender:
        - code: code
          description: description
        - code: code
          description: description
    inline_response_200_27:
      type: object
      properties:
        titles:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        titles:
        - code: code
          description: description
        - code: code
          description: description
    inline_response_200_28:
      type: object
      properties:
        nationalities:
          minItems: 1
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        nationalities:
        - code: code
          description: description
        - code: code
          description: description
    inline_response_200_29:
      type: object
      properties:
        id_types:
          $ref: '#/components/schemas/inline_response_200_29_id_types'
      example:
        id_types:
          primary: ""
    inline_response_200_30:
      type: object
      properties:
        kyc_types:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        kyc_types:
        - code: code
          description: description
        - code: code
          description: description
    inline_response_200_31:
      type: object
      properties:
        document_types:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        document_types:
        - code: code
          description: description
        - code: code
          description: description
    inline_response_200_32:
      type: object
      properties:
        mobile_country_code:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        mobile_country_code:
        - code: code
          description: description
        - code: code
          description: description
    inline_response_200_33:
      type: object
      properties:
        countries:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basic_enumeration.v1'
      example:
        countries:
        - code: code
          description: description
        - code: code
          description: description
    oauthconsumerconsumer_keyeventcategories_events:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        name: name
        id: id
    inline_response_200_34:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/oauthconsumerconsumer_keyeventcategories_events'
      example:
        name: name
        id: id
        events:
        - name: name
          id: id
        - name: name
          id: id
    consumer_key_webhooks_body:
      type: object
      properties:
        url:
          type: string
        event_hash:
          type: string
        category_hash:
          type: string
    webhooks_webhook_id_body:
      type: object
      properties:
        url:
          type: string
    transactions_rules_body:
      type: object
      properties:
        attribute:
          type: string
          enum:
          - transaction_type
          - merchant_id
          - terminal_id
          - mcc
          - acquiring_country_code
          - pos_entry_mode_code
        action:
          type: string
          enum:
          - blacklist
          - whitelist
        value:
          type: string
        card_type_code:
          type: string
        user_state:
          type: string
          nullable: true
          enum:
          - pre-kyc
          - post-kyc
    rule_hash_id_body:
      type: object
      properties:
        attribute:
          type: string
          enum:
          - transaction_type
          - merchant_id
          - terminal_id
          - mcc
          - acquiring_country_code
          - pos_entry_mode_code
        action:
          type: string
          enum:
          - blacklist
          - whitelist
        value:
          type: string
        card_type_code:
          type: string
        user_state:
          type: string
          enum:
          - pre-kyc
          - post-kyc
    rule_hash_id_body_1:
      type: object
      properties:
        id:
          type: string
    inline_response_200_35:
      type: object
      properties:
        id:
          type: string
        success:
          type: boolean
      example:
        success: true
        id: id
    inline_response_200_36:
      type: object
      properties:
        reverse:
          type: array
          items:
            $ref: '#/components/schemas/Oauth_reverse_transaction'
      example:
        reverse:
        - indicator: indicator
          date:
            reversal_date: reversal_date
          amount: amount
          receiver_vpa: receiver_vpa
          card_number: card_number
          sender_vpa: sender_vpa
          currency: currency
          details:
            tt: tt
            pp: pp
            ref_id: ref_id
            amount: 0.8008281904610115
            total: 1
            is_custom_ref_id: is_custom_ref_id
            fee: 6.027456183070403
            payment_ref: payment_ref
          id: id
          type: type
          status: status
        - indicator: indicator
          date:
            reversal_date: reversal_date
          amount: amount
          receiver_vpa: receiver_vpa
          card_number: card_number
          sender_vpa: sender_vpa
          currency: currency
          details:
            tt: tt
            pp: pp
            ref_id: ref_id
            amount: 0.8008281904610115
            total: 1
            is_custom_ref_id: is_custom_ref_id
            fee: 6.027456183070403
            payment_ref: payment_ref
          id: id
          type: type
          status: status
    inline_response_200_37:
      required:
      - transactions
      type: object
      properties:
        transactions:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Funds.v1'
      example:
        transactions:
        - ref_id: ref_id
          id: id
          status: waiting
        - ref_id: ref_id
          id: id
          status: waiting
    consumer_funds_body:
      required:
      - ids
      type: object
      properties:
        ids:
          minLength: 1
          type: string
          description: Reference identifiers for the credit transaction(s). Multiple
            identifiers in CSV format are accepted.
    inline_response_200_38:
      type: object
      properties:
        transactions:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Transaction_oauth_funds'
      example:
        transactions:
        - ref_id: ref_id
          sor_transaction:
            description: description
            id: id
          description: description
          id: id
          status: status
        - ref_id: ref_id
          sor_transaction:
            description: description
            id: id
          description: description
          id: id
          status: status
      x-examples:
        example-1:
          transactions:
          - id: 5c70dd6ded3aef68573eeb8efba3c9525e579d9040d3e8c6d470f90594e90e2c
            ref_id: INTRAIMERCHANT000000C5680006F12B
            status: success
            description: |
              Credit Successful for ref_id 5c70dd6ded3aef68573eeb8efba3c9525e579d9040d3e8c6d470f90594e90e2c
            sor_transaction:
              id: BANKISO-3d49cab7-f7c2-430f-7c54-337519c5fa46
              description: Transaction Successful
    consumer_funds_body_1:
      required:
      - ids
      type: object
      properties:
        ids:
          minLength: 1
          type: string
          description: Reference identifiers for the debit transaction(s). Multiple
            identifiers in CSV format are accepted.
    inline_response_200_39:
      type: object
      properties:
        transactions:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Transaction_oauth_funds'
      example:
        transactions:
        - ref_id: ref_id
          sor_transaction:
            description: description
            id: id
          description: description
          id: id
          status: status
        - ref_id: ref_id
          sor_transaction:
            description: description
            id: id
          description: description
          id: id
          status: status
      x-examples:
        example-1:
          transactions:
          - id: 5c70dd6ded3aef68573eeb8efba3c9525e579d9040d3e8c6d470f90594e90e2c
            ref_id: INTRAIMERCHANT000000C5680006F12B
            status: success
            description: |
              Debit Successful for ref_id 5c70dd6ded3aef68573eeb8efba3c9525e579d9040d3e8c6d470f90594e90e2c
            sor_transaction:
              id: BANKISO-3d49cab7-f7c2-430f-7c54-337519c5fa46
              description: Transaction Successful
    inline_response_200_40:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          $ref: '#/components/schemas/User_name.v1'
        mobile:
          $ref: '#/components/schemas/User_mobile.v1'
        links:
          type: array
          items: {}
        status:
          $ref: Card_full.v1_status
        date:
          $ref: '#/components/schemas/inline_response_200_40_date'
      example:
        date:
          registration: registration
        name:
          middle: middle
          last: last
          first: first
          preferred: preferred
        mobile:
          country_code: country_code
          number: number
        links:
        - ""
        - ""
        id: id
        email: email
        status:
          is_active: true
          text: text
    inline_response_200_41:
      type: object
      properties:
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency.v1'
      example:
        currencies:
        - date:
            added: ""
          code: code
          name: name
          id: id
          type: type
        - date:
            added: ""
          code: code
          name: name
          id: id
          type: type
    inline_response_200_42:
      type: object
      properties:
        total_pages:
          type: number
          example: 10
        records_per_page:
          type: number
          example: 10
        page:
          type: string
          example: "2"
        total_records:
          type: number
          example: 100
        links:
          $ref: '#/components/schemas/inline_response_200_42_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Virtual_account.v1'
      example:
        records_per_page: 10
        data:
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        total_records: 100
        links:
          next: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/virtual_accounts?page=10&records_per_page=10
          prev: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/virtual_accounts?page=1&records_per_page=10
        total_pages: 10
        page: "2"
    inline_response_200_43:
      type: object
      properties:
        total_pages:
          type: number
          example: 10
        records_per_page:
          type: number
          example: 10
        page:
          type: number
          example: 2
        total_records:
          type: number
          example: 100
        links:
          $ref: '#/components/schemas/inline_response_200_43_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Virtual_account.v1'
      example:
        records_per_page: 10
        data:
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        total_records: 100
        links:
          next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/virtual_accounts?page=10&records_per_page=10
          prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/virtual_accounts?page=1&records_per_page=10
        total_pages: 10
        page: 2
    inline_response_200_44:
      type: object
      properties:
        total_records:
          type: integer
        records_per_page:
          type: integer
        total_pages:
          type: integer
        page:
          type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/Transaction_links.v1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Virtual_account_transaction'
      example:
        records_per_page: 6
        data:
        - amount: amount
          updated_at: updated_at
          total_amount: total_amount
          user_details: ""
          fee: fee
          created_at: created_at
          currency: currency
          process_type: process_type
          details:
            journal_id: journal_id
            bank_ref: bank_ref
            topup_type: topup_type
            customer_ref: customer_ref
            virtual_account_number: virtual_account_number
          id: 5
          status: status
        - amount: amount
          updated_at: updated_at
          total_amount: total_amount
          user_details: ""
          fee: fee
          created_at: created_at
          currency: currency
          process_type: process_type
          details:
            journal_id: journal_id
            bank_ref: bank_ref
            topup_type: topup_type
            customer_ref: customer_ref
            virtual_account_number: virtual_account_number
          id: 5
          status: status
        total_records: 0
        links:
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        - method: GET
          rel: prev
          href: http://example.com/aeiou
        total_pages: 1
        page: 5
    inline_response_200_45:
      type: object
      properties:
        total_pages:
          type: number
          example: 10
        records_per_page:
          type: number
          example: 10
        page:
          type: number
          example: 1
        total_records:
          type: number
          example: 100
        links:
          $ref: '#/components/schemas/inline_response_200_45_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Bank_account.v1'
      example:
        records_per_page: 10
        data:
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        total_records: 100
        links:
          next: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/bank_accounts?page=10&records_per_page=10
          prev: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/bank_accounts?page=1&records_per_page=10
        total_pages: 10
        page: 1
    wallets_bank_accounts_body:
      required:
      - bank_account_number
      - bank_code
      - bank_holder_name
      type: object
      properties:
        bank_account_number:
          type: string
          example: "5543213121"
        bank_holder_name:
          type: string
          example: Test Creditor name
        bank_code:
          type: string
          example: ANZBSGS0XXX
    wallets_bank_accounts_body_1:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Bank Hash ID
          format: uuid
    inline_response_200_46:
      type: object
      properties:
        status:
          type: string
          example: deleted
      example:
        status: deleted
    inline_response_200_47:
      type: object
      properties:
        total_pages:
          type: number
          example: 10
        records_per_page:
          type: number
          example: 10
        page:
          type: string
          example: "2"
        total_records:
          type: number
          example: 100
        links:
          $ref: '#/components/schemas/inline_response_200_47_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Bank_account.v1'
      example:
        records_per_page: 10
        data:
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        - account_number: 0.8008281904610115
          updated_at: 2000-01-23
          reversal_destination:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
          created_at: 2000-01-23
          status: status
        total_records: 100
        links:
          next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/bank_accounts?page=10&records_per_page=10
          prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/bank_accounts?page=1&records_per_page=10
        total_pages: 10
        page: "2"
    wallets_standing_instructions_body:
      required:
      - bank_account_id
      - status
      type: object
      properties:
        bank_account_id:
          type: string
          format: uuid
        status:
          type: string
          example: under-review
          enum:
          - pending
          - under-review
          - approved
          - revoked
    wallets_standing_instructions_body_1:
      required:
      - bank_account_id
      - consent_full_name
      - consent_numbers
      - consent_sign
      - date_application
      - date_expiry
      - maximum_debitable_amount
      - number
      - status
      type: object
      properties:
        bank_account_id:
          type: string
          format: uuid
        number:
          type: number
          format: int64
          example: 22222222222222228
        maximum_debitable_amount:
          type: string
          example: "10000"
        date_application:
          type: string
          description: Example 2020-01-01 12:00:00
          example: 2020-01-01 12:00:00
        date_expiry:
          type: string
          description: Example 2020-01-01
          example: 2020-12-30
        status:
          type: string
          enum:
          - pending
          - under-review
          - approved
          - revoked
        consent_full_name:
          type: string
        consent_numbers:
          type: string
        consent_sign:
          type: string
    wallets_standing_instructions_body_2:
      required:
      - bank_account_id
      type: object
      properties:
        bank_account_id:
          type: string
          format: uuid
    inline_response_200_48:
      type: object
      properties:
        total_pages:
          type: number
          example: 10
        records_per_page:
          type: number
          example: 10
        page:
          type: string
          example: "2"
        total_records:
          type: number
          example: 100
        links:
          $ref: '#/components/schemas/inline_response_200_48_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Standing_instruction.v1'
      example:
        records_per_page: 10
        data:
        - date_application: 2020-07-01 12:00:00
          bank_account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          number: 0.8008281904610115
          maximum_debitable_amount: maximum_debitable_amount
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          date_expiry: 2020-12-01
          consent_details:
            full_name: full_name
            numbers: numbers
            sign: sign
          status: pending
        - date_application: 2020-07-01 12:00:00
          bank_account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          number: 0.8008281904610115
          maximum_debitable_amount: maximum_debitable_amount
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          date_expiry: 2020-12-01
          consent_details:
            full_name: full_name
            numbers: numbers
            sign: sign
          status: pending
        total_records: 100
        links:
          next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/standing_instructions?page=10&records_per_page=10
          prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/standing_instructions?page=1&records_per_page=10
        total_pages: 10
        page: "2"
    fund_transfers_debit_body:
      required:
      - amount
      - bank_account_id
      - client_ref_id
      - currency
      - purpose_of_transfer
      type: object
      properties:
        bank_account_id:
          type: string
          format: uuid
        client_ref_id:
          type: string
          example: test1234
        amount:
          type: number
          format: int64
          example: 1000
        currency:
          type: string
          example: SGD
        purpose_of_transfer:
          type: string
          example: Test Transfer
    fund_transfers_credit_body:
      required:
      - amount
      - bank_account_id
      - client_ref_id
      - currency
      - purpose_of_transfer
      type: object
      properties:
        bank_account_id:
          type: string
          format: uuid
        client_ref_id:
          type: string
          example: test1234
        amount:
          type: number
          format: int64
          example: 1000
        currency:
          type: string
          description: The currency of the application.
          example: SGD
        purpose_of_transfer:
          type: string
          example: Test Transfer
    inline_response_200_49:
      type: object
      properties:
        total_pages:
          type: number
          example: 10
        records_per_page:
          type: number
          example: 10
        page:
          type: string
          example: "2"
        total_records:
          type: number
          example: 100
        links:
          $ref: '#/components/schemas/inline_response_200_49_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Fund_transfer.v1'
      example:
        records_per_page: 10
        data:
        - client_ref_id: client_ref_id
          updated_at: 2000-01-23
          purpose_of_transfer: purpose_of_transfer
          description: description
          created_at: 2000-01-23
          currency: currency
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          transfer_type: transfer_type
          unique_payment_id: unique_payment_id
          status: success
          bank_account:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
        - client_ref_id: client_ref_id
          updated_at: 2000-01-23
          purpose_of_transfer: purpose_of_transfer
          description: description
          created_at: 2000-01-23
          currency: currency
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          transfer_type: transfer_type
          unique_payment_id: unique_payment_id
          status: success
          bank_account:
            bank_code: bank_code
            bank_account_number: bank_account_number
            id: id
            bank_holder_name: bank_holder_name
        total_records: 100
        links:
          next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/fund_transfers?page=10&records_per_page=10
          prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/fund_transfers?page=1&records_per_page=10
        total_pages: 10
        page: "2"
    id_attachment_body:
      type: object
      properties:
        data:
          type: string
          description: Base64 encoded of the document to attach
        document_type:
          type: string
          description: "Document type to attach, should be supported on (#get-oauth-consumers-funds-transfers-overseas-attachment-form)"
          example: invoice
        document_name:
          type: string
          description: Document name to attach
          example: Overseas Invoice
    inline_response_200_50:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/Remittance_details.v1'
      example:
        history:
        - ref_id: ref_id
          date: date
          transaction_code: transaction_code
          status_code: status_code
          attachments:
            method: method
            rel: rel
            href: href
          receiver: ""
          type: type
          client_ref_id: client_ref_id
          confirm: confirm
          client_key: client_key
          sender:
            mobile: mobile
            last_name: last_name
            middle_name: middle_name
            first_name: first_name
          details:
            routing_param: routing_param
            fees: fees
            actual_provider_amount_to_send: actual_provider_amount_to_send
            amount_details:
              send_details:
                amount: amount
                subscription_pricing: true
                total_amount: total_amount
                total_fee: total_fee
                fixed_fee: fixed_fee
                currency: currency
                tax: tax
                rails_fee: rails_fee
              receive_amounts:
                amount: amount
                total_amount: total_amount
                total_fee: total_fee
                fixed_fee: fixed_fee
                currency: currency
                tax: tax
                rails_fee: rails_fee
            receive_currency: receive_currency
            calculation_mode: calculation_mode
            provider_amount_fee_ccy: provider_amount_fee_ccy
            send_amount_provided_by_rails_ccy: send_amount_provided_by_rails_ccy
            amount_sent: amount_sent
            amount_to_receive: amount_to_receive
            payout_agent: payout_agent
            bank_branch_name: bank_branch_name
            provider: provider
            delivery_method: delivery_method
            customer_fx_percentage: customer_fx_percentage
            bank_name: bank_name
            provider_amount_to_send_ccy: provider_amount_to_send_ccy
            actual_provider_amount_to_send_ccy: actual_provider_amount_to_send_ccy
            transaction_id: transaction_id
            transaction_code: transaction_code
            bank_code: bank_code
            exchange_rate: exchange_rate
            provider_amount_fee: provider_amount_fee
            amount_after_fx_percentage_ccy: amount_after_fx_percentage_ccy
            send_amount_provided_by_rails: send_amount_provided_by_rails
            cross_currency_rates: cross_currency_rates
            amount_before_fx_percentage: amount_before_fx_percentage
            amount_after_fx_percentage: amount_after_fx_percentage
            provider_amount_to_send: provider_amount_to_send
            send_currency: send_currency
            amount_before_fx_percentage_ccy: amount_before_fx_percentage_ccy
            bank_branch_code: bank_branch_code
            amount_deducted: amount_deducted
            receive_country: receive_country
          status_text: status_text
          document_reference_number: document_reference_number
          remarks: remarks
          date_expiry: date_expiry
        - ref_id: ref_id
          date: date
          transaction_code: transaction_code
          status_code: status_code
          attachments:
            method: method
            rel: rel
            href: href
          receiver: ""
          type: type
          client_ref_id: client_ref_id
          confirm: confirm
          client_key: client_key
          sender:
            mobile: mobile
            last_name: last_name
            middle_name: middle_name
            first_name: first_name
          details:
            routing_param: routing_param
            fees: fees
            actual_provider_amount_to_send: actual_provider_amount_to_send
            amount_details:
              send_details:
                amount: amount
                subscription_pricing: true
                total_amount: total_amount
                total_fee: total_fee
                fixed_fee: fixed_fee
                currency: currency
                tax: tax
                rails_fee: rails_fee
              receive_amounts:
                amount: amount
                total_amount: total_amount
                total_fee: total_fee
                fixed_fee: fixed_fee
                currency: currency
                tax: tax
                rails_fee: rails_fee
            receive_currency: receive_currency
            calculation_mode: calculation_mode
            provider_amount_fee_ccy: provider_amount_fee_ccy
            send_amount_provided_by_rails_ccy: send_amount_provided_by_rails_ccy
            amount_sent: amount_sent
            amount_to_receive: amount_to_receive
            payout_agent: payout_agent
            bank_branch_name: bank_branch_name
            provider: provider
            delivery_method: delivery_method
            customer_fx_percentage: customer_fx_percentage
            bank_name: bank_name
            provider_amount_to_send_ccy: provider_amount_to_send_ccy
            actual_provider_amount_to_send_ccy: actual_provider_amount_to_send_ccy
            transaction_id: transaction_id
            transaction_code: transaction_code
            bank_code: bank_code
            exchange_rate: exchange_rate
            provider_amount_fee: provider_amount_fee
            amount_after_fx_percentage_ccy: amount_after_fx_percentage_ccy
            send_amount_provided_by_rails: send_amount_provided_by_rails
            cross_currency_rates: cross_currency_rates
            amount_before_fx_percentage: amount_before_fx_percentage
            amount_after_fx_percentage: amount_after_fx_percentage
            provider_amount_to_send: provider_amount_to_send
            send_currency: send_currency
            amount_before_fx_percentage_ccy: amount_before_fx_percentage_ccy
            bank_branch_code: bank_branch_code
            amount_deducted: amount_deducted
            receive_country: receive_country
          status_text: status_text
          document_reference_number: document_reference_number
          remarks: remarks
          date_expiry: date_expiry
    transfers_overseas_body:
      type: object
      properties:
        ids:
          type: string
          description: Reference identifiers for the overseas transfer transaction(s).
            Multiple identifiers in CSV format are accepted.
    inline_response_200_51:
      required:
      - transactions
      type: object
      properties:
        transactions:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_51_transactions'
      example:
        transactions:
        - description: description
          details:
          - transaction_code: transaction_code
            partner_confirmation_number: partner_confirmation_number
            unique_reference_number: unique_reference_number
          - transaction_code: transaction_code
            partner_confirmation_number: partner_confirmation_number
            unique_reference_number: unique_reference_number
          id: id
          status: status
        - description: description
          details:
          - transaction_code: transaction_code
            partner_confirmation_number: partner_confirmation_number
            unique_reference_number: unique_reference_number
          - transaction_code: transaction_code
            partner_confirmation_number: partner_confirmation_number
            unique_reference_number: unique_reference_number
          id: id
          status: status
    inline_response_200_52:
      oneOf:
      - $ref: '#/components/schemas/Remittance_calculate.v1'
      - $ref: '#/components/schemas/Remittance_send.v1'
    inline_response_200_53:
      type: object
      properties:
        category_name:
          $ref: '#/components/schemas/User_limit.v1'
      example:
        category_name:
          enable: true
          program_limits:
            post_kyc:
            - amount: 5.637376656633329
              count: 2.3021358869347655
              interval: interval
            - amount: 5.637376656633329
              count: 2.3021358869347655
              interval: interval
            pre_kyc:
            - amount: 1.4658129805029452
              count: 5.962133916683182
              interval: interval
            - amount: 1.4658129805029452
              count: 5.962133916683182
              interval: interval
          id: id
          card_limits:
          - amount: 0.8008281904610115
            count: 6.027456183070403
            interval: interval
          - amount: 0.8008281904610115
            count: 6.027456183070403
            interval: interval
          user_details_set: true
    limits_detail_body:
      type: object
      properties:
        card_hash_id:
          type: string
        user_hash_id:
          type: string
        transaction_amount:
          type: number
        amount:
          type: number
        card_currency:
          type: string
        transaction_currency:
          type: string
        channel:
          type: string
          enum:
          - atm
          - ecom
          - pos
        pos_entry_mode_value:
          type: string
        acquiring_country_code:
          type: string
        network:
          type: string
        merchant_category_code:
          type: string
        merchant_id:
          type: string
        terminal_id:
          type: string
    inline_response_200_54:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Remittance_agent.v1'
        count:
          $ref: '#/components/schemas/inline_response_200_54_count'
        link:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_54_link'
      example:
        count:
          total: 0
        link:
        - method: method
          rel: rel
          href: href
        - method: method
          rel: rel
          href: href
        agents:
        - country_code: country_code
          exchanges_rate:
            expiry: expiry
            value: value
          payment_mode:
            code: code
            description: description
          fees:
            fx_markup: fx_markup
            fixed_fee: fixed_fee
          receive_currency: receive_currency
          receiving_agent_type: consumer
          agent_id: agent_id
          exchange_rate: exchange_rate
          provider: provider
          links:
          - method: method
            rel: rel
            href: href
          - method: method
            rel: rel
            href: href
          agent_details:
            routing_param: routing_param
            payment_mode: payment_mode
            receive_currency: receive_currency
            agent_id: agent_id
            calculation_mode: calculation_mode
            routing_type: routing_type
            partner_name: partner_name
            min_amount: min_amount
            priority: priority
            send_currency: send_currency
            provider_currency: provider_currency
            max_amount: max_amount
            receive_country: receive_country
          display_name: display_name
        - country_code: country_code
          exchanges_rate:
            expiry: expiry
            value: value
          payment_mode:
            code: code
            description: description
          fees:
            fx_markup: fx_markup
            fixed_fee: fixed_fee
          receive_currency: receive_currency
          receiving_agent_type: consumer
          agent_id: agent_id
          exchange_rate: exchange_rate
          provider: provider
          links:
          - method: method
            rel: rel
            href: href
          - method: method
            rel: rel
            href: href
          agent_details:
            routing_param: routing_param
            payment_mode: payment_mode
            receive_currency: receive_currency
            agent_id: agent_id
            calculation_mode: calculation_mode
            routing_type: routing_type
            partner_name: partner_name
            min_amount: min_amount
            priority: priority
            send_currency: send_currency
            provider_currency: provider_currency
            max_amount: max_amount
            receive_country: receive_country
          display_name: display_name
    inline_response_200_55:
      properties:
        sender_form:
          type: array
          description: For consumer payout agents
          items:
            $ref: '#/components/schemas/Remittance_beneficiary_form.v1'
        sending_business:
          type: array
          description: For corporate payout agents
          items:
            $ref: '#/components/schemas/Remittance_beneficiary_form.v1'
        beneficiary_form:
          type: array
          description: For both consumer and corporate payout agents
          items:
            $ref: '#/components/schemas/Remittance_beneficiary_form.v1'
        additional_fields:
          type: array
          description: For both consumer and corporate payout agents
          items:
            $ref: '#/components/schemas/Remittance_beneficiary_form.v1'
      example:
        sender_form:
        - field_key: field_key
          field_group_name: field_group_name
          values_supported:
          - name: name
            value: value
          - name: name
            value: value
          type: type
          validation:
            is_required: is_required
            max_length: 0
          field_name: field_name
        - field_key: field_key
          field_group_name: field_group_name
          values_supported:
          - name: name
            value: value
          - name: name
            value: value
          type: type
          validation:
            is_required: is_required
            max_length: 0
          field_name: field_name
        additional_fields:
        - null
        - null
        sending_business:
        - null
        - null
        beneficiary_form:
        - null
        - null
    Amount_details.v1_country:
      type: object
      properties:
        code:
          type: string
      example:
        code: code
    Balance_category.v1_CATEGORY_NAME:
      type: object
      properties:
        available:
          $ref: '#/components/schemas/Balance_root.v1'
        withholding:
          $ref: '#/components/schemas/Balance_root.v1'
      example:
        withholding: null
        available: null
    Bank_account.v1_reversal_destination:
      type: object
      properties:
        id:
          type: string
        bank_account_number:
          type: string
        bank_holder_name:
          type: string
        bank_code:
          type: string
      example:
        bank_code: bank_code
        bank_account_number: bank_account_number
        id: id
        bank_holder_name: bank_holder_name
    Basic_enumeration_identification_description:
      type: object
      properties:
        processor_regex_validation:
          type: string
        max_duplicate:
          type: number
        regex_validation:
          type: string
        display_name:
          type: string
        masking:
          type: boolean
    Card_full.v1_holder:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    Card_full.v1_type:
      type: object
      properties:
        type:
          type: string
          description: One of the card types available via GET /users/wallets/cards/types
        name:
          type: string
        description:
          type: string
        form_factor:
          type: string
          enum:
          - physical
          - virtual
        personalised_order:
          type: boolean
      example:
        name: name
        personalised_order: true
        description: description
        type: type
        form_factor: physical
    Card_full.v1_token:
      type: object
      properties:
        type:
          type: string
        generation:
          type: string
          enum:
          - static
          - dynamic
      example:
        generation: static
        type: type
    Card_full.v1_date:
      type: object
      properties:
        expiry:
          pattern: "([0-9]{4})-(?:[0-9]{2})"
          type: string
          default: YYYY-MM
        issued:
          type: string
          format: date
        closed:
          type: string
          nullable: true
      example:
        closed: closed
        expiry: YYYY-MM
        issued: 2000-01-23
    Card_full.v1_status:
      type: object
      properties:
        is_active:
          type: boolean
        text:
          type: string
      example:
        is_active: true
        text: text
    Card_full.v1_funds:
      type: object
      properties:
        available:
          $ref: '#/components/schemas/Balance_root.v1'
        withholding:
          $ref: '#/components/schemas/Balance_root.v1'
        categories:
          $ref: '#/components/schemas/Balance_category.v1'
      example:
        withholding: null
        available:
          amount: amount
          name: name
          currency: currency
        categories:
          CATEGORY_NAME:
            withholding: null
            available: null
          DEFAULT:
            withholding: null
            available: null
    Card_full.v1_links:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        method:
          type: string
      example:
        method: method
        rel: rel
        href: href
    Card_limits_response.v1_card_type_issuance_limits_pre_kyc:
      type: object
      properties:
        allowed:
          type: boolean
          description: Card issuance is allowed or not
        daily_count_limit:
          type: number
          description: Number of cards can be created daily for pre kyc user
        weekly_count_limit:
          type: number
          description: Number of cards can be created weekly for pre kyc user
        monthly_count_limit:
          type: number
          description: Number of cards can be created monthly for pre kyc user
        yearly_count_limit:
          type: number
          description: Number of cards can be created yearly for pre kyc user
        lifetime_count_limit:
          type: number
          description: Number of cards can be created lifetime for pre kyc user
    Card_limits_response.v1_card_type_issuance_limits_post_kyc:
      type: object
      properties:
        allowed:
          type: boolean
          description: Card issuance is allowed or not
        daily_count_limit:
          type: number
          description: Number of cards can be created daily for post kyc user
        weekly_count_limit:
          type: number
          description: Number of cards can be created weekly for post kyc user
        monthly_count_limit:
          type: number
          description: Number of cards can be created monthly for post kyc user
        yearly_count_limit:
          type: number
          description: Number of cards can be created yearly for post kyc user
        lifetime_count_limit:
          type: number
          description: Number of cards can be created lifetime for post kyc user
    Card_limits_response.v1_card_type_issuance_limits:
      type: object
      properties:
        pre_kyc:
          $ref: '#/components/schemas/Card_limits_response.v1_card_type_issuance_limits_pre_kyc'
        post_kyc:
          $ref: '#/components/schemas/Card_limits_response.v1_card_type_issuance_limits_post_kyc'
        rules:
          type: array
          items:
            type: string
      description: Number of cards can be issued to a particular user
    Card_limits_response.v1_card_type_active_limits:
      type: object
      properties:
        allowed:
          type: boolean
          description: Card issuance is allowed or not
        pre_kyc:
          type: number
          description: Number of active cards for pre kyc user
        statuses:
          type: array
          items:
            type: string
            description: Statuses that need to be taken care for active limits
        post_kyc:
          type: number
          description: Number of active cards for post kyc user
    Card_limits_response.v1_card_type:
      type: object
      properties:
        issuance_limits:
          $ref: '#/components/schemas/Card_limits_response.v1_card_type_issuance_limits'
        active_limits:
          $ref: '#/components/schemas/Card_limits_response.v1_card_type_active_limits'
    Card_type.v1_types:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        form_factor:
          type: string
          enum:
          - physical
          - virtual
        personalised_order:
          type: boolean
        token:
          $ref: Card_full.v1_token
        currency:
          type: array
        image:
          $ref: '#/components/schemas/Card_image.v1'
        details:
          $ref: '#/components/schemas/Payment_instrument_details.v1'
      example:
        image:
          small: http://example.com/aeiou
          large: http://example.com/aeiou
          medium: http://example.com/aeiou
        code: code
        name: name
        personalised_order: true
        description: description
        currency: ""
        details:
          active_limits:
            post_kyc: 9.965781217890562
            allowed: 4.965218492984954
            pre_kyc: 5.025004791520295
            statuses:
            - statuses
            - statuses
          transfer_in_limits: null
          min_load_limit: 0.8008281904610115
          fee: fee
          fee_currency: fee_currency
          topup_limits:
            post_kyc: null
            user_limits: null
            pre_kyc:
              lifetime_count_limit: 5.962133916683182
              daily_transactional_limit: 7.061401241503109
              allowed: 1.4658129805029452
              daily_count_limit: 2.3021358869347655
              weekly_count_limit: 9.301444243932576
              monthly_transactional_limit: 4.145608029883936
              weekly_transactional_limit: 3.616076749251911
              lifetime_transactional_limit: 5.637376656633329
              monthly_count_limit: 2.027123023002322
              unit_transaction_limit: 7.386281948385884
          max_count: max_count
          transfer_out_limits: null
          deduct_limits:
            post_kyc: null
            user_limits: null
            pre_kyc:
              lifetime_count_limit: 5.962133916683182
              daily_transactional_limit: 7.061401241503109
              allowed: 1.4658129805029452
              daily_count_limit: 2.3021358869347655
              weekly_count_limit: 9.301444243932576
              monthly_transactional_limit: 4.145608029883936
              weekly_transactional_limit: 3.616076749251911
              lifetime_transactional_limit: 5.637376656633329
              monthly_count_limit: 2.027123023002322
              unit_transaction_limit: 7.386281948385884
          issuance_limits:
            post_kyc: null
            pre_kyc:
              lifetime_count_limit: 1.1730742509559433
              yearly_count_limit: 7.457744773683766
              allowed: 1.2315135367772556
              daily_count_limit: 1.0246457001441578
              weekly_count_limit: 1.4894159098541704
              monthly_count_limit: 6.84685269835264
            rules:
            - rules
            - rules
          network_type: mastercard
          load_limits: null
          unload_limits: null
          max_load_limit: 6.027456183070403
        form_factor: physical
        token:
          generation: static
          type: type
    Closed_loop.v1_links:
      type: object
      properties:
        self:
          type: string
          example: https://example.xom/v1/oauth/consumer/search/users?page=2&records_per_page=10
        next:
          type: string
          example: https://example.xom/v1/oauth/consumer/search/users?page=4&records_per_page=10
        previous:
          type: string
          example: https://example.xom/v1/oauth/consumer/search/users?page=1&records_per_page=10
      example:
        next: https://example.xom/v1/oauth/consumer/search/users?page=4&records_per_page=10
        previous: https://example.xom/v1/oauth/consumer/search/users?page=1&records_per_page=10
        self: https://example.xom/v1/oauth/consumer/search/users?page=2&records_per_page=10
    Closed_loop_transactions.v1_payment_instrument_source_sender:
      type: object
      properties:
        sender_type:
          type: string
          description: Sender Type; email or mobile
        email:
          type: string
          description: Will show if sender_type = email
        mobile:
          type: string
          description: Will show if sender_type = mobile
      description: "This will only show for transaction type = Transfer, show sender\
        \ details"
      example:
        sender_type: sender_type
        mobile: mobile
        email: email
    Closed_loop_transactions.v1_payment_instrument_source:
      type: object
      properties:
        source_type:
          type: string
          description: Source Type; wallet or card
        hash_id:
          type: string
          description: Wallet or Card Hash ID
        proxy_number:
          type: string
          description: Wallet or Card Proxy Number
        number:
          type: string
          description: Wallet or Card Masked Card Number
        state:
          type: string
          description: Wallet or Card Status
        sender:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_payment_instrument_source_sender'
      example:
        number: number
        sender:
          sender_type: sender_type
          mobile: mobile
          email: email
        proxy_number: proxy_number
        source_type: source_type
        state: state
        hash_id: hash_id
    Closed_loop_transactions.v1_payment_instrument_destination_receiver:
      type: object
      properties:
        receiver_type:
          type: string
          description: Receiver Type; email or mobile
        email:
          type: string
          description: Will show if receiver_type = email
        mobile:
          type: string
          description: Will show if receiver_type = mobile
      description: "This will only show for transaction type = Transferr, show receiver\
        \ details"
      example:
        mobile: mobile
        email: email
        receiver_type: receiver_type
    Closed_loop_transactions.v1_payment_instrument_destination:
      type: object
      properties:
        destination_type:
          type: string
          description: Source Type; wallet or card
        hash_id:
          type: string
          description: Wallet or Card Hash ID
        proxy_number:
          type: string
          description: Wallet or Card Proxy Number
        number:
          type: string
          description: Wallet or Card Masked Card Number
        state:
          type: string
          description: Wallet or Card Status
        receiver:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_payment_instrument_destination_receiver'
      example:
        number: number
        destination_type: destination_type
        receiver:
          mobile: mobile
          email: email
          receiver_type: receiver_type
        proxy_number: proxy_number
        state: state
        hash_id: hash_id
    Closed_loop_transactions.v1_payment_instrument:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_payment_instrument_source'
        destination:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_payment_instrument_destination'
      example:
        destination:
          number: number
          destination_type: destination_type
          receiver:
            mobile: mobile
            email: email
            receiver_type: receiver_type
          proxy_number: proxy_number
          state: state
          hash_id: hash_id
        source:
          number: number
          sender:
            sender_type: sender_type
            mobile: mobile
            email: email
          proxy_number: proxy_number
          source_type: source_type
          state: state
          hash_id: hash_id
    Closed_loop_transactions.v1_details_original_transaction:
      type: object
      properties:
        transaction_type:
          type: string
          description: Transaction Type
        ref_hash:
          type: string
          description: Transaction Reference Hash
        currency:
          type: string
          description: Transaction Currency
        amount:
          type: number
          description: Transaction Amount
          format: float
      description: This will only show for reversal and refund transaction type
      example:
        amount: 1.4658129
        currency: currency
        transaction_type: transaction_type
        ref_hash: ref_hash
    Closed_loop_transactions.v1_details:
      type: object
      properties:
        type:
          type: string
          description: Debit/Credit indicator
        ref_hash:
          type: string
          description: Transaction Reference Identifier
        currency:
          type: string
          description: Transaction Currency
        amount:
          type: number
          description: Transaction Amount
          format: float
        balance:
          type: number
          description: Wallet or card current balance based on the transaction
          format: float
        status:
          type: string
          description: Transaction Status
        date:
          type: string
          description: Transaction Date Added
        additional_information:
          type: string
          description: "Additional information of a particular transaction, values\
            \ can be different depending on transaction type"
        original_transaction:
          $ref: '#/components/schemas/Closed_loop_transactions.v1_details_original_transaction'
      example:
        date: date
        additional_information: additional_information
        amount: 0.8008282
        original_transaction:
          amount: 1.4658129
          currency: currency
          transaction_type: transaction_type
          ref_hash: ref_hash
        balance: 6.0274563
        currency: currency
        type: type
        ref_hash: ref_hash
        status: status
    Currency.v1_date:
      type: object
      properties:
        added:
          type: date
          description: |
            ISO 8601 Added date
      example:
        added: ""
    Fund_categories_limit_request.v1_settings:
      type: object
      properties:
        duration:
          type: string
          description: Duration of the limit
        interval:
          type: string
          description: Interval of the limit
        value:
          type: string
          description: Value of the limit
      description: Limit settings
      example:
        duration: duration
        interval: interval
        value: value
    Fund_categories_limit_response.v1_date:
      type: object
      properties:
        updated:
          type: string
          description: When was limit last updated
        added:
          type: string
          description: When was limit last added
      description: Date Limit settings
      example:
        added: added
        updated: updated
    Get_kyc_providers_response.v1_providers:
      type: object
      properties:
        id:
          type: string
          description: Provider Hash ID
        code:
          type: string
          description: Provider Code
        user_type:
          type: string
          description: "Type of User (e.g customer, corporate, corporate_representative)"
        callback_url:
          type: string
          description: Callback URL
        details:
          type: object
          description: Additional Details
      example:
        callback_url: callback_url
        code: code
        user_type: user_type
        details: {}
        id: id
    Kyc_process_response.v1_links:
      type: object
      properties:
        method:
          type: string
          description: HTTP Link method
        href:
          type: string
          description: HTTP Link url (for the SDK)
        rel:
          type: string
          description: HTTP Link relationship
      example:
        method: method
        rel: rel
        href: href
    Oauth_reverse_transaction_details:
      type: object
      properties:
        amount:
          type: number
        fee:
          type: number
        total:
          type: integer
        tt:
          type: string
        pp:
          type: string
          nullable: true
        ref_id:
          type: string
        payment_ref:
          type: string
          nullable: true
        is_custom_ref_id:
          type: string
      example:
        tt: tt
        pp: pp
        ref_id: ref_id
        amount: 0.8008281904610115
        total: 1
        is_custom_ref_id: is_custom_ref_id
        fee: 6.027456183070403
        payment_ref: payment_ref
    Oauth_reverse_transaction_date:
      type: object
      properties:
        reversal_date:
          type: string
      example:
        reversal_date: reversal_date
    Payment_instrument_details.v1_topup_limits:
      type: object
      properties:
        pre_kyc:
          $ref: '#/components/schemas/Payment_limits.v1'
        post_kyc:
          $ref: '#/components/schemas/Payment_limits.v1'
        user_limits:
          $ref: '#/components/schemas/Payment_limits.v1'
      example:
        post_kyc: null
        user_limits: null
        pre_kyc:
          lifetime_count_limit: 5.962133916683182
          daily_transactional_limit: 7.061401241503109
          allowed: 1.4658129805029452
          daily_count_limit: 2.3021358869347655
          weekly_count_limit: 9.301444243932576
          monthly_transactional_limit: 4.145608029883936
          weekly_transactional_limit: 3.616076749251911
          lifetime_transactional_limit: 5.637376656633329
          monthly_count_limit: 2.027123023002322
          unit_transaction_limit: 7.386281948385884
    Remittance_agent.v1_payment_mode:
      type: object
      properties:
        code:
          type: string
          description: Code
        description:
          type: string
          description: Description
      example:
        code: code
        description: description
    Remittance_agent.v1_exchanges_rate:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: Exchange Rate value from rails
        expiry:
          type: string
          description: Exchange Rate expiry
      example:
        expiry: expiry
        value: value
    Remittance_agent.v1_fees:
      required:
      - fixed_fee
      - fx_markup
      type: object
      properties:
        fixed_fee:
          type: string
          description: Fixed fee value to deduct
        fx_markup:
          type: string
          description: FX Markup Percentage
      example:
        fx_markup: fx_markup
        fixed_fee: fixed_fee
    Remittance_agent.v1_agent_details:
      required:
      - agent_id
      - calculation_mode
      - partner_name
      - payment_mode
      - provider_currency
      - receive_country
      - receive_currency
      - routing_param
      - routing_type
      - send_currency
      type: object
      properties:
        agent_id:
          type: string
          description: Payout Agent Hash ID
        calculation_mode:
          type: string
          description: Calculation Mode - either source or receive
        payment_mode:
          type: string
          description: Assigned payout agent channel code
        routing_param:
          type: string
          description: Assigned payout agent routing param
        routing_type:
          type: string
          description: Assigned payout agent routing type
        provider_currency:
          type: string
          description: Supported rails currency
        send_currency:
          type: string
          description: ISO-4217 three-letter sending currency code
        receive_currency:
          type: string
          description: ISO-4217 three-letter receiving currency code
        receive_country:
          type: string
          description: ISO-3166 alpha-3 receiving country code
        partner_name:
          type: string
          description: Payout agent partner name - usually the bank name
        priority:
          type: string
          description: Assigned priority
        min_amount:
          type: string
          description: Minimum amount allowed for remittance transaction
        max_amount:
          type: string
          description: Maximum amount allowed for remittance transaction
      example:
        routing_param: routing_param
        payment_mode: payment_mode
        receive_currency: receive_currency
        agent_id: agent_id
        calculation_mode: calculation_mode
        routing_type: routing_type
        partner_name: partner_name
        min_amount: min_amount
        priority: priority
        send_currency: send_currency
        provider_currency: provider_currency
        max_amount: max_amount
        receive_country: receive_country
    Remittance_attachment_form.v1_validation:
      required:
      - is_required
      type: object
      properties:
        is_required:
          type: string
        mime_type:
          type: string
      example:
        is_required: is_required
        mime_type: mime_type
    Remittance_attachment_form.v1_fields:
      type: object
      properties:
        field_group_name:
          type: string
        field_name:
          type: string
        field_key:
          type: string
        type:
          type: string
        validation:
          $ref: '#/components/schemas/Remittance_attachment_form.v1_validation'
      example:
        field_key: field_key
        field_group_name: field_group_name
        type: type
        validation:
          is_required: is_required
          mime_type: mime_type
        field_name: field_name
    Remittance_attachments.v1_attachments:
      type: object
      properties:
        id:
          type: string
        document_type:
          type: string
        content_type:
          type: string
        document_name:
          type: string
        link:
          type: string
        created_at:
          type: string
      example:
        document_name: document_name
        content_type: content_type
        link: link
        created_at: created_at
        id: id
        document_type: document_type
    Remittance_basic_form.v1_key_validation:
      type: object
      properties:
        max_length:
          type: integer
        required:
          type: string
      example:
        required: required
        max_length: 0
    Remittance_basic_form.v1_key_values_supported:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: name
        value: value
    Remittance_basic_form.v1_key:
      type: object
      properties:
        key_name:
          type: string
        field_name:
          type: string
        field_key:
          type: string
        type:
          type: string
        validation:
          $ref: '#/components/schemas/Remittance_basic_form.v1_key_validation'
        values_supported:
          type: array
          items:
            $ref: Remittance_basic_form.v1_key_values_supported
      example:
        key_name: key_name
        field_key: field_key
        values_supported:
        - name: name
          value: value
        - name: name
          value: value
        type: type
        validation:
          required: required
          max_length: 0
        field_name: field_name
    Remittance_beneficiary_form.v1_validation:
      type: object
      properties:
        max_length:
          type: integer
        is_required:
          type: string
      example:
        is_required: is_required
        max_length: 0
    Remittance_calculate.v1_calculate_result_amount_details:
      type: object
      properties:
        send_details:
          $ref: '#/components/schemas/Amount_details.v2'
        receive_amounts:
          $ref: '#/components/schemas/Amount_details.v2'
      example:
        send_details:
          amount: amount
          subscription_pricing: subscription_pricing
          total_amount: total_amount
          total_fee: total_fee
          fixed_fee: fixed_fee
          currency: currency
          tax: tax
          rails_fee: rails_fee
        receive_amounts: null
    Remittance_calculate.v1_calculate_result:
      type: object
      properties:
        result_code:
          type: string
        initial_amount:
          type: string
        amount_to_send:
          type: string
        amount_to_send_currency:
          type: string
        amount_to_receive:
          type: string
        amount_to_receive_currency:
          type: string
        receive_currency:
          type: string
        provider_exchange_rate:
          type: string
        exchange_rate:
          type: string
        fixed_fee:
          type: string
        commission:
          type: string
        total_amount:
          type: string
        amount_to_be_deducted:
          type: string
        amount_details:
          $ref: '#/components/schemas/Remittance_calculate.v1_calculate_result_amount_details'
        quotation:
          $ref: '#/components/schemas/Remittance_quotation.v1'
        subscription_pricing:
          type: string
        required_fields:
          type: string
          description: "For new calculate endpoint, this will not be present on response.\
            \ Please check on beneficiary_form or sender_form if a particular field\
            \ is required or not"
        attachment_form:
          type: array
          items:
            $ref: '#/components/schemas/Remittance_basic_form.v1'
        sender_form:
          type: array
          items:
            $ref: '#/components/schemas/Remittance_basic_form.v1'
        beneficiary_form:
          type: array
          items:
            $ref: '#/components/schemas/Remittance_basic_form.v1'
      example:
        provider_exchange_rate: provider_exchange_rate
        amount_details:
          send_details:
            amount: amount
            subscription_pricing: subscription_pricing
            total_amount: total_amount
            total_fee: total_fee
            fixed_fee: fixed_fee
            currency: currency
            tax: tax
            rails_fee: rails_fee
          receive_amounts: null
        receive_currency: receive_currency
        amount_to_be_deducted: amount_to_be_deducted
        exchange_rate: exchange_rate
        amount_to_send: amount_to_send
        amount_to_receive_currency: amount_to_receive_currency
        fixed_fee: fixed_fee
        initial_amount: initial_amount
        amount_to_send_currency: amount_to_send_currency
        amount_to_receive: amount_to_receive
        beneficiary_form:
        - null
        - null
        required_fields: required_fields
        subscription_pricing: subscription_pricing
        total_amount: total_amount
        sender_form:
        - null
        - null
        result_code: result_code
        commission: commission
        attachment_form:
        - key:
            key_name: key_name
            field_key: field_key
            values_supported:
            - name: name
              value: value
            - name: name
              value: value
            type: type
            validation:
              required: required
              max_length: 0
            field_name: field_name
        - key:
            key_name: key_name
            field_key: field_key
            values_supported:
            - name: name
              value: value
            - name: name
              value: value
            type: type
            validation:
              required: required
              max_length: 0
            field_name: field_name
        quotation:
          receive: null
          provider_exchange_rate: provider_exchange_rate
          exchange_rate: exchange_rate
          quotation_id: quotation_id
          calculation_mode: calculation_mode
          initial:
            country:
              code: code
            amount: amount
            currency: currency
          date_created: date_created
          fee: null
          external_id: external_id
          transaction_type: transaction_type
          payout_agent: payout_agent
          subscription_pricing: true
          id: id
          send: null
          status: status
          date_expiry: date_expiry
    Remittance_corporate_receiver.v1_sending_business_address:
      type: object
      properties:
        address_1:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          $ref: Amount_details.v1_country
        zipcode:
          type: string
    Remittance_corporate_receiver.v1_sending_business_identification:
      type: object
      properties:
        number:
          type: string
        type:
          type: string
        country_of_issue:
          type: string
        issue_date:
          type: string
        expire_date:
          type: string
    Remittance_corporate_receiver.v1_sending_business_bank_account:
      type: object
      properties:
        name:
          type: string
        number:
          type: string
    Remittance_corporate_receiver.v1_sending_business_bank_branch:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
    Remittance_corporate_receiver.v1_sending_business_bank:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_sending_business_bank_account'
        branch:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_sending_business_bank_branch'
    Remittance_corporate_receiver.v1_sending_business:
      type: object
      properties:
        id:
          type: string
        ern:
          type: string
        registered_name:
          type: string
        trading_name:
          type: string
        email:
          type: string
        msisdn:
          type: string
        registration_number:
          type: string
        tax_id:
          type: string
        address:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_sending_business_address'
        representative_first_name:
          type: string
        representative_middle_name:
          type: string
        representative_last_name:
          type: string
        representative_last_name2:
          type: string
        representative_native_name:
          type: string
        identification:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_sending_business_identification'
        bank:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_sending_business_bank'
        payout_agent:
          type: string
        product:
          type: string
        created_by:
          type: string
        is_active:
          type: string
          format: number
        date_of_incorporation:
          type: string
    Remittance_corporate_receiver.v1_receiving_business_bank:
      type: object
      properties:
        account:
          $ref: Remittance_corporate_receiver.v1_sending_business_bank_account
        branch:
          $ref: Remittance_corporate_receiver.v1_sending_business_bank_branch
    Remittance_corporate_receiver.v1_receiving_business:
      type: object
      properties:
        id:
          type: string
        ern:
          type: string
        registered_name:
          type: string
        trading_name:
          type: string
        email:
          type: string
        msisdn:
          type: string
        registration_number:
          type: string
        tax_id:
          type: string
        address:
          $ref: Remittance_corporate_receiver.v1_sending_business_address
        representative_first_name:
          type: string
        representative_middle_name:
          type: string
        representative_last_name:
          type: string
        representative_last_name2:
          type: string
        representative_native_name:
          type: string
        identification:
          $ref: Remittance_corporate_receiver.v1_sending_business_identification
        bank:
          $ref: '#/components/schemas/Remittance_corporate_receiver.v1_receiving_business_bank'
        payout_agent:
          type: string
        product:
          type: string
        created_by:
          type: string
        is_active:
          type: string
          format: number
        date_of_incorporation:
          type: string
    Remittance_countries.v1_currency:
      type: object
      properties:
        code:
          type: string
          description: ISO-4217 three-letter currency code
        numeric:
          type: string
          description: ISO-4217 numeric currency code
      example:
        code: code
        numeric: numeric
    Remittance_countries.v1_countries:
      type: object
      properties:
        name:
          type: string
          description: Country Name
        code:
          type: string
          description: ISO-3166 alpha-3 country code
        currency:
          $ref: '#/components/schemas/Remittance_countries.v1_currency'
        agents:
          type: array
          items: {}
      example:
        code: code
        name: name
        currency:
          code: code
          numeric: numeric
        agents:
        - ""
        - ""
    Remittance_countries.v1_count:
      type: object
      properties:
        total:
          type: integer
          description: Total number of contries retrieved
      example:
        total: 0
    Remittance_details.v1_sender:
      type: object
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        mobile:
          type: string
      example:
        mobile: mobile
        last_name: last_name
        middle_name: middle_name
        first_name: first_name
    Remittance_details.v1_details_amount_details_send_details:
      type: object
      properties:
        total_amount:
          type: string
          format: number
        amount:
          type: string
          format: number
        currency:
          type: string
        total_fee:
          type: string
          format: number
        rails_fee:
          type: string
          format: number
        fixed_fee:
          type: string
          format: number
        tax:
          type: string
          format: number
        subscription_pricing:
          type: boolean
      example:
        amount: amount
        subscription_pricing: true
        total_amount: total_amount
        total_fee: total_fee
        fixed_fee: fixed_fee
        currency: currency
        tax: tax
        rails_fee: rails_fee
    Remittance_details.v1_details_amount_details_receive_amounts:
      type: object
      properties:
        total_amount:
          type: string
          format: number
        amount:
          type: string
          format: number
        currency:
          type: string
        total_fee:
          type: string
          format: number
        rails_fee:
          type: string
          format: number
        fixed_fee:
          type: string
          format: number
        tax:
          type: string
          format: number
      example:
        amount: amount
        total_amount: total_amount
        total_fee: total_fee
        fixed_fee: fixed_fee
        currency: currency
        tax: tax
        rails_fee: rails_fee
    Remittance_details.v1_details_amount_details:
      type: object
      properties:
        send_details:
          $ref: '#/components/schemas/Remittance_details.v1_details_amount_details_send_details'
        receive_amounts:
          $ref: '#/components/schemas/Remittance_details.v1_details_amount_details_receive_amounts'
      example:
        send_details:
          amount: amount
          subscription_pricing: true
          total_amount: total_amount
          total_fee: total_fee
          fixed_fee: fixed_fee
          currency: currency
          tax: tax
          rails_fee: rails_fee
        receive_amounts:
          amount: amount
          total_amount: total_amount
          total_fee: total_fee
          fixed_fee: fixed_fee
          currency: currency
          tax: tax
          rails_fee: rails_fee
    Remittance_details.v1_details:
      type: object
      properties:
        amount_deducted:
          type: string
          format: number
        calculation_mode:
          type: string
        amount_sent:
          type: string
          format: number
        send_currency:
          type: string
        fees:
          type: string
          format: number
        amount_to_receive:
          type: string
          format: number
        receive_currency:
          type: string
        receive_country:
          type: string
        provider:
          type: string
        delivery_method:
          type: string
        payout_agent:
          type: string
        routing_param:
          type: string
        customer_fx_percentage:
          type: string
        exchange_rate:
          type: string
          format: number
        transaction_id:
          type: string
        transaction_code:
          type: string
        cross_currency_rates:
          type: string
          format: number
        amount_before_fx_percentage:
          type: string
          format: number
        amount_before_fx_percentage_ccy:
          type: string
        amount_after_fx_percentage:
          type: string
          format: number
        amount_after_fx_percentage_ccy:
          type: string
        send_amount_provided_by_rails:
          type: string
          format: number
        send_amount_provided_by_rails_ccy:
          type: string
        actual_provider_amount_to_send:
          type: string
          format: number
        actual_provider_amount_to_send_ccy:
          type: string
        provider_amount_to_send:
          type: string
          format: number
        provider_amount_to_send_ccy:
          type: string
        provider_amount_fee:
          type: string
          format: number
        provider_amount_fee_ccy:
          type: string
        bank_name:
          type: string
        bank_code:
          type: string
        bank_branch_name:
          type: string
        bank_branch_code:
          type: string
        amount_details:
          $ref: '#/components/schemas/Remittance_details.v1_details_amount_details'
      example:
        routing_param: routing_param
        fees: fees
        actual_provider_amount_to_send: actual_provider_amount_to_send
        amount_details:
          send_details:
            amount: amount
            subscription_pricing: true
            total_amount: total_amount
            total_fee: total_fee
            fixed_fee: fixed_fee
            currency: currency
            tax: tax
            rails_fee: rails_fee
          receive_amounts:
            amount: amount
            total_amount: total_amount
            total_fee: total_fee
            fixed_fee: fixed_fee
            currency: currency
            tax: tax
            rails_fee: rails_fee
        receive_currency: receive_currency
        calculation_mode: calculation_mode
        provider_amount_fee_ccy: provider_amount_fee_ccy
        send_amount_provided_by_rails_ccy: send_amount_provided_by_rails_ccy
        amount_sent: amount_sent
        amount_to_receive: amount_to_receive
        payout_agent: payout_agent
        bank_branch_name: bank_branch_name
        provider: provider
        delivery_method: delivery_method
        customer_fx_percentage: customer_fx_percentage
        bank_name: bank_name
        provider_amount_to_send_ccy: provider_amount_to_send_ccy
        actual_provider_amount_to_send_ccy: actual_provider_amount_to_send_ccy
        transaction_id: transaction_id
        transaction_code: transaction_code
        bank_code: bank_code
        exchange_rate: exchange_rate
        provider_amount_fee: provider_amount_fee
        amount_after_fx_percentage_ccy: amount_after_fx_percentage_ccy
        send_amount_provided_by_rails: send_amount_provided_by_rails
        cross_currency_rates: cross_currency_rates
        amount_before_fx_percentage: amount_before_fx_percentage
        amount_after_fx_percentage: amount_after_fx_percentage
        provider_amount_to_send: provider_amount_to_send
        send_currency: send_currency
        amount_before_fx_percentage_ccy: amount_before_fx_percentage_ccy
        bank_branch_code: bank_branch_code
        amount_deducted: amount_deducted
        receive_country: receive_country
    Remittance_details.v1_attachments:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        method:
          type: string
      description: Link for attached documents if provided
      example:
        method: method
        rel: rel
        href: href
    Remittance_fees.v1_payer_details:
      type: object
      properties:
        code:
          type: string
        display_name:
          type: string
        partner_code:
          type: string
        partner_alpha_code:
          type: string
        partner_display_name:
          type: string
        rounding_decimal_number:
          type: string
        version:
          type: string
      example:
        rounding_decimal_number: rounding_decimal_number
        partner_alpha_code: partner_alpha_code
        code: code
        partner_code: partner_code
        display_name: display_name
        version: version
        partner_display_name: partner_display_name
    Remittance_fees.v1_full_details:
      type: object
      properties:
        hash_id:
          type: string
        address:
          type: string
        city:
          type: string
        country_code:
          type: string
          description: Payment mode of the the agent
        payment_mode_description:
          type: string
          description: Payment mode of the the agent
          enum:
          - Mobile Payment
          - Bank Account
        payer_code:
          type: string
        main_time_table:
          type: string
        secondary_time_table:
          type: string
        city_code:
          type: string
        telephone_1:
          type: string
        telephone_2:
          type: string
        fax:
          type: string
        state:
          type: string
        payment_currencies:
          type: string
        version:
          type: string
        required_fields:
          type: string
        required_documents:
          type: string
        beneficiary_type:
          type: string
          description: The type of transactions the agent is supposed to receive
          enum:
          - consumer
          - corporate
        agent_name:
          type: string
      example:
        payment_currencies: payment_currencies
        address: address
        main_time_table: main_time_table
        beneficiary_type: consumer
        agent_name: agent_name
        city: city
        telephone_2: telephone_2
        telephone_1: telephone_1
        city_code: city_code
        version: version
        payment_mode_description: Mobile Payment
        country_code: country_code
        required_fields: required_fields
        payer_code: payer_code
        secondary_time_table: secondary_time_table
        required_documents: required_documents
        state: state
        fax: fax
        hash_id: hash_id
    Remittance_fees.v1_cross_rate_details:
      type: object
      properties:
        id:
          type: string
        to_value:
          type: string
        from_value:
          type: string
      example:
        from_value: from_value
        to_value: to_value
        id: id
    Remittance_fees.v1_fees:
      type: object
      properties:
        id:
          type: string
        calculation_mode:
          type: string
        payment_mode:
          type: string
        payment_mode_description:
          type: string
        routing_param:
          type: string
        routing_type:
          type: string
        provider_currency:
          type: string
        send_currency:
          type: string
        receive_country:
          type: string
        receive_currency:
          type: string
        partner_name:
          type: string
        precision:
          type: string
        exchange_rate:
          type: number
        fixed_fee:
          type: string
        payer_details:
          $ref: '#/components/schemas/Remittance_fees.v1_payer_details'
        full_details:
          $ref: '#/components/schemas/Remittance_fees.v1_full_details'
        provider_exchange_rate:
          type: string
        cross_rate_details:
          $ref: '#/components/schemas/Remittance_fees.v1_cross_rate_details'
        fx_markup_percentage:
          type: string
        fx_rate:
          type: string
        pricings_id:
          type: string
        currency_fx_rate:
          type: number
        reverse_currency_fx_rate:
          type: number
      example:
        pricings_id: pricings_id
        routing_param: routing_param
        payment_mode: payment_mode
        full_details:
          payment_currencies: payment_currencies
          address: address
          main_time_table: main_time_table
          beneficiary_type: consumer
          agent_name: agent_name
          city: city
          telephone_2: telephone_2
          telephone_1: telephone_1
          city_code: city_code
          version: version
          payment_mode_description: Mobile Payment
          country_code: country_code
          required_fields: required_fields
          payer_code: payer_code
          secondary_time_table: secondary_time_table
          required_documents: required_documents
          state: state
          fax: fax
          hash_id: hash_id
        provider_exchange_rate: provider_exchange_rate
        receive_currency: receive_currency
        exchange_rate: 0.8008281904610115
        calculation_mode: calculation_mode
        routing_type: routing_type
        partner_name: partner_name
        precision: precision
        fx_markup_percentage: fx_markup_percentage
        reverse_currency_fx_rate: 1.4658129805029452
        fixed_fee: fixed_fee
        payment_mode_description: payment_mode_description
        payer_details:
          rounding_decimal_number: rounding_decimal_number
          partner_alpha_code: partner_alpha_code
          code: code
          partner_code: partner_code
          display_name: display_name
          version: version
          partner_display_name: partner_display_name
        send_currency: send_currency
        cross_rate_details:
          from_value: from_value
          to_value: to_value
          id: id
        currency_fx_rate: 6.027456183070403
        provider_currency: provider_currency
        id: id
        fx_rate: fx_rate
        receive_country: receive_country
    Remittance_payment_modes.v1_providers:
      type: object
      properties:
        name:
          type: string
          description: Provider code
        code:
          type: string
          description: Channel code
        provider_code:
          type: string
          description: Provider channel code
        countries:
          type: array
          description: Array of countries which supports the given payment mode
          items: {}
      example:
        code: code
        name: name
        provider_code: provider_code
        countries:
        - ""
        - ""
    Remittance_payment_modes.v1_modes:
      type: object
      properties:
        name:
          type: string
          description: Payment mode name
        mode:
          type: string
          description: Payment mode
        providers:
          type: array
          items:
            $ref: Remittance_payment_modes.v1_providers
      example:
        mode: mode
        name: name
        providers:
        - code: code
          name: name
          provider_code: provider_code
          countries:
          - ""
          - ""
        - code: code
          name: name
          provider_code: provider_code
          countries:
          - ""
          - ""
    Remittance_payment_modes.v1_count:
      type: object
      properties:
        total:
          type: integer
          description: Total number of payment modes retrieved
      example:
        total: 0
    Remittance_providers.v1_types:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        details:
          type: string
        links:
          type: array
          items:
            $ref: Card_full.v1_links
      example:
        code: code
        name: name
        description: description
        details: details
        links:
        - method: method
          rel: rel
          href: href
        - method: method
          rel: rel
          href: href
    Remittance_providers.v1_count:
      type: object
      properties:
        total:
          type: number
      example:
        total: 0.8008281904610115
    Remittance_send.v1_transfer_details:
      type: object
      properties:
        calculation_mode:
          type: string
        initial_amount:
          type: string
        reference_number:
          type: string
        amount_to_send:
          type: string
        amount_to_send_currency:
          type: string
        amount_to_receive:
          type: string
        amount_to_receive_currency:
          type: string
        receive_currency:
          type: string
        provider_exchange_rate:
          type: string
        exchange_rate:
          type: string
        fixed_fee:
          type: string
        commission:
          type: string
        total_amount:
          type: string
        amount_to_be_deducted:
          type: string
        amount_details:
          $ref: Remittance_calculate.v1_calculate_result_amount_details
      example:
        provider_exchange_rate: provider_exchange_rate
        amount_details:
          send_details:
            amount: amount
            subscription_pricing: subscription_pricing
            total_amount: total_amount
            total_fee: total_fee
            fixed_fee: fixed_fee
            currency: currency
            tax: tax
            rails_fee: rails_fee
          receive_amounts: null
        receive_currency: receive_currency
        amount_to_be_deducted: amount_to_be_deducted
        exchange_rate: exchange_rate
        calculation_mode: calculation_mode
        amount_to_send: amount_to_send
        amount_to_receive_currency: amount_to_receive_currency
        fixed_fee: fixed_fee
        initial_amount: initial_amount
        amount_to_send_currency: amount_to_send_currency
        reference_number: reference_number
        amount_to_receive: amount_to_receive
        total_amount: total_amount
        commission: commission
    Transaction_funds_debitreversal.v1_additional_details:
      type: object
      properties:
        AAV:
          type: string
        CSC:
          type: string
    Transaction_funds_transfer.v1_sender:
      type: object
      properties:
        type:
          type: string
          enum:
          - sms
        id:
          type: string
        sms:
          type: string
      example:
        sms: sms
        id: id
        type: sms
    Transaction_funds_transfer.v1_date:
      type: object
      properties:
        created:
          type: string
          format: date-time
        expiry:
          type: string
          format: date-time
      example:
        created: 2000-01-23T04:56:07.000+00:00
        expiry: 2000-01-23T04:56:07.000+00:00
    Transaction_oauth_funds_sor_transaction:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
      example:
        description: description
        id: id
    Transaction_rules.v1_inner:
      type: object
      properties:
        id:
          type: string
        attribute:
          type: string
          enum:
          - transaction_type
          - merchant_id
          - terminal_id
          - mcc
          - acquiring_country_code
          - pos_entry_mode_code
        action:
          type: string
          enum:
          - blacklist
          - whitelist
        value:
          type: string
        user_state:
          type: string
          nullable: true
          enum:
          - pre-kyc
          - post-kyc
        card_type_code:
          type: string
      example:
        action: blacklist
        card_type_code: card_type_code
        id: id
        attribute: transaction_type
        value: value
        user_state: pre-kyc
    User_authentications.v1_documents:
      properties:
        link:
          type: string
          example: https://s3/image.jpg
        kyc_type:
          type: string
          example: KYC_TYPE
        document_type:
          type: string
          example: doc type
    User_balance.v1_wallet_available:
      type: object
      properties:
        currency:
          type: string
          example: SGD
        amount:
          type: number
          format: float
          example: 100
    User_balance.v1_wallet_withholding:
      type: object
      properties:
        currency:
          type: string
          example: SGD
        amount:
          type: number
          format: float
          example: 0
    User_balance.v1_wallet:
      type: object
      properties:
        available:
          $ref: '#/components/schemas/User_balance.v1_wallet_available'
        withholding:
          $ref: '#/components/schemas/User_balance.v1_wallet_withholding'
    User_balance.v1_card:
      type: object
      properties:
        available:
          $ref: User_balance.v1_wallet_available
        withholding:
          $ref: User_balance.v1_wallet_withholding
    User_full.v1_date:
      type: object
      properties:
        registration:
          type: string
          format: date-time
      example:
        registration: 2000-01-23T04:56:07.000+00:00
    User_limit.v1_card_limits:
      type: object
      properties:
        interval:
          type: string
        amount:
          type: number
        count:
          type: number
      example:
        amount: 0.8008281904610115
        count: 6.027456183070403
        interval: interval
    User_limit.v1_program_limits_pre_kyc:
      type: object
      properties:
        amount:
          type: number
        count:
          type: number
        interval:
          type: string
      example:
        amount: 1.4658129805029452
        count: 5.962133916683182
        interval: interval
    User_limit.v1_program_limits_post_kyc:
      type: object
      properties:
        amount:
          type: number
        interval:
          type: string
        count:
          type: number
      example:
        amount: 5.637376656633329
        count: 2.3021358869347655
        interval: interval
    User_limit.v1_program_limits:
      type: object
      properties:
        pre_kyc:
          type: array
          items:
            $ref: User_limit.v1_program_limits_pre_kyc
        post_kyc:
          type: array
          items:
            $ref: User_limit.v1_program_limits_post_kyc
      description: Cards per interval limits value
      example:
        post_kyc:
        - amount: 5.637376656633329
          count: 2.3021358869347655
          interval: interval
        - amount: 5.637376656633329
          count: 2.3021358869347655
          interval: interval
        pre_kyc:
        - amount: 1.4658129805029452
          count: 5.962133916683182
          interval: interval
        - amount: 1.4658129805029452
          count: 5.962133916683182
          interval: interval
    User_report_object_condensed.v1_name:
      type: object
      properties:
        first:
          type: string
          example: Spring
        middle:
          type: string
          example: Winter
        last:
          type: string
          example: Fall
        preferred:
          type: string
          example: Spring Fall
    User_report_object_condensed.v1_mobile:
      type: object
      properties:
        country_code:
          type: string
          example: "63"
        number:
          type: string
          example: "11111111"
    User_report_object_condensed.v1_identification:
      type: object
      properties:
        id_type:
          type: string
          example: voters_id
        id_number:
          type: string
          example: "0001"
        issue_date:
          type: string
          example: 2019-03-02T15:08:25+05:30
        expiry_date:
          type: string
          example: 2035-03-02T15:08:25+05:30
    User_report_object_condensed.v1_status:
      type: object
      properties:
        is_active:
          type: number
          default: 1
          enum:
          - 1
          - 0
        state:
          type: string
          example: active
    User_report_object_expanded.v1_address:
      type: object
      properties:
        residential:
          $ref: '#/components/schemas/User_address.v1'
        billing:
          $ref: '#/components/schemas/User_address.v1'
    Virtual_account_transaction_details:
      type: object
      properties:
        bank_ref:
          type: string
        customer_ref:
          type: string
        journal_id:
          type: string
        topup_type:
          type: string
        virtual_account_number:
          type: string
      example:
        journal_id: journal_id
        bank_ref: bank_ref
        topup_type: topup_type
        customer_ref: customer_ref
        virtual_account_number: virtual_account_number
    Wallet_full.v1_funds:
      required:
      - available
      - withholding
      type: object
      properties:
        available:
          $ref: '#/components/schemas/Balance_root.v1'
        withholding:
          $ref: '#/components/schemas/Balance_root.v1'
      example:
        withholding: null
        available:
          amount: amount
          name: name
          currency: currency
    Wallet_full.v1_date:
      type: object
      properties:
        expiry:
          pattern: "([0-9]{4})-(?:[0-9]{2})"
          type: string
          description: Expiry of the payment instrument
          default: YYYY-MM
        issued:
          type: string
          description: Date of issue of payment instrument
          format: date
        closed:
          type: string
          nullable: true
      example:
        closed: closed
        expiry: YYYY-MM
        issued: 2000-01-23
    Wallet_full.v1_image:
      type: object
      properties:
        small:
          type: string
          format: uri
        medium:
          type: string
          format: uri
        large:
          type: string
          format: uri
      example:
        small: http://example.com/aeiou
        large: http://example.com/aeiou
        medium: http://example.com/aeiou
    Webhooks.v1_inner:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        event_name:
          type: string
      example:
        event_name: event_name
        id: id
        url: url
    inline_response_200_4_2fa:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
      description: Two factor authentication response.
      example:
        message: message
        status: status
    inline_response_200_14_date:
      type: object
      properties:
        expiry:
          type: string
        issued:
          type: string
        closed:
          type: string
          nullable: true
      example:
        closed: closed
        expiry: expiry
        issued: issued
    inline_response_200_19_count:
      type: object
      properties:
        total:
          type: integer
          description: Total number of records for the resource
      example:
        total: 0
    inline_response_200_24_count:
      required:
      - total
      type: object
      properties:
        total:
          type: number
      example:
        total: 0.8008281904610115
    inline_response_200_25_links:
      required:
      - href
      - method
      - rel
      type: object
      properties:
        rel:
          minLength: 1
          type: string
        href:
          minLength: 1
          type: string
        method:
          minLength: 1
          type: string
      example:
        method: method
        rel: rel
        href: href
    inline_response_200_25_exceptions:
      required:
      - date_added
      - date_expiry
      - first_name
      - id
      - last_name
      - type
      properties:
        id:
          minLength: 1
          type: string
        first_name:
          minLength: 1
          type: string
        last_name:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        date_added:
          minLength: 1
          type: string
        date_expiry:
          minLength: 1
          type: string
        links:
          $ref: '#/components/schemas/inline_response_200_25_links'
      example:
        date_added: date_added
        last_name: last_name
        links:
          method: method
          rel: rel
          href: href
        id: id
        type: type
        first_name: first_name
        date_expiry: date_expiry
    inline_response_200_29_id_types:
      type: object
      properties:
        primary:
          type: array
          anyOf:
          - type: array
            items:
              $ref: '#/components/schemas/Basic_enumeration_identification'
      example:
        primary: ""
    inline_response_200_40_date:
      type: object
      properties:
        registration:
          type: string
      example:
        registration: registration
    inline_response_200_42_links:
      properties:
        prev:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/virtual_accounts?page=1&records_per_page=10
        next:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/virtual_accounts?page=10&records_per_page=10
      example:
        next: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/virtual_accounts?page=10&records_per_page=10
        prev: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/virtual_accounts?page=1&records_per_page=10
    inline_response_200_43_links:
      properties:
        prev:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/virtual_accounts?page=1&records_per_page=10
        next:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/virtual_accounts?page=10&records_per_page=10
      example:
        next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/virtual_accounts?page=10&records_per_page=10
        prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/virtual_accounts?page=1&records_per_page=10
    inline_response_200_45_links:
      properties:
        prev:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/bank_accounts?page=1&records_per_page=10
        next:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/bank_accounts?page=10&records_per_page=10
      example:
        next: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/bank_accounts?page=10&records_per_page=10
        prev: https://beta-api.mmvpay.com/inmmfis/v1/users/wallets/bank_accounts?page=1&records_per_page=10
    inline_response_200_47_links:
      properties:
        prev:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/bank_accounts?page=1&records_per_page=10
        next:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/bank_accounts?page=10&records_per_page=10
      example:
        next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/bank_accounts?page=10&records_per_page=10
        prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/bank_accounts?page=1&records_per_page=10
    inline_response_200_48_links:
      properties:
        prev:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/standing_instructions?page=1&records_per_page=10
        next:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/standing_instructions?page=10&records_per_page=10
      example:
        next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/standing_instructions?page=10&records_per_page=10
        prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/standing_instructions?page=1&records_per_page=10
    inline_response_200_49_links:
      properties:
        prev:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/fund_transfers?page=1&records_per_page=10
        next:
          type: string
          example: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/fund_transfers?page=10&records_per_page=10
      example:
        next: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/fund_transfers?page=10&records_per_page=10
        prev: https://beta-api.mmvpay.com/inmmfis/v1/oauth/consumer/wallets/fund_transfers?page=1&records_per_page=10
    inline_response_200_51_details:
      type: object
      properties:
        unique_reference_number:
          type: string
          description: Reference number given by the remittance provider.
        transaction_code:
          type: string
          description: Transaction code needed by the user to claim the remittance.
        partner_confirmation_number:
          type: string
          description: Partner confirmation number needed by the user to claim the
            remittance (optional).
      example:
        transaction_code: transaction_code
        partner_confirmation_number: partner_confirmation_number
        unique_reference_number: unique_reference_number
    inline_response_200_51_transactions:
      type: object
      properties:
        id:
          type: string
          description: Reference ID of the transaction that was confirmed.
        status:
          type: string
          description: Status of the confirmation.
        description:
          type: string
          description: Describes the result of the confirmation.
        details:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_51_details'
      example:
        description: description
        details:
        - transaction_code: transaction_code
          partner_confirmation_number: partner_confirmation_number
          unique_reference_number: unique_reference_number
        - transaction_code: transaction_code
          partner_confirmation_number: partner_confirmation_number
          unique_reference_number: unique_reference_number
        id: id
        status: status
    inline_response_200_54_count:
      type: object
      properties:
        total:
          type: integer
          description: Total count of agents retrieved
      example:
        total: 0
    inline_response_200_54_link:
      properties:
        rel:
          type: string
          description: Identifier if next or previous page
        href:
          type: string
          description: Pagination link
        method:
          type: string
          description: Pagination method
      example:
        method: method
        rel: rel
        href: href
  parameters:
    X-Auth-User-ID:
      name: X-Auth-User-ID
      in: header
      description: MatchMove provided hash ID for the user
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 32
        type: string
  securitySchemes:
    basicAuth:
      type: http
      description: Basic Authentication (Client_id/Secret)
      scheme: basic
  links:
    GetUserByUserId:
      operationId: deleteUserId
      parameters:
        user_id: $response.body#/id
      description: "The `id` value returned in the response can be used as the `user_id`\
        \ parameter in `GET /users/{user_id}`.\n"
    GetCardByCardId:
      operationId: getCard
      parameters:
        card_id: $response.body#/id
      description: "The `id` value returned in the response can be used as the `card_id`\
        \ parameter in `GET /users/wallets/cards/{cards_id}`.\n"
